; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\lcd.o --depend=.\Obj\lcd.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User -I..\BaseDrive -I..\ExternalDrive\Lcd -I..\ExternalDrive\Fat_spi -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Obj\lcd.crf ..\ExternalDrive\Lcd\lcd.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_WriteRAM PROC
;;;871    ************************************************************************************/
;;;872    void LCD_WriteRAM(u16 RGB_Code)
000000  f04f41d8          MOV      r1,#0x6c000000
;;;873    { 
;;;874      /* Write 16-bit GRAM Reg */
;;;875      LCD->LCD_RAM = RGB_Code;
000004  8048              STRH     r0,[r1,#2]
;;;876    
;;;877    }
000006  4770              BX       lr
;;;878    
                          ENDP

                  LCD_WriteRAM_Prepare PROC
;;;858    ************************************************************************************/
;;;859    void LCD_WriteRAM_Prepare(void)
000008  2022              MOVS     r0,#0x22
;;;860    {
;;;861      LCD->LCD_REG = R34;
00000a  f04f41d8          MOV      r1,#0x6c000000
00000e  8008              STRH     r0,[r1,#0]
;;;862    }
000010  4770              BX       lr
;;;863    
                          ENDP

                  LCD_WriteReg PROC
;;;825    ************************************************************************************/
;;;826    void LCD_WriteReg(u8 LCD_Reg, u16 LCD_RegValue)
000012  f04f42d8          MOV      r2,#0x6c000000
;;;827    {
;;;828      /* Write 16-bit Index, then Write Reg */
;;;829      LCD->LCD_REG = LCD_Reg;
000016  8010              STRH     r0,[r2,#0]
;;;830      /* Write 16-bit Reg */
;;;831      LCD->LCD_RAM = LCD_RegValue;
000018  8051              STRH     r1,[r2,#2]
;;;832    }
00001a  4770              BX       lr
;;;833    
                          ENDP

                  LCD_SetCursor PROC
;;;391    ****************************************************************************/
;;;392    void LCD_SetCursor(u8 Xpos, u16 Ypos)
00001c  b510              PUSH     {r4,lr}
;;;393    {
00001e  4603              MOV      r3,r0
000020  460c              MOV      r4,r1
;;;394     	if(DeviceCode==0x8999||DeviceCode==0x9919)
000022  48ff              LDR      r0,|L1.1056|
000024  8800              LDRH     r0,[r0,#0]  ; DeviceCode
000026  f5a04109          SUB      r1,r0,#0x8900
00002a  3999              SUBS     r1,r1,#0x99
00002c  d005              BEQ      |L1.58|
00002e  48fc              LDR      r0,|L1.1056|
000030  8800              LDRH     r0,[r0,#0]  ; DeviceCode
000032  f5a04119          SUB      r1,r0,#0x9900
000036  3919              SUBS     r1,r1,#0x19
000038  d108              BNE      |L1.76|
                  |L1.58|
;;;395    	{
;;;396    		LCD_WriteReg(0x004E, Xpos);
00003a  4619              MOV      r1,r3
00003c  204e              MOVS     r0,#0x4e
00003e  f7fffffe          BL       LCD_WriteReg
;;;397    		LCD_WriteReg(0X004F, Ypos);
000042  4621              MOV      r1,r4
000044  204f              MOVS     r0,#0x4f
000046  f7fffffe          BL       LCD_WriteReg
00004a  e007              B        |L1.92|
                  |L1.76|
;;;398    	}
;;;399    	else 
;;;400    	{
;;;401    		LCD_WriteReg(0x0020, Xpos);
00004c  4619              MOV      r1,r3
00004e  2020              MOVS     r0,#0x20
000050  f7fffffe          BL       LCD_WriteReg
;;;402    		LCD_WriteReg(0X0021, Ypos);
000054  4621              MOV      r1,r4
000056  2021              MOVS     r0,#0x21
000058  f7fffffe          BL       LCD_WriteReg
                  |L1.92|
;;;403    	}
;;;404    }
00005c  bd10              POP      {r4,pc}
;;;405    
                          ENDP

                  LCD_SetPoint PROC
;;;49     ****************************************************************************/
;;;50     void LCD_SetPoint(u16 x,u16 y,u16 point)
00005e  b570              PUSH     {r4-r6,lr}
;;;51     {
000060  4604              MOV      r4,r0
000062  460d              MOV      r5,r1
000064  4616              MOV      r6,r2
;;;52       if ( (x>240)||(y>360) ) return;
000066  2cf0              CMP      r4,#0xf0
000068  dc02              BGT      |L1.112|
00006a  f5b57fb4          CMP      r5,#0x168
00006e  dd00              BLE      |L1.114|
                  |L1.112|
;;;53     
;;;54       LCD_SetCursor(x,y);
;;;55       LCD_WriteRAM_Prepare();
;;;56       LCD_WriteRAM(point);
;;;57     }
000070  bd70              POP      {r4-r6,pc}
                  |L1.114|
000072  4629              MOV      r1,r5                 ;54
000074  b2e0              UXTB     r0,r4                 ;54
000076  f7fffffe          BL       LCD_SetCursor
00007a  f7fffffe          BL       LCD_WriteRAM_Prepare
00007e  4630              MOV      r0,r6                 ;56
000080  f7fffffe          BL       LCD_WriteRAM
000084  bf00              NOP      
000086  e7f3              B        |L1.112|
;;;58     
                          ENDP

                  LCD_PutChar PROC
;;;69     ****************************************************************************/
;;;70     void LCD_PutChar(u16 x,u16 y,u8 c,u16 charColor,u16 bkColor)
000088  e92d4ff0          PUSH     {r4-r11,lr}
;;;71     {
00008c  4606              MOV      r6,r0
00008e  460f              MOV      r7,r1
000090  4690              MOV      r8,r2
000092  4699              MOV      r9,r3
000094  f8dda024          LDR      r10,[sp,#0x24]
;;;72       u16 i=0;
000098  2400              MOVS     r4,#0
;;;73       u16 j=0;
00009a  2500              MOVS     r5,#0
;;;74       
;;;75       u16 tmp_char=0;
00009c  46a3              MOV      r11,r4
;;;76     
;;;77       for (i=0;i<24;i++)
00009e  bf00              NOP      
0000a0  e024              B        |L1.236|
                  |L1.162|
;;;78       {
;;;79         tmp_char=ASCII_Table[((c-0x20)*24)+i];	 //减去32的偏移，是因为字符表从空格开始的，参考字符表那的注释
0000a2  f1a80020          SUB      r0,r8,#0x20
0000a6  eb000040          ADD      r0,r0,r0,LSL #1
0000aa  eb0400c0          ADD      r0,r4,r0,LSL #3
0000ae  49dd              LDR      r1,|L1.1060|
0000b0  f831b010          LDRH     r11,[r1,r0,LSL #1]
;;;80         for (j=0;j<16;j++)
0000b4  2500              MOVS     r5,#0
0000b6  e015              B        |L1.228|
                  |L1.184|
;;;81         {
;;;82     //      if ( (tmp_char >> 15-j) & 0x01 == 0x01)	按照上面的显示，字符是倒过来的，到这里改过来就行了
;;;83     	if ( (tmp_char >> j) & 0x01 == 0x01)
0000b8  fa4bf005          ASR      r0,r11,r5
0000bc  f0100f01          TST      r0,#1
0000c0  d007              BEQ      |L1.210|
;;;84           {
;;;85             LCD_SetPoint(x+i,y+j,charColor); // 字符颜色
0000c2  197a              ADDS     r2,r7,r5
0000c4  b291              UXTH     r1,r2
0000c6  1932              ADDS     r2,r6,r4
0000c8  b290              UXTH     r0,r2
0000ca  464a              MOV      r2,r9
0000cc  f7fffffe          BL       LCD_SetPoint
0000d0  e006              B        |L1.224|
                  |L1.210|
;;;86           }
;;;87           else
;;;88           {
;;;89             LCD_SetPoint(x+i,y+j,bkColor); // 背景颜色
0000d2  197a              ADDS     r2,r7,r5
0000d4  b291              UXTH     r1,r2
0000d6  1932              ADDS     r2,r6,r4
0000d8  b290              UXTH     r0,r2
0000da  4652              MOV      r2,r10
0000dc  f7fffffe          BL       LCD_SetPoint
                  |L1.224|
0000e0  1c68              ADDS     r0,r5,#1              ;80
0000e2  b285              UXTH     r5,r0                 ;80
                  |L1.228|
0000e4  2d10              CMP      r5,#0x10              ;80
0000e6  dbe7              BLT      |L1.184|
0000e8  1c60              ADDS     r0,r4,#1              ;77
0000ea  b284              UXTH     r4,r0                 ;77
                  |L1.236|
0000ec  2c18              CMP      r4,#0x18              ;77
0000ee  dbd8              BLT      |L1.162|
;;;90           }
;;;91         }
;;;92       }
;;;93     }
0000f0  e8bd8ff0          POP      {r4-r11,pc}
;;;94     
                          ENDP

                  LCD_DisplayStringLine PROC
;;;102    ****************************************************************************/
;;;103    void LCD_DisplayStringLine(u8 Line, u8 *ptr, u16 charColor, u16 bkColor)
0000f4  e92d43f8          PUSH     {r3-r9,lr}
;;;104    {
0000f8  4680              MOV      r8,r0
0000fa  460c              MOV      r4,r1
0000fc  4615              MOV      r5,r2
0000fe  4699              MOV      r9,r3
;;;105      u32 i = 0;
000100  2600              MOVS     r6,#0
;;;106      u16 refcolumn = 0;
000102  2700              MOVS     r7,#0
;;;107    
;;;108      /* Send the string character by character on lCD */
;;;109      while ((*ptr != 0) & (i < 40))
000104  e00c              B        |L1.288|
                  |L1.262|
;;;110      {
;;;111        /* Display one character on LCD */
;;;112    //    LCD_PutChar(refcolumn, Line, *ptr, charColor, bkColor);
;;;113    	LCD_PutChar(Line, refcolumn, *ptr, charColor, bkColor);
000106  f8cd9000          STR      r9,[sp,#0]
00010a  7822              LDRB     r2,[r4,#0]
00010c  462b              MOV      r3,r5
00010e  4639              MOV      r1,r7
000110  4640              MOV      r0,r8
000112  f7fffffe          BL       LCD_PutChar
;;;114        /* Decrement the column position by 16 */
;;;115        refcolumn += 16;
000116  f1070010          ADD      r0,r7,#0x10
00011a  b287              UXTH     r7,r0
;;;116        /* Point on the next character */
;;;117        ptr++;
00011c  1c64              ADDS     r4,r4,#1
;;;118        /* Increment the character counter */
;;;119        i++;
00011e  1c76              ADDS     r6,r6,#1
                  |L1.288|
000120  7820              LDRB     r0,[r4,#0]            ;109
000122  b108              CBZ      r0,|L1.296|
000124  2001              MOVS     r0,#1                 ;109
000126  e000              B        |L1.298|
                  |L1.296|
000128  2000              MOVS     r0,#0                 ;109
                  |L1.298|
00012a  2e28              CMP      r6,#0x28              ;109
00012c  d201              BCS      |L1.306|
00012e  2101              MOVS     r1,#1                 ;109
000130  e000              B        |L1.308|
                  |L1.306|
000132  2100              MOVS     r1,#0                 ;109
                  |L1.308|
000134  4208              TST      r0,r1                 ;109
000136  d1e6              BNE      |L1.262|
;;;120      }
;;;121    }
000138  e8bd83f8          POP      {r3-r9,pc}
;;;122    
                          ENDP

                  LCD_BGR2RGB PROC
;;;130    ****************************************************************************/
;;;131    u16 LCD_BGR2RGB(u16 c)
00013c  b530              PUSH     {r4,r5,lr}
;;;132    {
00013e  4601              MOV      r1,r0
;;;133      u16  r, g, b, rgb;
;;;134    
;;;135      b = (c>>0)  & 0x1f;
000140  f001041f          AND      r4,r1,#0x1f
;;;136      g = (c>>5)  & 0x3f;
000144  f3c11345          UBFX     r3,r1,#5,#6
;;;137      r = (c>>11) & 0x1f;
000148  0aca              LSRS     r2,r1,#11
;;;138      
;;;139      rgb =  (b<<11) + (g<<5) + (r<<0);
00014a  02e5              LSLS     r5,r4,#11
00014c  eb051543          ADD      r5,r5,r3,LSL #5
000150  4415              ADD      r5,r5,r2
000152  b2a8              UXTH     r0,r5
;;;140    
;;;141      return( rgb );
;;;142    }
000154  bd30              POP      {r4,r5,pc}
;;;143    
                          ENDP

                  LCD_ReadReg PROC
;;;841    ************************************************************************************/
;;;842    u16 LCD_ReadReg(u8 LCD_Reg)
000156  4601              MOV      r1,r0
;;;843    {
;;;844      /* Write 16-bit Index (then Read Reg) */
;;;845      LCD->LCD_REG = LCD_Reg;
000158  f04f40d8          MOV      r0,#0x6c000000
00015c  8001              STRH     r1,[r0,#0]
;;;846      LCD->LCD_RAM;
00015e  8840              LDRH     r0,[r0,#2]
;;;847      /* Read 16-bit Reg */
;;;848      return (LCD->LCD_RAM);
000160  f04f40d8          MOV      r0,#0x6c000000
000164  8840              LDRH     r0,[r0,#2]
;;;849    }
000166  4770              BX       lr
;;;850    
                          ENDP

                  LCD_FSMCConfig PROC
;;;1008   ************************************************************************************/
;;;1009   void LCD_FSMCConfig(void)
000168  b500              PUSH     {lr}
;;;1010   {
00016a  b097              SUB      sp,sp,#0x5c
;;;1011     FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
;;;1012     FSMC_NORSRAMTimingInitTypeDef  p;
;;;1013   
;;;1014   /*-- FSMC Configuration ------------------------------------------------------*/
;;;1015   /*----------------------- SRAM Bank 4 ----------------------------------------*/
;;;1016     /* FSMC_Bank1_NORSRAM4 configuration */
;;;1017     p.FSMC_AddressSetupTime = 0;
00016c  2000              MOVS     r0,#0
00016e  9001              STR      r0,[sp,#4]
;;;1018     p.FSMC_AddressHoldTime = 0;
000170  9002              STR      r0,[sp,#8]
;;;1019     p.FSMC_DataSetupTime = 2;
000172  2002              MOVS     r0,#2
000174  9003              STR      r0,[sp,#0xc]
;;;1020     p.FSMC_BusTurnAroundDuration = 0;
000176  2000              MOVS     r0,#0
000178  9004              STR      r0,[sp,#0x10]
;;;1021     p.FSMC_CLKDivision = 0;
00017a  9005              STR      r0,[sp,#0x14]
;;;1022     p.FSMC_DataLatency = 0;
00017c  9006              STR      r0,[sp,#0x18]
;;;1023     p.FSMC_AccessMode = FSMC_AccessMode_A;
00017e  9007              STR      r0,[sp,#0x1c]
;;;1024   
;;;1025     /* Color LCD configuration ------------------------------------
;;;1026        LCD configured as follow:
;;;1027           - Data/Address MUX = Disable
;;;1028           - Memory Type = SRAM
;;;1029           - Data Width = 16bit
;;;1030           - Write Operation = Enable
;;;1031           - Extended Mode = Enable
;;;1032           - Asynchronous Wait = Disable */
;;;1033     FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM4;
000180  2006              MOVS     r0,#6
000182  9008              STR      r0,[sp,#0x20]
;;;1034     FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable;
000184  2000              MOVS     r0,#0
000186  9009              STR      r0,[sp,#0x24]
;;;1035     FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_SRAM;
000188  900a              STR      r0,[sp,#0x28]
;;;1036     FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
00018a  2010              MOVS     r0,#0x10
00018c  900b              STR      r0,[sp,#0x2c]
;;;1037     FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
00018e  2000              MOVS     r0,#0
000190  900c              STR      r0,[sp,#0x30]
;;;1038     FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
000192  900e              STR      r0,[sp,#0x38]
;;;1039     FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
000194  900f              STR      r0,[sp,#0x3c]
;;;1040     FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
000196  9010              STR      r0,[sp,#0x40]
;;;1041     FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
000198  f44f5080          MOV      r0,#0x1000
00019c  9011              STR      r0,[sp,#0x44]
;;;1042     FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
00019e  2000              MOVS     r0,#0
0001a0  9012              STR      r0,[sp,#0x48]
;;;1043     FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
0001a2  9013              STR      r0,[sp,#0x4c]
;;;1044     FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
0001a4  9014              STR      r0,[sp,#0x50]
;;;1045     FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
0001a6  a801              ADD      r0,sp,#4
0001a8  9015              STR      r0,[sp,#0x54]
;;;1046     FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
0001aa  9016              STR      r0,[sp,#0x58]
;;;1047   
;;;1048     FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure);  
0001ac  a808              ADD      r0,sp,#0x20
0001ae  f7fffffe          BL       FSMC_NORSRAMInit
;;;1049   
;;;1050     /* BANK 4 (of NOR/SRAM Bank 1~4) is enabled */
;;;1051     FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM4, ENABLE);
0001b2  2101              MOVS     r1,#1
0001b4  2006              MOVS     r0,#6
0001b6  f7fffffe          BL       FSMC_NORSRAMCmd
;;;1052   }
0001ba  b017              ADD      sp,sp,#0x5c
0001bc  bd00              POP      {pc}
                          ENDP

                  LCD_CtrlLinesConfig PROC
;;;955    ************************************************************************************/
;;;956    void LCD_CtrlLinesConfig(void)
0001be  b508              PUSH     {r3,lr}
;;;957    {
;;;958      GPIO_InitTypeDef GPIO_InitStructure;
;;;959    
;;;960      /* Enable FSMC, GPIOD, GPIOE, GPIOF, GPIOG and AFIO clocks */
;;;961      RCC_AHBPeriphClockCmd(RCC_AHBPeriph_FSMC, ENABLE);
0001c0  2101              MOVS     r1,#1
0001c2  0208              LSLS     r0,r1,#8
0001c4  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;962    
;;;963      RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD | RCC_APB2Periph_GPIOE |
0001c8  2101              MOVS     r1,#1
0001ca  f24010e1          MOV      r0,#0x1e1
0001ce  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;964                             RCC_APB2Periph_GPIOF | RCC_APB2Periph_GPIOG |
;;;965                             RCC_APB2Periph_AFIO, ENABLE);
;;;966    
;;;967      /* Set PD.00(D2), PD.01(D3), PD.04(NOE), PD.05(NWE), PD.08(D13), PD.09(D14),
;;;968         PD.10(D15), PD.14(D0), PD.15(D1) as alternate 
;;;969         function push pull */
;;;970      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_4 | GPIO_Pin_5 |
0001d2  f24c7033          MOV      r0,#0xc733
0001d6  f8ad0000          STRH     r0,[sp,#0]
;;;971                                    GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_14 | 
;;;972                                    GPIO_Pin_15;
;;;973      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0001da  2003              MOVS     r0,#3
0001dc  f88d0002          STRB     r0,[sp,#2]
;;;974      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
0001e0  2018              MOVS     r0,#0x18
0001e2  f88d0003          STRB     r0,[sp,#3]
;;;975      GPIO_Init(GPIOD, &GPIO_InitStructure);
0001e6  4669              MOV      r1,sp
0001e8  488f              LDR      r0,|L1.1064|
0001ea  f7fffffe          BL       GPIO_Init
;;;976    
;;;977      /* Set PE.07(D4), PE.08(D5), PE.09(D6), PE.10(D7), PE.11(D8), PE.12(D9), PE.13(D10),
;;;978         PE.14(D11), PE.15(D12) as alternate function push pull */
;;;979      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | 
0001ee  f64f70c0          MOV      r0,#0xffc0
0001f2  f8ad0000          STRH     r0,[sp,#0]
;;;980                                    GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | 
;;;981                                    GPIO_Pin_15;
;;;982      GPIO_Init(GPIOE, &GPIO_InitStructure);
0001f6  4669              MOV      r1,sp
0001f8  488c              LDR      r0,|L1.1068|
0001fa  f7fffffe          BL       GPIO_Init
;;;983    
;;;984      GPIO_WriteBit(GPIOE, GPIO_Pin_6, Bit_SET);
0001fe  2201              MOVS     r2,#1
000200  2140              MOVS     r1,#0x40
000202  488a              LDR      r0,|L1.1068|
000204  f7fffffe          BL       GPIO_WriteBit
;;;985    
;;;986      /* Set PF.00(A0 (RS)) as alternate function push pull */
;;;987      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
000208  2001              MOVS     r0,#1
00020a  f8ad0000          STRH     r0,[sp,#0]
;;;988      GPIO_Init(GPIOF, &GPIO_InitStructure);
00020e  4669              MOV      r1,sp
000210  4887              LDR      r0,|L1.1072|
000212  f7fffffe          BL       GPIO_Init
;;;989    
;;;990      /* Set PG.12(NE4 (LCD/CS)) as alternate function push pull - CE3(LCD /CS) */
;;;991      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
000216  f44f5080          MOV      r0,#0x1000
00021a  f8ad0000          STRH     r0,[sp,#0]
;;;992      GPIO_Init(GPIOG, &GPIO_InitStructure);
00021e  4669              MOV      r1,sp
000220  4884              LDR      r0,|L1.1076|
000222  f7fffffe          BL       GPIO_Init
;;;993    
;;;994      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
000226  2004              MOVS     r0,#4
000228  f8ad0000          STRH     r0,[sp,#0]
;;;995      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00022c  2003              MOVS     r0,#3
00022e  f88d0002          STRB     r0,[sp,#2]
;;;996      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000232  2010              MOVS     r0,#0x10
000234  f88d0003          STRB     r0,[sp,#3]
;;;997      GPIO_Init(GPIOE, &GPIO_InitStructure);
000238  4669              MOV      r1,sp
00023a  487c              LDR      r0,|L1.1068|
00023c  f7fffffe          BL       GPIO_Init
;;;998      GPIO_WriteBit(GPIOE, GPIO_Pin_2, Bit_RESET);
000240  2200              MOVS     r2,#0
000242  2104              MOVS     r1,#4
000244  4879              LDR      r0,|L1.1068|
000246  f7fffffe          BL       GPIO_WriteBit
;;;999    }
00024a  bd08              POP      {r3,pc}
;;;1000   
                          ENDP

                  STM3210E_LCD_Init PROC
;;;151    ****************************************************************************/
;;;152    void STM3210E_LCD_Init(void)
00024c  b510              PUSH     {r4,lr}
;;;153    { 
;;;154    /* LCD管脚初始化 --------------------------------------------*/
;;;155      LCD_CtrlLinesConfig();
00024e  f7fffffe          BL       LCD_CtrlLinesConfig
;;;156    
;;;157    /* FSMC初始化 -----------------------------------------------*/
;;;158      LCD_FSMCConfig();
000252  f7fffffe          BL       LCD_FSMCConfig
;;;159    
;;;160      DeviceCode = LCD_ReadReg(0x0000); 
000256  2000              MOVS     r0,#0
000258  f7fffffe          BL       LCD_ReadReg
00025c  4970              LDR      r1,|L1.1056|
00025e  8008              STRH     r0,[r1,#0]
;;;161     // DeviceCode = 0x8999;
;;;162       
;;;163      if(DeviceCode==0x9325)			  
000260  4608              MOV      r0,r1
000262  8800              LDRH     r0,[r0,#0]  ; DeviceCode
000264  f5a04113          SUB      r1,r0,#0x9300
000268  3925              SUBS     r1,r1,#0x25
00026a  d17d              BNE      |L1.872|
;;;164      {
;;;165    	  Delay(5); /* 延时 50 ms */
00026c  2005              MOVS     r0,#5
00026e  f7fffffe          BL       Delay
;;;166    	  Delay(5); /* 延时 50 ms */
000272  2005              MOVS     r0,#5
000274  f7fffffe          BL       Delay
;;;167    	  
;;;168    	  LCD_WriteReg(0x00FF,0x0001);
000278  2101              MOVS     r1,#1
00027a  20ff              MOVS     r0,#0xff
00027c  f7fffffe          BL       LCD_WriteReg
;;;169    	  LCD_WriteReg(0x00F3,0x0008);
000280  2108              MOVS     r1,#8
000282  20f3              MOVS     r0,#0xf3
000284  f7fffffe          BL       LCD_WriteReg
;;;170    	  LCD_WriteReg(0x0001,0x0100);
000288  f44f7180          MOV      r1,#0x100
00028c  2001              MOVS     r0,#1
00028e  f7fffffe          BL       LCD_WriteReg
;;;171    	  LCD_WriteReg(0x0002,0x0700);
000292  f44f61e0          MOV      r1,#0x700
000296  2002              MOVS     r0,#2
000298  f7fffffe          BL       LCD_WriteReg
;;;172    	  LCD_WriteReg(0x0003,0x1030);  //0x1030
00029c  f2410130          MOV      r1,#0x1030
0002a0  2003              MOVS     r0,#3
0002a2  f7fffffe          BL       LCD_WriteReg
;;;173    	  LCD_WriteReg(0x0008,0x0302);
0002a6  f2403102          MOV      r1,#0x302
0002aa  2008              MOVS     r0,#8
0002ac  f7fffffe          BL       LCD_WriteReg
;;;174    	  LCD_WriteReg(0x0008,0x0207);
0002b0  f2402107          MOV      r1,#0x207
0002b4  2008              MOVS     r0,#8
0002b6  f7fffffe          BL       LCD_WriteReg
;;;175    	  LCD_WriteReg(0x0009,0x0000);
0002ba  2100              MOVS     r1,#0
0002bc  2009              MOVS     r0,#9
0002be  f7fffffe          BL       LCD_WriteReg
;;;176    	  LCD_WriteReg(0x000A,0x0000);
0002c2  2100              MOVS     r1,#0
0002c4  200a              MOVS     r0,#0xa
0002c6  f7fffffe          BL       LCD_WriteReg
;;;177    	  LCD_WriteReg(0x0010,0x0000);  //0x0790
0002ca  2100              MOVS     r1,#0
0002cc  2010              MOVS     r0,#0x10
0002ce  f7fffffe          BL       LCD_WriteReg
;;;178    	  LCD_WriteReg(0x0011,0x0005);
0002d2  2105              MOVS     r1,#5
0002d4  2011              MOVS     r0,#0x11
0002d6  f7fffffe          BL       LCD_WriteReg
;;;179    	  LCD_WriteReg(0x0012,0x0000);
0002da  2100              MOVS     r1,#0
0002dc  2012              MOVS     r0,#0x12
0002de  f7fffffe          BL       LCD_WriteReg
;;;180    	  LCD_WriteReg(0x0013,0x0000);
0002e2  2100              MOVS     r1,#0
0002e4  2013              MOVS     r0,#0x13
0002e6  f7fffffe          BL       LCD_WriteReg
;;;181    	  Delay(5);
0002ea  2005              MOVS     r0,#5
0002ec  f7fffffe          BL       Delay
;;;182    	  LCD_WriteReg(0x0010,0x12B0);
0002f0  f24121b0          MOV      r1,#0x12b0
0002f4  2010              MOVS     r0,#0x10
0002f6  f7fffffe          BL       LCD_WriteReg
;;;183    	  Delay(5);
0002fa  2005              MOVS     r0,#5
0002fc  f7fffffe          BL       Delay
;;;184    	  LCD_WriteReg(0x0011,0x0007);
000300  2107              MOVS     r1,#7
000302  2011              MOVS     r0,#0x11
000304  f7fffffe          BL       LCD_WriteReg
;;;185    	  Delay(5);
000308  2005              MOVS     r0,#5
00030a  f7fffffe          BL       Delay
;;;186    	  LCD_WriteReg(0x0012,0x008B);
00030e  218b              MOVS     r1,#0x8b
000310  2012              MOVS     r0,#0x12
000312  f7fffffe          BL       LCD_WriteReg
;;;187    	  Delay(5);
000316  2005              MOVS     r0,#5
000318  f7fffffe          BL       Delay
;;;188    	  LCD_WriteReg(0x0013,0x1700);
00031c  f44f51b8          MOV      r1,#0x1700
000320  2013              MOVS     r0,#0x13
000322  f7fffffe          BL       LCD_WriteReg
;;;189    	  Delay(5);
000326  2005              MOVS     r0,#5
000328  f7fffffe          BL       Delay
;;;190    	  LCD_WriteReg(0x0029,0x0022);
00032c  2122              MOVS     r1,#0x22
00032e  2029              MOVS     r0,#0x29
000330  f7fffffe          BL       LCD_WriteReg
;;;191    
;;;192    	  LCD_WriteReg(0x0030,0x0000);
000334  2100              MOVS     r1,#0
000336  2030              MOVS     r0,#0x30
000338  f7fffffe          BL       LCD_WriteReg
;;;193    	  LCD_WriteReg(0x0031,0x0707);
00033c  f2407107          MOV      r1,#0x707
000340  2031              MOVS     r0,#0x31
000342  f7fffffe          BL       LCD_WriteReg
;;;194    	  LCD_WriteReg(0x0032,0x0505);
000346  f2405105          MOV      r1,#0x505
00034a  2032              MOVS     r0,#0x32
00034c  f7fffffe          BL       LCD_WriteReg
;;;195    	  LCD_WriteReg(0x0035,0x0107);
000350  f2401107          MOV      r1,#0x107
000354  2035              MOVS     r0,#0x35
000356  f7fffffe          BL       LCD_WriteReg
;;;196    	  LCD_WriteReg(0x0036,0x0008);
00035a  2108              MOVS     r1,#8
00035c  2036              MOVS     r0,#0x36
00035e  f7fffffe          BL       LCD_WriteReg
;;;197    	  LCD_WriteReg(0x0037,0x0000);
000362  2100              MOVS     r1,#0
000364  2037              MOVS     r0,#0x37
000366  e000              B        |L1.874|
                  |L1.872|
000368  e043              B        |L1.1010|
                  |L1.874|
00036a  f7fffffe          BL       LCD_WriteReg
;;;198    	  LCD_WriteReg(0x0038,0x0202);
00036e  f2402102          MOV      r1,#0x202
000372  2038              MOVS     r0,#0x38
000374  f7fffffe          BL       LCD_WriteReg
;;;199    	  LCD_WriteReg(0x0039,0x0106);
000378  f44f7183          MOV      r1,#0x106
00037c  2039              MOVS     r0,#0x39
00037e  f7fffffe          BL       LCD_WriteReg
;;;200    	  LCD_WriteReg(0x003C,0x0202);
000382  f2402102          MOV      r1,#0x202
000386  203c              MOVS     r0,#0x3c
000388  f7fffffe          BL       LCD_WriteReg
;;;201    	  LCD_WriteReg(0x003D,0x0408);
00038c  f44f6181          MOV      r1,#0x408
000390  203d              MOVS     r0,#0x3d
000392  f7fffffe          BL       LCD_WriteReg
;;;202    	  Delay(5);
000396  2005              MOVS     r0,#5
000398  f7fffffe          BL       Delay
;;;203    			
;;;204    	  LCD_WriteReg(0x0050,0x0000);		
00039c  2100              MOVS     r1,#0
00039e  2050              MOVS     r0,#0x50
0003a0  f7fffffe          BL       LCD_WriteReg
;;;205    	  LCD_WriteReg(0x0051,0x00EF);		
0003a4  21ef              MOVS     r1,#0xef
0003a6  2051              MOVS     r0,#0x51
0003a8  f7fffffe          BL       LCD_WriteReg
;;;206    	  LCD_WriteReg(0x0052,0x0000);		
0003ac  2100              MOVS     r1,#0
0003ae  2052              MOVS     r0,#0x52
0003b0  f7fffffe          BL       LCD_WriteReg
;;;207    	  LCD_WriteReg(0x0053,0x013F);		
0003b4  f240113f          MOV      r1,#0x13f
0003b8  2053              MOVS     r0,#0x53
0003ba  f7fffffe          BL       LCD_WriteReg
;;;208    	  LCD_WriteReg(0x0060,0x2700);		
0003be  f44f511c          MOV      r1,#0x2700
0003c2  2060              MOVS     r0,#0x60
0003c4  f7fffffe          BL       LCD_WriteReg
;;;209    	  LCD_WriteReg(0x0061,0x0001);
0003c8  2101              MOVS     r1,#1
0003ca  2061              MOVS     r0,#0x61
0003cc  f7fffffe          BL       LCD_WriteReg
;;;210    	  LCD_WriteReg(0x0090,0x0033);				
0003d0  2133              MOVS     r1,#0x33
0003d2  2090              MOVS     r0,#0x90
0003d4  f7fffffe          BL       LCD_WriteReg
;;;211    	  LCD_WriteReg(0x002B,0x000B);		
0003d8  210b              MOVS     r1,#0xb
0003da  202b              MOVS     r0,#0x2b
0003dc  f7fffffe          BL       LCD_WriteReg
;;;212    	  LCD_WriteReg(0x0007,0x0133);
0003e0  f2401133          MOV      r1,#0x133
0003e4  2007              MOVS     r0,#7
0003e6  f7fffffe          BL       LCD_WriteReg
;;;213    	  Delay(5); 
0003ea  2005              MOVS     r0,#5
0003ec  f7fffffe          BL       Delay
0003f0  e1b1              B        |L1.1878|
                  |L1.1010|
;;;214    	}
;;;215    	else if(DeviceCode==0x9320)	
0003f2  480b              LDR      r0,|L1.1056|
0003f4  8800              LDRH     r0,[r0,#0]  ; DeviceCode
0003f6  f5a04113          SUB      r1,r0,#0x9300
0003fa  3920              SUBS     r1,r1,#0x20
0003fc  d17e              BNE      |L1.1276|
;;;216    	{				
;;;217    		  Delay(5); /* 延时 50 ms */
0003fe  2005              MOVS     r0,#5
000400  f7fffffe          BL       Delay
;;;218    		
;;;219    		  LCD_WriteReg(R229,0x8000); /* Set the internal vcore voltage */
000404  f44f4100          MOV      r1,#0x8000
000408  20e5              MOVS     r0,#0xe5
00040a  f7fffffe          BL       LCD_WriteReg
;;;220    		  LCD_WriteReg(R0,  0x0001); /* Start internal OSC. */
00040e  2101              MOVS     r1,#1
000410  2000              MOVS     r0,#0
000412  f7fffffe          BL       LCD_WriteReg
;;;221    		  LCD_WriteReg(R1,  0x0100); /* set SS and SM bit */
000416  f44f7180          MOV      r1,#0x100
00041a  2001              MOVS     r0,#1
00041c  e00c              B        |L1.1080|
00041e  0000              DCW      0x0000
                  |L1.1056|
                          DCD      DeviceCode
                  |L1.1060|
                          DCD      ASCII_Table
                  |L1.1064|
                          DCD      0x40011400
                  |L1.1068|
                          DCD      0x40011800
                  |L1.1072|
                          DCD      0x40011c00
                  |L1.1076|
                          DCD      0x40012000
                  |L1.1080|
000438  f7fffffe          BL       LCD_WriteReg
;;;222    		  LCD_WriteReg(R2,  0x0700); /* set 1 line inversion */
00043c  f44f61e0          MOV      r1,#0x700
000440  2002              MOVS     r0,#2
000442  f7fffffe          BL       LCD_WriteReg
;;;223    		  LCD_WriteReg(R3,  0x1030); /* set GRAM write direction and BGR=1. */
000446  f2410130          MOV      r1,#0x1030
00044a  2003              MOVS     r0,#3
00044c  f7fffffe          BL       LCD_WriteReg
;;;224    		  LCD_WriteReg(R4,  0x0000); /* Resize register */
000450  2100              MOVS     r1,#0
000452  2004              MOVS     r0,#4
000454  f7fffffe          BL       LCD_WriteReg
;;;225    		  LCD_WriteReg(R8,  0x0202); /* set the back porch and front porch */
000458  f2402102          MOV      r1,#0x202
00045c  2008              MOVS     r0,#8
00045e  f7fffffe          BL       LCD_WriteReg
;;;226    		  LCD_WriteReg(R9,  0x0000); /* set non-display area refresh cycle ISC[3:0] */
000462  2100              MOVS     r1,#0
000464  2009              MOVS     r0,#9
000466  f7fffffe          BL       LCD_WriteReg
;;;227    		  LCD_WriteReg(R10, 0x0000); /* FMARK function */
00046a  2100              MOVS     r1,#0
00046c  200a              MOVS     r0,#0xa
00046e  f7fffffe          BL       LCD_WriteReg
;;;228    		  LCD_WriteReg(R12, 0x0000); /* RGB interface setting */
000472  2100              MOVS     r1,#0
000474  200c              MOVS     r0,#0xc
000476  f7fffffe          BL       LCD_WriteReg
;;;229    		  LCD_WriteReg(R13, 0x0000); /* Frame marker Position */
00047a  2100              MOVS     r1,#0
00047c  200d              MOVS     r0,#0xd
00047e  f7fffffe          BL       LCD_WriteReg
;;;230    		  LCD_WriteReg(R15, 0x0000); /* RGB interface polarity */
000482  2100              MOVS     r1,#0
000484  200f              MOVS     r0,#0xf
000486  f7fffffe          BL       LCD_WriteReg
;;;231    		
;;;232    		/* Power On sequence ---------------------------------------------------------*/
;;;233    		  LCD_WriteReg(R16, 0x0000); /* SAP, BT[3:0], AP, DSTB, SLP, STB */
00048a  2100              MOVS     r1,#0
00048c  2010              MOVS     r0,#0x10
00048e  f7fffffe          BL       LCD_WriteReg
;;;234    		  LCD_WriteReg(R17, 0x0000); /* DC1[2:0], DC0[2:0], VC[2:0] */
000492  2100              MOVS     r1,#0
000494  2011              MOVS     r0,#0x11
000496  f7fffffe          BL       LCD_WriteReg
;;;235    		  LCD_WriteReg(R18, 0x0000); /* VREG1OUT voltage */
00049a  2100              MOVS     r1,#0
00049c  2012              MOVS     r0,#0x12
00049e  f7fffffe          BL       LCD_WriteReg
;;;236    		  LCD_WriteReg(R19, 0x0000); /* VDV[4:0] for VCOM amplitude */
0004a2  2100              MOVS     r1,#0
0004a4  2013              MOVS     r0,#0x13
0004a6  f7fffffe          BL       LCD_WriteReg
;;;237    		  Delay(20);                 /* Dis-charge capacitor power voltage (200ms) */
0004aa  2014              MOVS     r0,#0x14
0004ac  f7fffffe          BL       Delay
;;;238    		  LCD_WriteReg(R16, 0x17B0); /* SAP, BT[3:0], AP, DSTB, SLP, STB */
0004b0  f24171b0          MOV      r1,#0x17b0
0004b4  2010              MOVS     r0,#0x10
0004b6  f7fffffe          BL       LCD_WriteReg
;;;239    		  LCD_WriteReg(R17, 0x0137); /* DC1[2:0], DC0[2:0], VC[2:0] */
0004ba  f2401137          MOV      r1,#0x137
0004be  2011              MOVS     r0,#0x11
0004c0  f7fffffe          BL       LCD_WriteReg
;;;240    		  Delay(5);                  /* Delay 50 ms */
0004c4  2005              MOVS     r0,#5
0004c6  f7fffffe          BL       Delay
;;;241    		  LCD_WriteReg(R18, 0x0139); /* VREG1OUT voltage */
0004ca  f2401139          MOV      r1,#0x139
0004ce  2012              MOVS     r0,#0x12
0004d0  f7fffffe          BL       LCD_WriteReg
;;;242    		  Delay(5);                  /* Delay 50 ms */
0004d4  2005              MOVS     r0,#5
0004d6  f7fffffe          BL       Delay
;;;243    		  LCD_WriteReg(R19, 0x1d00); /* VDV[4:0] for VCOM amplitude */
0004da  f44f51e8          MOV      r1,#0x1d00
0004de  2013              MOVS     r0,#0x13
0004e0  f7fffffe          BL       LCD_WriteReg
;;;244    		  LCD_WriteReg(R41, 0x0013); /* VCM[4:0] for VCOMH */
0004e4  2113              MOVS     r1,#0x13
0004e6  2029              MOVS     r0,#0x29
0004e8  f7fffffe          BL       LCD_WriteReg
;;;245    		  Delay(5);                  /* Delay 50 ms */
0004ec  2005              MOVS     r0,#5
0004ee  f7fffffe          BL       Delay
;;;246    		  LCD_WriteReg(R32, 0x0000); /* GRAM horizontal Address */
0004f2  2100              MOVS     r1,#0
0004f4  2020              MOVS     r0,#0x20
0004f6  f7fffffe          BL       LCD_WriteReg
;;;247    		  LCD_WriteReg(R33, 0x0000); /* GRAM Vertical Address */
0004fa  e000              B        |L1.1278|
                  |L1.1276|
0004fc  e092              B        |L1.1572|
                  |L1.1278|
0004fe  2100              MOVS     r1,#0
000500  2021              MOVS     r0,#0x21
000502  f7fffffe          BL       LCD_WriteReg
;;;248    		
;;;249    		/* Adjust the Gamma Curve ----------------------------------------------------*/
;;;250    		  LCD_WriteReg(R48, 0x0006);
000506  2106              MOVS     r1,#6
000508  2030              MOVS     r0,#0x30
00050a  f7fffffe          BL       LCD_WriteReg
;;;251    		  LCD_WriteReg(R49, 0x0101);
00050e  f2401101          MOV      r1,#0x101
000512  2031              MOVS     r0,#0x31
000514  f7fffffe          BL       LCD_WriteReg
;;;252    		  LCD_WriteReg(R50, 0x0003);
000518  2103              MOVS     r1,#3
00051a  2032              MOVS     r0,#0x32
00051c  f7fffffe          BL       LCD_WriteReg
;;;253    		  LCD_WriteReg(R53, 0x0106);
000520  f44f7183          MOV      r1,#0x106
000524  2035              MOVS     r0,#0x35
000526  f7fffffe          BL       LCD_WriteReg
;;;254    		  LCD_WriteReg(R54, 0x0b02);
00052a  f6403102          MOV      r1,#0xb02
00052e  2036              MOVS     r0,#0x36
000530  f7fffffe          BL       LCD_WriteReg
;;;255    		  LCD_WriteReg(R55, 0x0302);
000534  f2403102          MOV      r1,#0x302
000538  2037              MOVS     r0,#0x37
00053a  f7fffffe          BL       LCD_WriteReg
;;;256    		  LCD_WriteReg(R56, 0x0707);
00053e  f2407107          MOV      r1,#0x707
000542  2038              MOVS     r0,#0x38
000544  f7fffffe          BL       LCD_WriteReg
;;;257    		  LCD_WriteReg(R57, 0x0007);
000548  2107              MOVS     r1,#7
00054a  2039              MOVS     r0,#0x39
00054c  f7fffffe          BL       LCD_WriteReg
;;;258    		  LCD_WriteReg(R60, 0x0600);
000550  f44f61c0          MOV      r1,#0x600
000554  203c              MOVS     r0,#0x3c
000556  f7fffffe          BL       LCD_WriteReg
;;;259    		  LCD_WriteReg(R61, 0x020b);
00055a  f240210b          MOV      r1,#0x20b
00055e  203d              MOVS     r0,#0x3d
000560  f7fffffe          BL       LCD_WriteReg
;;;260    		  
;;;261    		/* Set GRAM area -------------------------------------------------------------*/
;;;262    		  LCD_WriteReg(R80, 0x0000); /* Horizontal GRAM Start Address */
000564  2100              MOVS     r1,#0
000566  2050              MOVS     r0,#0x50
000568  f7fffffe          BL       LCD_WriteReg
;;;263    		  LCD_WriteReg(R81, 0x00EF); /* Horizontal GRAM End Address */
00056c  21ef              MOVS     r1,#0xef
00056e  2051              MOVS     r0,#0x51
000570  f7fffffe          BL       LCD_WriteReg
;;;264    		  LCD_WriteReg(R82, 0x0000); /* Vertical GRAM Start Address */
000574  2100              MOVS     r1,#0
000576  2052              MOVS     r0,#0x52
000578  f7fffffe          BL       LCD_WriteReg
;;;265    		  LCD_WriteReg(R83, 0x013F); /* Vertical GRAM End Address */
00057c  f240113f          MOV      r1,#0x13f
000580  2053              MOVS     r0,#0x53
000582  f7fffffe          BL       LCD_WriteReg
;;;266    				
;;;267    		  LCD_WriteReg(R96,  0xA700); /* 3.2-->9320->0xA700 Gate Scan Line */
000586  f44f4127          MOV      r1,#0xa700
00058a  2060              MOVS     r0,#0x60
00058c  f7fffffe          BL       LCD_WriteReg
;;;268    		
;;;269    		  LCD_WriteReg(R97,  0x0001); /* NDL,VLE, REV */
000590  2101              MOVS     r1,#1
000592  2061              MOVS     r0,#0x61
000594  f7fffffe          BL       LCD_WriteReg
;;;270    		  LCD_WriteReg(R106, 0x0000); /* set scrolling line */
000598  2100              MOVS     r1,#0
00059a  206a              MOVS     r0,#0x6a
00059c  f7fffffe          BL       LCD_WriteReg
;;;271    		
;;;272    		/* Partial Display Control ---------------------------------------------------*/
;;;273    		  LCD_WriteReg(R128, 0x0000);
0005a0  2100              MOVS     r1,#0
0005a2  2080              MOVS     r0,#0x80
0005a4  f7fffffe          BL       LCD_WriteReg
;;;274    		  LCD_WriteReg(R129, 0x0000);
0005a8  2100              MOVS     r1,#0
0005aa  2081              MOVS     r0,#0x81
0005ac  f7fffffe          BL       LCD_WriteReg
;;;275    		  LCD_WriteReg(R130, 0x0000);
0005b0  2100              MOVS     r1,#0
0005b2  2082              MOVS     r0,#0x82
0005b4  f7fffffe          BL       LCD_WriteReg
;;;276    		  LCD_WriteReg(R131, 0x0000);
0005b8  2100              MOVS     r1,#0
0005ba  2083              MOVS     r0,#0x83
0005bc  f7fffffe          BL       LCD_WriteReg
;;;277    		  LCD_WriteReg(R132, 0x0000);
0005c0  2100              MOVS     r1,#0
0005c2  2084              MOVS     r0,#0x84
0005c4  f7fffffe          BL       LCD_WriteReg
;;;278    		  LCD_WriteReg(R133, 0x0000);
0005c8  2100              MOVS     r1,#0
0005ca  2085              MOVS     r0,#0x85
0005cc  f7fffffe          BL       LCD_WriteReg
;;;279    		
;;;280    		/* Panel Control -------------------------------------------------------------*/
;;;281    		  LCD_WriteReg(R144, 0x0010);
0005d0  2110              MOVS     r1,#0x10
0005d2  2090              MOVS     r0,#0x90
0005d4  f7fffffe          BL       LCD_WriteReg
;;;282    		  LCD_WriteReg(R146, 0x0000);
0005d8  2100              MOVS     r1,#0
0005da  2092              MOVS     r0,#0x92
0005dc  f7fffffe          BL       LCD_WriteReg
;;;283    		  LCD_WriteReg(R147, 0x0003);
0005e0  2103              MOVS     r1,#3
0005e2  2093              MOVS     r0,#0x93
0005e4  f7fffffe          BL       LCD_WriteReg
;;;284    		  LCD_WriteReg(R149, 0x0110);
0005e8  f44f7188          MOV      r1,#0x110
0005ec  2095              MOVS     r0,#0x95
0005ee  f7fffffe          BL       LCD_WriteReg
;;;285    		  LCD_WriteReg(R151, 0x0000);
0005f2  2100              MOVS     r1,#0
0005f4  2097              MOVS     r0,#0x97
0005f6  f7fffffe          BL       LCD_WriteReg
;;;286    		  LCD_WriteReg(R152, 0x0000);
0005fa  2100              MOVS     r1,#0
0005fc  2098              MOVS     r0,#0x98
0005fe  f7fffffe          BL       LCD_WriteReg
;;;287    		
;;;288    		  /* Set GRAM write direction and BGR = 1 */
;;;289    		  /* I/D=01 (Horizontal : increment, Vertical : decrement) */
;;;290    		  /* AM=1 (address is updated in vertical writing direction) */
;;;291    		  LCD_WriteReg(R3, 0x1008);
000602  f2410108          MOV      r1,#0x1008
000606  2003              MOVS     r0,#3
000608  f7fffffe          BL       LCD_WriteReg
;;;292    		
;;;293    		  LCD_WriteReg(R7, 0x0173); /* 262K color and display ON */
00060c  f2401173          MOV      r1,#0x173
000610  2007              MOVS     r0,#7
000612  f7fffffe          BL       LCD_WriteReg
;;;294    		  
;;;295    		  Delay(5); /* delay 50 ms */
000616  2005              MOVS     r0,#5
000618  f7fffffe          BL       Delay
;;;296    		  Delay(5); /* delay 50 ms */			//start internal osc
00061c  2005              MOVS     r0,#5
00061e  f7fffffe          BL       Delay
000622  e098              B        |L1.1878|
                  |L1.1572|
;;;297    	}
;;;298    	else if(DeviceCode==0x8999)	   //对应的驱动IC为SSD1289
000624  48f8              LDR      r0,|L1.2568|
000626  8800              LDRH     r0,[r0,#0]  ; DeviceCode
000628  f5a04109          SUB      r1,r0,#0x8900
00062c  3999              SUBS     r1,r1,#0x99
00062e  d17e              BNE      |L1.1838|
;;;299    	{
;;;300    		//************* Start Initial Sequence **********//
;;;301    		LCD_WriteReg(0x00, 0x0001); // Start internal OSC.
000630  2101              MOVS     r1,#1
000632  2000              MOVS     r0,#0
000634  f7fffffe          BL       LCD_WriteReg
;;;302    		LCD_WriteReg(0x01, 0x7b3f); // Driver o 0011 1101 utput control, RL=0;REV=1;GD=1;BGR=0;SM=0;TB=1
000638  f647313f          MOV      r1,#0x7b3f
00063c  2001              MOVS     r0,#1
00063e  f7fffffe          BL       LCD_WriteReg
;;;303    		LCD_WriteReg(0x02, 0x0600); // set 1 line inversion
000642  f44f61c0          MOV      r1,#0x600
000646  2002              MOVS     r0,#2
000648  f7fffffe          BL       LCD_WriteReg
;;;304    		//************* Power control setup ************/
;;;305    		LCD_WriteReg(0x0C, 0x0007); // Adjust VCIX2 output voltage
00064c  2107              MOVS     r1,#7
00064e  200c              MOVS     r0,#0xc
000650  f7fffffe          BL       LCD_WriteReg
;;;306    		LCD_WriteReg(0x0D, 0x0006); // Set amplitude magnification of VLCD63
000654  2106              MOVS     r1,#6
000656  200d              MOVS     r0,#0xd
000658  f7fffffe          BL       LCD_WriteReg
;;;307    		LCD_WriteReg(0x0E, 0x3200); // Set alternating amplitude of VCOM
00065c  f44f5148          MOV      r1,#0x3200
000660  200e              MOVS     r0,#0xe
000662  f7fffffe          BL       LCD_WriteReg
;;;308    		LCD_WriteReg(0x1E, 0x00BB); // Set VcomH voltage
000666  21bb              MOVS     r1,#0xbb
000668  201e              MOVS     r0,#0x1e
00066a  f7fffffe          BL       LCD_WriteReg
;;;309    		LCD_WriteReg(0x03, 0x6A64); // Step-up factor/cycle setting
00066e  f6462164          MOV      r1,#0x6a64
000672  2003              MOVS     r0,#3
000674  f7fffffe          BL       LCD_WriteReg
;;;310    		//************ RAM position control **********/
;;;311    		LCD_WriteReg(0x0F, 0x0000); // Gate scan position start at G0.
000678  2100              MOVS     r1,#0
00067a  200f              MOVS     r0,#0xf
00067c  f7fffffe          BL       LCD_WriteReg
;;;312    		LCD_WriteReg(0x44, 0xEF00); // Horizontal RAM address position
000680  f44f416f          MOV      r1,#0xef00
000684  2044              MOVS     r0,#0x44
000686  f7fffffe          BL       LCD_WriteReg
;;;313    		LCD_WriteReg(0x45, 0x0000); // Vertical RAM address start position
00068a  2100              MOVS     r1,#0
00068c  2045              MOVS     r0,#0x45
00068e  f7fffffe          BL       LCD_WriteReg
;;;314    		LCD_WriteReg(0x46, 0x013F); // Vertical RAM address end position
000692  f240113f          MOV      r1,#0x13f
000696  2046              MOVS     r0,#0x46
000698  f7fffffe          BL       LCD_WriteReg
;;;315    		// ----------- Adjust the Gamma Curve ----------//
;;;316    		LCD_WriteReg(0x30, 0x0000);
00069c  2100              MOVS     r1,#0
00069e  2030              MOVS     r0,#0x30
0006a0  f7fffffe          BL       LCD_WriteReg
;;;317    		LCD_WriteReg(0x31, 0x0706);
0006a4  f2407106          MOV      r1,#0x706
0006a8  2031              MOVS     r0,#0x31
0006aa  f7fffffe          BL       LCD_WriteReg
;;;318    		LCD_WriteReg(0x32, 0x0206);
0006ae  f2402106          MOV      r1,#0x206
0006b2  2032              MOVS     r0,#0x32
0006b4  f7fffffe          BL       LCD_WriteReg
;;;319    		LCD_WriteReg(0x33, 0x0300);
0006b8  f44f7140          MOV      r1,#0x300
0006bc  2033              MOVS     r0,#0x33
0006be  f7fffffe          BL       LCD_WriteReg
;;;320    		LCD_WriteReg(0x34, 0x0002);
0006c2  2102              MOVS     r1,#2
0006c4  2034              MOVS     r0,#0x34
0006c6  f7fffffe          BL       LCD_WriteReg
;;;321    		LCD_WriteReg(0x35, 0x0000);
0006ca  2100              MOVS     r1,#0
0006cc  2035              MOVS     r0,#0x35
0006ce  f7fffffe          BL       LCD_WriteReg
;;;322    		LCD_WriteReg(0x36, 0x0707);
0006d2  f2407107          MOV      r1,#0x707
0006d6  2036              MOVS     r0,#0x36
0006d8  f7fffffe          BL       LCD_WriteReg
;;;323    		LCD_WriteReg(0x37, 0x0200);
0006dc  f44f7100          MOV      r1,#0x200
0006e0  2037              MOVS     r0,#0x37
0006e2  f7fffffe          BL       LCD_WriteReg
;;;324    		LCD_WriteReg(0x3A, 0x0908);
0006e6  f6401108          MOV      r1,#0x908
0006ea  203a              MOVS     r0,#0x3a
0006ec  f7fffffe          BL       LCD_WriteReg
;;;325    		LCD_WriteReg(0x3B, 0x0F0D);
0006f0  f640710d          MOV      r1,#0xf0d
0006f4  203b              MOVS     r0,#0x3b
0006f6  f7fffffe          BL       LCD_WriteReg
;;;326    		//************* Special command **************/
;;;327    		LCD_WriteReg(0x28, 0x0006); // Enable test command
0006fa  2106              MOVS     r1,#6
0006fc  2028              MOVS     r0,#0x28
0006fe  f7fffffe          BL       LCD_WriteReg
;;;328    		LCD_WriteReg(0x2F, 0x12EB); // RAM speed tuning
000702  f24121eb          MOV      r1,#0x12eb
000706  202f              MOVS     r0,#0x2f
000708  f7fffffe          BL       LCD_WriteReg
;;;329    		LCD_WriteReg(0x26, 0x7000); // Internal Bandgap strength
00070c  f44f41e0          MOV      r1,#0x7000
000710  2026              MOVS     r0,#0x26
000712  f7fffffe          BL       LCD_WriteReg
;;;330    		LCD_WriteReg(0x20, 0xB0E3); // Internal Vcom strength
000716  f24b01e3          MOV      r1,#0xb0e3
00071a  2020              MOVS     r0,#0x20
00071c  f7fffffe          BL       LCD_WriteReg
;;;331    		LCD_WriteReg(0x27, 0x0044); // Internal Vcomh/VcomL timing
000720  2144              MOVS     r1,#0x44
000722  2027              MOVS     r0,#0x27
000724  f7fffffe          BL       LCD_WriteReg
;;;332    		LCD_WriteReg(0x2E, 0x7E45); // VCOM charge sharing time  
000728  f6476145          MOV      r1,#0x7e45
00072c  e000              B        |L1.1840|
                  |L1.1838|
00072e  e012              B        |L1.1878|
                  |L1.1840|
000730  202e              MOVS     r0,#0x2e
000732  f7fffffe          BL       LCD_WriteReg
;;;333    		//************* Turn On display ******************/
;;;334    		LCD_WriteReg(0x10, 0x0000); // Sleep mode off.
000736  2100              MOVS     r1,#0
000738  2010              MOVS     r0,#0x10
00073a  f7fffffe          BL       LCD_WriteReg
;;;335    		Delay(8); // Wait 30mS
00073e  2008              MOVS     r0,#8
000740  f7fffffe          BL       Delay
;;;336    		LCD_WriteReg(0x11, 0x6878);// Entry mode setup. 262K type B, take care on the data bus with 16it only  0x6870
000744  f6460178          MOV      r1,#0x6878
000748  2011              MOVS     r0,#0x11
00074a  f7fffffe          BL       LCD_WriteReg
;;;337    		LCD_WriteReg(0x07, 0x0033); // Display ON	*/
00074e  2133              MOVS     r1,#0x33
000750  2007              MOVS     r0,#7
000752  f7fffffe          BL       LCD_WriteReg
                  |L1.1878|
;;;338    	}
;;;339    //	LCD_Clear(Black);	
;;;340    }
000756  bd10              POP      {r4,pc}
;;;341    
                          ENDP

                  LCD_Clear PROC
;;;349    ****************************************************************************/
;;;350    void LCD_Clear(u16 Color)
000758  b570              PUSH     {r4-r6,lr}
;;;351    {
00075a  4605              MOV      r5,r0
;;;352      u32 index = 0,i;
00075c  2600              MOVS     r6,#0
;;;353      
;;;354      LCD_SetCursor(0x00, 0x00); 
00075e  2100              MOVS     r1,#0
000760  4608              MOV      r0,r1
000762  f7fffffe          BL       LCD_SetCursor
;;;355    
;;;356      LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
000766  f7fffffe          BL       LCD_WriteRAM_Prepare
;;;357    
;;;358      for(index = 0; index < 240; index++)
00076a  bf00              NOP      
00076c  e00a              B        |L1.1924|
                  |L1.1902|
;;;359      {for(i = 0 ; i < 320; i++)
00076e  2400              MOVS     r4,#0
000770  e003              B        |L1.1914|
                  |L1.1906|
;;;360      	{
;;;361        	LCD->LCD_RAM = Color;
000772  f04f40d8          MOV      r0,#0x6c000000
000776  8045              STRH     r5,[r0,#2]
000778  1c64              ADDS     r4,r4,#1              ;359
                  |L1.1914|
00077a  f5b47fa0          CMP      r4,#0x140             ;359
00077e  d3f8              BCC      |L1.1906|
;;;362      	}
;;;363    	i = i ; 
000780  bf00              NOP      
000782  1c76              ADDS     r6,r6,#1              ;358
                  |L1.1924|
000784  2ef0              CMP      r6,#0xf0              ;358
000786  d3f2              BCC      |L1.1902|
;;;364    	}
;;;365    }
000788  bd70              POP      {r4-r6,pc}
;;;366    void LCD_Clear_Part(u16 color,u8 x,u16 y,int length ,int width)
                          ENDP

                  LCD_Clear_Part PROC
00078a  e92d47f0          PUSH     {r4-r10,lr}
;;;367    {
00078e  4604              MOV      r4,r0
000790  460d              MOV      r5,r1
000792  4616              MOV      r6,r2
000794  461f              MOV      r7,r3
000796  f8dda020          LDR      r10,[sp,#0x20]
;;;368      u32 index = 0,i;
00079a  f04f0800          MOV      r8,#0
;;;369    
;;;370      LCD_SetCursor(x, y); 
00079e  4631              MOV      r1,r6
0007a0  4628              MOV      r0,r5
0007a2  f7fffffe          BL       LCD_SetCursor
;;;371    
;;;372      LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
0007a6  f7fffffe          BL       LCD_WriteRAM_Prepare
;;;373    
;;;374      for(index = 0; index < width; index++)
0007aa  bf00              NOP      
0007ac  e00d              B        |L1.1994|
                  |L1.1966|
;;;375      {for(i = 0 ; i < length; i++)
0007ae  f04f0900          MOV      r9,#0
0007b2  e004              B        |L1.1982|
                  |L1.1972|
;;;376      	{
;;;377        	LCD->LCD_RAM = color;
0007b4  f04f40d8          MOV      r0,#0x6c000000
0007b8  8044              STRH     r4,[r0,#2]
0007ba  f1090901          ADD      r9,r9,#1              ;375
                  |L1.1982|
0007be  45b9              CMP      r9,r7                 ;375
0007c0  d3f8              BCC      |L1.1972|
;;;378      	}
;;;379    	i = 0 ; 
0007c2  f04f0900          MOV      r9,#0
0007c6  f1080801          ADD      r8,r8,#1              ;374
                  |L1.1994|
0007ca  45d0              CMP      r8,r10                ;374
0007cc  d3ef              BCC      |L1.1966|
;;;380    	}
;;;381    }
0007ce  e8bd87f0          POP      {r4-r10,pc}
;;;382    
                          ENDP

                  LCD_SetDisplayWindow PROC
;;;416    ****************************************************************************/
;;;417    void LCD_SetDisplayWindow(u8 Xpos, u16 Ypos, u8 Height, u16 Width)
0007d2  b5f0              PUSH     {r4-r7,lr}
;;;418    {
0007d4  4604              MOV      r4,r0
0007d6  460d              MOV      r5,r1
0007d8  4616              MOV      r6,r2
0007da  461f              MOV      r7,r3
;;;419      /* Horizontal GRAM Start Address */
;;;420      LCD_WriteReg(R80, Xpos);
0007dc  4621              MOV      r1,r4
0007de  2050              MOVS     r0,#0x50
0007e0  f7fffffe          BL       LCD_WriteReg
;;;421    
;;;422      /* Horizontal GRAM End Address */
;;;423      LCD_WriteReg(R81, Xpos+Height);
0007e4  19a1              ADDS     r1,r4,r6
0007e6  2051              MOVS     r0,#0x51
0007e8  f7fffffe          BL       LCD_WriteReg
;;;424     
;;;425      /* Vertical GRAM Start Address */
;;;426      LCD_WriteReg(R82, Ypos);
0007ec  4629              MOV      r1,r5
0007ee  2052              MOVS     r0,#0x52
0007f0  f7fffffe          BL       LCD_WriteReg
;;;427    
;;;428      /* Vertical GRAM End Address */
;;;429      LCD_WriteReg(R83, Ypos+Width);
0007f4  19e8              ADDS     r0,r5,r7
0007f6  b281              UXTH     r1,r0
0007f8  2053              MOVS     r0,#0x53
0007fa  f7fffffe          BL       LCD_WriteReg
;;;430    
;;;431      LCD_SetCursor(Xpos, Ypos);
0007fe  4629              MOV      r1,r5
000800  4620              MOV      r0,r4
000802  f7fffffe          BL       LCD_SetCursor
;;;432    }
000806  bdf0              POP      {r4-r7,pc}
;;;433    /************************************************************************************
                          ENDP

                  ShowOneChinese PROC
;;;444    ************************************************************************************/
;;;445    void ShowOneChinese(u8 Number, u8 x, u16 y,u16 PenColor,u16 BackColor)
000808  e92d4fff          PUSH     {r0-r11,lr}
;;;446    {
00080c  b081              SUB      sp,sp,#4
00080e  4680              MOV      r8,r0
000810  460e              MOV      r6,r1
000812  4617              MOV      r7,r2
000814  4699              MOV      r9,r3
;;;447        u8 i,j;
;;;448    	/*  汉字为16*16  */
;;;449    	u8 sizex = 16;
000816  f04f0a10          MOV      r10,#0x10
;;;450    	u8 sizey = 16;	
00081a  46d3              MOV      r11,r10
;;;451    	u8 *Chinese_buf = &Chinese_Table[Number * sizex * 2];
00081c  fb08f00a          MUL      r0,r8,r10
000820  497a              LDR      r1,|L1.2572|
000822  eb010040          ADD      r0,r1,r0,LSL #1
000826  9000              STR      r0,[sp,#0]
;;;452     
;;;453        for(i=0; i<sizex; i++)                        /* sizex行   */
000828  2500              MOVS     r5,#0
00082a  e026              B        |L1.2170|
                  |L1.2092|
;;;454        {                                              
;;;455            for(j=0; j<sizey; j++)                    /* sizey列   */
00082c  2400              MOVS     r4,#0
00082e  e020              B        |L1.2162|
                  |L1.2096|
;;;456            {
;;;457    		if((Chinese_buf[i*2+j/8] << (j%8)) & 0x80)      /* 显示第i行 共16个点 */
000830  17e2              ASRS     r2,r4,#31
000832  eb047252          ADD      r2,r4,r2,LSR #29
000836  10d2              ASRS     r2,r2,#3
000838  eb020345          ADD      r3,r2,r5,LSL #1
00083c  9a00              LDR      r2,[sp,#0]
00083e  5cd2              LDRB     r2,[r2,r3]
000840  17e3              ASRS     r3,r4,#31
000842  eb047353          ADD      r3,r4,r3,LSR #29
000846  10db              ASRS     r3,r3,#3
000848  eba403c3          SUB      r3,r4,r3,LSL #3
00084c  409a              LSLS     r2,r2,r3
00084e  f0120f80          TST      r2,#0x80
000852  d006              BEQ      |L1.2146|
;;;458                { 
;;;459    			 LCD_SetPoint(x+i,y+j,PenColor);
000854  193a              ADDS     r2,r7,r4
000856  b291              UXTH     r1,r2
000858  1970              ADDS     r0,r6,r5
00085a  464a              MOV      r2,r9
00085c  f7fffffe          BL       LCD_SetPoint
000860  e005              B        |L1.2158|
                  |L1.2146|
;;;460                } 
;;;461    		else 
;;;462    		{
;;;463                    LCD_SetPoint(x+i,y+j,BackColor);         
000862  193a              ADDS     r2,r7,r4
000864  b291              UXTH     r1,r2
000866  1970              ADDS     r0,r6,r5
000868  9a0e              LDR      r2,[sp,#0x38]
00086a  f7fffffe          BL       LCD_SetPoint
                  |L1.2158|
00086e  1c60              ADDS     r0,r4,#1              ;455
000870  b2c4              UXTB     r4,r0                 ;455
                  |L1.2162|
000872  455c              CMP      r4,r11                ;455
000874  dbdc              BLT      |L1.2096|
000876  1c68              ADDS     r0,r5,#1              ;453
000878  b2c5              UXTB     r5,r0                 ;453
                  |L1.2170|
00087a  4555              CMP      r5,r10                ;453
00087c  dbd6              BLT      |L1.2092|
;;;464    		}
;;;465            }
;;;466        }
;;;467    }
00087e  b005              ADD      sp,sp,#0x14
000880  e8bd8ff0          POP      {r4-r11,pc}
;;;468    void DrawHengLine(u8 Number,u8 x,u16 y,u16 PenColor)
                          ENDP

                  DrawHengLine PROC
000884  e92d41f0          PUSH     {r4-r8,lr}
;;;469    {
000888  4605              MOV      r5,r0
00088a  460e              MOV      r6,r1
00088c  4617              MOV      r7,r2
00088e  4698              MOV      r8,r3
;;;470      u8 i;
;;;471      for(i = 0;i < Number;i++){
000890  2400              MOVS     r4,#0
000892  e006              B        |L1.2210|
                  |L1.2196|
;;;472       LCD_SetPoint(x+i,y,PenColor);
000894  1930              ADDS     r0,r6,r4
000896  4642              MOV      r2,r8
000898  4639              MOV      r1,r7
00089a  f7fffffe          BL       LCD_SetPoint
00089e  1c60              ADDS     r0,r4,#1              ;471
0008a0  b2c4              UXTB     r4,r0                 ;471
                  |L1.2210|
0008a2  42ac              CMP      r4,r5                 ;471
0008a4  dbf6              BLT      |L1.2196|
;;;473      }	
;;;474    }
0008a6  e8bd81f0          POP      {r4-r8,pc}
;;;475    //画横线，参数分别为长度，起始点横、纵坐标和颜色
                          ENDP

                  DrawShuLine PROC
;;;476    void DrawShuLine(u8 Number,u8 x,u16 y,u16 PenColor)
0008aa  e92d41f0          PUSH     {r4-r8,lr}
;;;477    {
0008ae  4605              MOV      r5,r0
0008b0  460e              MOV      r6,r1
0008b2  4617              MOV      r7,r2
0008b4  4698              MOV      r8,r3
;;;478      u8 i;
;;;479      for(i = 0;i < Number;i++){
0008b6  2400              MOVS     r4,#0
0008b8  e007              B        |L1.2250|
                  |L1.2234|
;;;480        LCD_SetPoint(x,y+i,PenColor);
0008ba  1938              ADDS     r0,r7,r4
0008bc  b281              UXTH     r1,r0
0008be  4642              MOV      r2,r8
0008c0  4630              MOV      r0,r6
0008c2  f7fffffe          BL       LCD_SetPoint
0008c6  1c60              ADDS     r0,r4,#1              ;479
0008c8  b2c4              UXTB     r4,r0                 ;479
                  |L1.2250|
0008ca  42ac              CMP      r4,r5                 ;479
0008cc  dbf5              BLT      |L1.2234|
;;;481      }	
;;;482    }
0008ce  e8bd81f0          POP      {r4-r8,pc}
;;;483    //画指定竖线段，参数分别为长度，起始点横、纵坐标和颜色
                          ENDP

                  DrawPoint PROC
;;;484    void DrawPoint(u8 x,u16 y,u16 PenColor){
0008d2  b570              PUSH     {r4-r6,lr}
0008d4  4604              MOV      r4,r0
0008d6  460d              MOV      r5,r1
0008d8  4616              MOV      r6,r2
;;;485    	LCD_SetPoint(x,y,PenColor);
0008da  4632              MOV      r2,r6
0008dc  4629              MOV      r1,r5
0008de  4620              MOV      r0,r4
0008e0  f7fffffe          BL       LCD_SetPoint
;;;486    }
0008e4  bd70              POP      {r4-r6,pc}
;;;487    /* 画指定点*/
                          ENDP

                  DrawRectangle PROC
;;;488    void DrawRectangle(u8 x,u16 y ,u8 x2,u16 y2)
0008e6  e92d47f0          PUSH     {r4-r10,lr}
;;;489    {
0008ea  4605              MOV      r5,r0
0008ec  460e              MOV      r6,r1
0008ee  4617              MOV      r7,r2
0008f0  4698              MOV      r8,r3
;;;490        int i = 0;
0008f2  2400              MOVS     r4,#0
;;;491       unsigned int  length  = x2 - x ;
0008f4  eba70905          SUB      r9,r7,r5
;;;492       unsigned int  width = y2 - y ;
0008f8  eba80a06          SUB      r10,r8,r6
;;;493       for(i  = 0 ;i < 5 ;i++){
0008fc  bf00              NOP      
0008fe  e008              B        |L1.2322|
                  |L1.2304|
;;;494       	DrawShuLine(width,x + i,y,Black); 
000900  1928              ADDS     r0,r5,r4
000902  b2c1              UXTB     r1,r0
000904  2300              MOVS     r3,#0
000906  4632              MOV      r2,r6
000908  f00a00ff          AND      r0,r10,#0xff
00090c  f7fffffe          BL       DrawShuLine
000910  1c64              ADDS     r4,r4,#1              ;493
                  |L1.2322|
000912  2c05              CMP      r4,#5                 ;493
000914  dbf4              BLT      |L1.2304|
;;;495       }
;;;496       for(i = 0; i < 5;i++){
000916  2400              MOVS     r4,#0
000918  e008              B        |L1.2348|
                  |L1.2330|
;;;497    	 DrawShuLine(width,x2 - i,y,Black);
00091a  1b38              SUBS     r0,r7,r4
00091c  b2c1              UXTB     r1,r0
00091e  2300              MOVS     r3,#0
000920  4632              MOV      r2,r6
000922  f00a00ff          AND      r0,r10,#0xff
000926  f7fffffe          BL       DrawShuLine
00092a  1c64              ADDS     r4,r4,#1              ;496
                  |L1.2348|
00092c  2c05              CMP      r4,#5                 ;496
00092e  dbf4              BLT      |L1.2330|
;;;498       }
;;;499       for(i = 0 ;i < 5; i++){
000930  2400              MOVS     r4,#0
000932  e008              B        |L1.2374|
                  |L1.2356|
;;;500    	DrawHengLine(length,x,y + i, Black);
000934  1930              ADDS     r0,r6,r4
000936  b282              UXTH     r2,r0
000938  2300              MOVS     r3,#0
00093a  4629              MOV      r1,r5
00093c  f00900ff          AND      r0,r9,#0xff
000940  f7fffffe          BL       DrawHengLine
000944  1c64              ADDS     r4,r4,#1              ;499
                  |L1.2374|
000946  2c05              CMP      r4,#5                 ;499
000948  dbf4              BLT      |L1.2356|
;;;501       }
;;;502       for(i = 0;i < 5 ;i++){
00094a  2400              MOVS     r4,#0
00094c  e009              B        |L1.2402|
                  |L1.2382|
;;;503    	DrawHengLine(length,x,y2 - i,Black);
00094e  eba80004          SUB      r0,r8,r4
000952  b282              UXTH     r2,r0
000954  2300              MOVS     r3,#0
000956  4629              MOV      r1,r5
000958  f00900ff          AND      r0,r9,#0xff
00095c  f7fffffe          BL       DrawHengLine
000960  1c64              ADDS     r4,r4,#1              ;502
                  |L1.2402|
000962  2c05              CMP      r4,#5                 ;502
000964  dbf3              BLT      |L1.2382|
;;;504       }
;;;505       /*
;;;506       for(i = 0 ;i< 2;i++){
;;;507    	 DrawShuLine(width,length/3 + x + i,y,Black);
;;;508       }
;;;509       for(i = 0 ;i< 2;i++){
;;;510    	 DrawShuLine(width,length/3 * 2 + x + i,y,Black);
;;;511       }
;;;512       for(i = 0 ;i< 2;i++){
;;;513    	 DrawHengLine(length,x,width/3 + y + i,Black);
;;;514       }
;;;515       for(i = 0 ;i< 2;i++){
;;;516    	 DrawHengLine(length,x,width/3 * 2 + y + i,Black);
;;;517       }
;;;518       */
;;;519       
;;;520    }
000966  e8bd87f0          POP      {r4-r10,pc}
;;;521    //画矩形
                          ENDP

                  DrawRectangles PROC
;;;522    
;;;523    void DrawRectangles(u8 x,u16 y ,u8 x2,u16 y2,int w)
00096a  e92d4ff0          PUSH     {r4-r11,lr}
;;;524    {
00096e  4605              MOV      r5,r0
000970  460e              MOV      r6,r1
000972  4690              MOV      r8,r2
000974  4699              MOV      r9,r3
000976  9f09              LDR      r7,[sp,#0x24]
;;;525    	int i = 0;
000978  2400              MOVS     r4,#0
;;;526       unsigned int  length  = x2 - x ;
00097a  eba80a05          SUB      r10,r8,r5
;;;527       unsigned int  width = y2 - y ;
00097e  eba90b06          SUB      r11,r9,r6
;;;528       for(i  = 0 ;i < w ;i++){
000982  bf00              NOP      
000984  e008              B        |L1.2456|
                  |L1.2438|
;;;529       	DrawShuLine(width,x + i,y,Black); 
000986  1928              ADDS     r0,r5,r4
000988  b2c1              UXTB     r1,r0
00098a  2300              MOVS     r3,#0
00098c  4632              MOV      r2,r6
00098e  f00b00ff          AND      r0,r11,#0xff
000992  f7fffffe          BL       DrawShuLine
000996  1c64              ADDS     r4,r4,#1              ;528
                  |L1.2456|
000998  42bc              CMP      r4,r7                 ;528
00099a  dbf4              BLT      |L1.2438|
;;;530       }
;;;531       for(i = 0; i < w;i++){
00099c  2400              MOVS     r4,#0
00099e  e009              B        |L1.2484|
                  |L1.2464|
;;;532    	 DrawShuLine(width,x2 - i,y,Black);
0009a0  eba80004          SUB      r0,r8,r4
0009a4  b2c1              UXTB     r1,r0
0009a6  2300              MOVS     r3,#0
0009a8  4632              MOV      r2,r6
0009aa  f00b00ff          AND      r0,r11,#0xff
0009ae  f7fffffe          BL       DrawShuLine
0009b2  1c64              ADDS     r4,r4,#1              ;531
                  |L1.2484|
0009b4  42bc              CMP      r4,r7                 ;531
0009b6  dbf3              BLT      |L1.2464|
;;;533       }
;;;534       for(i = 0 ;i < w; i++){
0009b8  2400              MOVS     r4,#0
0009ba  e008              B        |L1.2510|
                  |L1.2492|
;;;535    	DrawHengLine(length,x,y + i, Black);
0009bc  1930              ADDS     r0,r6,r4
0009be  b282              UXTH     r2,r0
0009c0  2300              MOVS     r3,#0
0009c2  4629              MOV      r1,r5
0009c4  f00a00ff          AND      r0,r10,#0xff
0009c8  f7fffffe          BL       DrawHengLine
0009cc  1c64              ADDS     r4,r4,#1              ;534
                  |L1.2510|
0009ce  42bc              CMP      r4,r7                 ;534
0009d0  dbf4              BLT      |L1.2492|
;;;536       }
;;;537       for(i = 0;i < w ;i++){
0009d2  2400              MOVS     r4,#0
0009d4  e009              B        |L1.2538|
                  |L1.2518|
;;;538    	DrawHengLine(length,x,y2 - i,Black);
0009d6  eba90004          SUB      r0,r9,r4
0009da  b282              UXTH     r2,r0
0009dc  2300              MOVS     r3,#0
0009de  4629              MOV      r1,r5
0009e0  f00a00ff          AND      r0,r10,#0xff
0009e4  f7fffffe          BL       DrawHengLine
0009e8  1c64              ADDS     r4,r4,#1              ;537
                  |L1.2538|
0009ea  42bc              CMP      r4,r7                 ;537
0009ec  dbf3              BLT      |L1.2518|
;;;539    	}
;;;540    }
0009ee  e8bd8ff0          POP      {r4-r11,pc}
;;;541    void ShowLineChinese(u8 Number,u8 counter ,u8 x, u16 y,u16 PenColor,u16 BackColor)
                          ENDP

                  ShowLineChinese PROC
0009f2  e92d47f8          PUSH     {r3-r10,lr}
;;;542    {
0009f6  4605              MOV      r5,r0
0009f8  460e              MOV      r6,r1
0009fa  4617              MOV      r7,r2
0009fc  4698              MOV      r8,r3
0009fe  e9dd9a09          LDRD     r9,r10,[sp,#0x24]
;;;543        u8 i;
;;;544        for(i=0;i<counter;i++)
000a02  2400              MOVS     r4,#0
000a04  e011              B        |L1.2602|
000a06  0000              DCW      0x0000
                  |L1.2568|
                          DCD      DeviceCode
                  |L1.2572|
                          DCD      Chinese_Table
                  |L1.2576|
;;;545    	{
;;;546    	    ShowOneChinese(Number + i, x , y + i*16,PenColor ,BackColor);    
000a10  eb081104          ADD      r1,r8,r4,LSL #4
000a14  b28a              UXTH     r2,r1
000a16  1929              ADDS     r1,r5,r4
000a18  b2c8              UXTB     r0,r1
000a1a  464b              MOV      r3,r9
000a1c  4639              MOV      r1,r7
000a1e  f8cda000          STR      r10,[sp,#0]
000a22  f7fffffe          BL       ShowOneChinese
000a26  1c60              ADDS     r0,r4,#1              ;544
000a28  b2c4              UXTB     r4,r0                 ;544
                  |L1.2602|
000a2a  42b4              CMP      r4,r6                 ;544
000a2c  dbf0              BLT      |L1.2576|
;;;547    	}
;;;548    }
000a2e  e8bd87f8          POP      {r3-r10,pc}
;;;549    void ShowNumber(u8 Number,u8 counter ,u8 x, u16 y,u16 PenColor,u16 BackColor){
                          ENDP

                  ShowOneNumber PROC
;;;556    //画一个数字
;;;557    void ShowOneNumber(u8 Number, u8 x, u16 y,u16 PenColor,u16 BackColor){
000a32  e92d4fff          PUSH     {r0-r11,lr}
000a36  b081              SUB      sp,sp,#4
000a38  4680              MOV      r8,r0
000a3a  460e              MOV      r6,r1
000a3c  4617              MOV      r7,r2
000a3e  4699              MOV      r9,r3
;;;558    	u8 i,j;
;;;559    	/*  汉字为16*16  */
;;;560    	u8 sizex = 16;
000a40  f04f0a10          MOV      r10,#0x10
;;;561    	u8 sizey = 16;	
000a44  46d3              MOV      r11,r10
;;;562    	u8 *Number_buf = &Number_Table[Number * sizex * 2];
000a46  fb08f00a          MUL      r0,r8,r10
000a4a  49f8              LDR      r1,|L1.3628|
000a4c  eb010040          ADD      r0,r1,r0,LSL #1
000a50  9000              STR      r0,[sp,#0]
;;;563     
;;;564        for(i=0; i<sizex; i++)                        /* sizex行   */
000a52  2500              MOVS     r5,#0
000a54  e026              B        |L1.2724|
                  |L1.2646|
;;;565        {                                              
;;;566            for(j=0; j<sizey; j++)                    /* sizey列   */
000a56  2400              MOVS     r4,#0
000a58  e020              B        |L1.2716|
                  |L1.2650|
;;;567            {
;;;568    		if((Number_buf[i*2+j/8] << (j%8)) & 0x80)      /* 显示第i行 共16个点 */
000a5a  17e2              ASRS     r2,r4,#31
000a5c  eb047252          ADD      r2,r4,r2,LSR #29
000a60  10d2              ASRS     r2,r2,#3
000a62  eb020345          ADD      r3,r2,r5,LSL #1
000a66  9a00              LDR      r2,[sp,#0]
000a68  5cd2              LDRB     r2,[r2,r3]
000a6a  17e3              ASRS     r3,r4,#31
000a6c  eb047353          ADD      r3,r4,r3,LSR #29
000a70  10db              ASRS     r3,r3,#3
000a72  eba403c3          SUB      r3,r4,r3,LSL #3
000a76  409a              LSLS     r2,r2,r3
000a78  f0120f80          TST      r2,#0x80
000a7c  d006              BEQ      |L1.2700|
;;;569                { 
;;;570    			 LCD_SetPoint(x+i,y+j,PenColor);
000a7e  193a              ADDS     r2,r7,r4
000a80  b291              UXTH     r1,r2
000a82  1970              ADDS     r0,r6,r5
000a84  464a              MOV      r2,r9
000a86  f7fffffe          BL       LCD_SetPoint
000a8a  e005              B        |L1.2712|
                  |L1.2700|
;;;571                } 
;;;572    		else 
;;;573    		{
;;;574                LCD_SetPoint(x+i,y+j,BackColor);         
000a8c  193a              ADDS     r2,r7,r4
000a8e  b291              UXTH     r1,r2
000a90  1970              ADDS     r0,r6,r5
000a92  9a0e              LDR      r2,[sp,#0x38]
000a94  f7fffffe          BL       LCD_SetPoint
                  |L1.2712|
000a98  1c60              ADDS     r0,r4,#1              ;566
000a9a  b2c4              UXTB     r4,r0                 ;566
                  |L1.2716|
000a9c  455c              CMP      r4,r11                ;566
000a9e  dbdc              BLT      |L1.2650|
000aa0  1c68              ADDS     r0,r5,#1              ;564
000aa2  b2c5              UXTB     r5,r0                 ;564
                  |L1.2724|
000aa4  4555              CMP      r5,r10                ;564
000aa6  dbd6              BLT      |L1.2646|
;;;575    		}
;;;576            }
;;;577        }
;;;578    
;;;579    }
000aa8  b005              ADD      sp,sp,#0x14
000aaa  e8bd8ff0          POP      {r4-r11,pc}
;;;580    //画一行数字
                          ENDP

                  ShowNumber PROC
;;;548    }
;;;549    void ShowNumber(u8 Number,u8 counter ,u8 x, u16 y,u16 PenColor,u16 BackColor){
000aae  e92d47f8          PUSH     {r3-r10,lr}
000ab2  4605              MOV      r5,r0
000ab4  460e              MOV      r6,r1
000ab6  4617              MOV      r7,r2
000ab8  4698              MOV      r8,r3
000aba  e9dd9a09          LDRD     r9,r10,[sp,#0x24]
;;;550    	u8 i;
;;;551        for(i=0;i<counter;i++)
000abe  2400              MOVS     r4,#0
000ac0  e00c              B        |L1.2780|
                  |L1.2754|
;;;552    	{
;;;553    	    ShowOneNumber(Number + i, x , y + i*16,PenColor ,BackColor);    
000ac2  eb081104          ADD      r1,r8,r4,LSL #4
000ac6  b28a              UXTH     r2,r1
000ac8  1929              ADDS     r1,r5,r4
000aca  b2c8              UXTB     r0,r1
000acc  464b              MOV      r3,r9
000ace  4639              MOV      r1,r7
000ad0  f8cda000          STR      r10,[sp,#0]
000ad4  f7fffffe          BL       ShowOneNumber
000ad8  1c60              ADDS     r0,r4,#1              ;551
000ada  b2c4              UXTB     r4,r0                 ;551
                  |L1.2780|
000adc  42b4              CMP      r4,r6                 ;551
000ade  dbf0              BLT      |L1.2754|
;;;554    	}
;;;555    }
000ae0  e8bd87f8          POP      {r3-r10,pc}
;;;556    //画一个数字
                          ENDP

                  RunTime PROC
;;;580    //画一行数字
;;;581    void RunTime(int time,u8 x,u16 y){
000ae4  e92d41fc          PUSH     {r2-r8,lr}
000ae8  4605              MOV      r5,r0
000aea  460e              MOV      r6,r1
000aec  4614              MOV      r4,r2
;;;582    	int first ,second ;
;;;583    	
;;;584     	//LCD_Clear(White);
;;;585    	first = time/100;
000aee  2064              MOVS     r0,#0x64
000af0  fb95f7f0          SDIV     r7,r5,r0
;;;586    	second = (time%100)/10;
000af4  fb95f1f0          SDIV     r1,r5,r0
000af8  fb005011          MLS      r0,r0,r1,r5
000afc  210a              MOVS     r1,#0xa
000afe  fb90f8f1          SDIV     r8,r0,r1
;;;587    
;;;588    		ShowLineChinese(3,4,x,y-60,Black,White);
000b02  f64f73ff          MOV      r3,#0xffff
000b06  2200              MOVS     r2,#0
000b08  f1a4003c          SUB      r0,r4,#0x3c
000b0c  e9cd2300          STRD     r2,r3,[sp,#0]
000b10  b283              UXTH     r3,r0
000b12  4632              MOV      r2,r6
000b14  2104              MOVS     r1,#4
000b16  2003              MOVS     r0,#3
000b18  f7fffffe          BL       ShowLineChinese
;;;589    		ShowNumber(first,1,x,y,Black,White); //first
000b1c  f64f73ff          MOV      r3,#0xffff
000b20  2200              MOVS     r2,#0
000b22  e9cd2300          STRD     r2,r3,[sp,#0]
000b26  4623              MOV      r3,r4
000b28  4632              MOV      r2,r6
000b2a  2101              MOVS     r1,#1
000b2c  b2f8              UXTB     r0,r7
000b2e  f7fffffe          BL       ShowNumber
;;;590    		ShowNumber(second,1,x,y+15,Black,White); //second			  
000b32  f64f73ff          MOV      r3,#0xffff
000b36  2200              MOVS     r2,#0
000b38  f104000f          ADD      r0,r4,#0xf
000b3c  e9cd2300          STRD     r2,r3,[sp,#0]
000b40  b283              UXTH     r3,r0
000b42  4632              MOV      r2,r6
000b44  2101              MOVS     r1,#1
000b46  f00800ff          AND      r0,r8,#0xff
000b4a  f7fffffe          BL       ShowNumber
;;;591    }
000b4e  e8bd81fc          POP      {r2-r8,pc}
;;;592    //倒计时
                          ENDP

                  LCD_WriteBMP PROC
;;;789    ************************************************************************************/
;;;790    void LCD_WriteBMP(u8 Xpos, u16 Ypos, u8 Height, u16 Width, u8 *bitmap)
000b52  e92d4ff0          PUSH     {r4-r11,lr}
;;;791    {
000b56  4680              MOV      r8,r0
000b58  4689              MOV      r9,r1
000b5a  4614              MOV      r4,r2
000b5c  461d              MOV      r5,r3
000b5e  f8dda024          LDR      r10,[sp,#0x24]
;;;792      vu32 index;
;;;793      vu32 size = Height * Width;
000b62  fb04fb05          MUL      r11,r4,r5
;;;794      u16 *bitmap_ptr = (u16 *)bitmap;
000b66  4657              MOV      r7,r10
;;;795    
;;;796      LCD_SetDisplayWindow(Xpos, Ypos, Height-1, Width-1);
000b68  1e68              SUBS     r0,r5,#1
000b6a  b283              UXTH     r3,r0
000b6c  1e60              SUBS     r0,r4,#1
000b6e  b2c2              UXTB     r2,r0
000b70  4649              MOV      r1,r9
000b72  4640              MOV      r0,r8
000b74  f7fffffe          BL       LCD_SetDisplayWindow
;;;797    
;;;798      /* Set GRAM write direction and BGR = 1 */
;;;799      /* I/D=00 (Horizontal : decrement, Vertical : decrement) */
;;;800      /* AM=1 (address is updated in vertical writing direction) */
;;;801      LCD_WriteReg(R3, 0x1038);
000b78  f2410138          MOV      r1,#0x1038
000b7c  2003              MOVS     r0,#3
000b7e  f7fffffe          BL       LCD_WriteReg
;;;802     
;;;803      LCD_WriteRAM_Prepare();
000b82  f7fffffe          BL       LCD_WriteRAM_Prepare
;;;804     
;;;805      for(index = 0; index < size; index++)
000b86  2600              MOVS     r6,#0
000b88  e004              B        |L1.2964|
                  |L1.2954|
;;;806      {
;;;807    	LCD_WriteRAM(*bitmap_ptr++);
000b8a  f8370b02          LDRH     r0,[r7],#2
000b8e  f7fffffe          BL       LCD_WriteRAM
000b92  1c76              ADDS     r6,r6,#1              ;805
                  |L1.2964|
000b94  455e              CMP      r6,r11                ;805
000b96  d3f8              BCC      |L1.2954|
;;;808      }
;;;809     
;;;810      /* Set GRAM write direction and BGR = 1 */
;;;811      /* I/D = 01 (Horizontal : increment, Vertical : decrement) */
;;;812      /* AM = 1 (address is updated in vertical writing direction) */
;;;813      LCD_WriteReg(R3, 0x1018);
000b98  f2410118          MOV      r1,#0x1018
000b9c  2003              MOVS     r0,#3
000b9e  f7fffffe          BL       LCD_WriteReg
;;;814      LCD_SetDisplayWindow(00, 00, 239, 319);
000ba2  f240133f          MOV      r3,#0x13f
000ba6  22ef              MOVS     r2,#0xef
000ba8  2100              MOVS     r1,#0
000baa  4608              MOV      r0,r1
000bac  f7fffffe          BL       LCD_SetDisplayWindow
;;;815    }
000bb0  e8bd8ff0          POP      {r4-r11,pc}
;;;816    
                          ENDP

                  ShowMouse PROC
;;;592    //倒计时
;;;593    void ShowMouse(u8 x,u8 y)
000bb4  b538              PUSH     {r3-r5,lr}
;;;594    {
000bb6  4604              MOV      r4,r0
000bb8  460d              MOV      r5,r1
;;;595      LCD_WriteBMP(x,y,55,60,(u8 *)gImage_22);
000bba  4b9d              LDR      r3,|L1.3632|
000bbc  9300              STR      r3,[sp,#0]
000bbe  233c              MOVS     r3,#0x3c
000bc0  2237              MOVS     r2,#0x37
000bc2  4629              MOV      r1,r5
000bc4  4620              MOV      r0,r4
000bc6  f7fffffe          BL       LCD_WriteBMP
;;;596    }
000bca  bd38              POP      {r3-r5,pc}
;;;597    void DrawMouse(int no)
                          ENDP

                  DrawMouse PROC
000bcc  b510              PUSH     {r4,lr}
;;;598    {
000bce  4604              MOV      r4,r0
;;;599    	LCD_WriteReg(R3, 0x1030);
000bd0  f2410130          MOV      r1,#0x1030
000bd4  2003              MOVS     r0,#3
000bd6  f7fffffe          BL       LCD_WriteReg
;;;600    	switch(no){
000bda  2c09              CMP      r4,#9
000bdc  d233              BCS      |L1.3142|
000bde  e8dff004          TBB      [pc,r4]
000be2  050a              DCB      0x05,0x0a
000be4  0f14191e          DCB      0x0f,0x14,0x19,0x1e
000be8  23282d00          DCB      0x23,0x28,0x2d,0x00
;;;601    		case 0:{
;;;602    		 ShowMouse(28,29);
000bec  211d              MOVS     r1,#0x1d
000bee  201c              MOVS     r0,#0x1c
000bf0  f7fffffe          BL       ShowMouse
;;;603    		 break;
000bf4  e027              B        |L1.3142|
;;;604    		}
;;;605    		case 1:{
;;;606    		 ShowMouse(28,115);
000bf6  2173              MOVS     r1,#0x73
000bf8  201c              MOVS     r0,#0x1c
000bfa  f7fffffe          BL       ShowMouse
;;;607    		 break;
000bfe  e022              B        |L1.3142|
;;;608    		}
;;;609    		case 2:{
;;;610    		 ShowMouse(28,190);
000c00  21be              MOVS     r1,#0xbe
000c02  201c              MOVS     r0,#0x1c
000c04  f7fffffe          BL       ShowMouse
;;;611    		 break;
000c08  e01d              B        |L1.3142|
;;;612    		}
;;;613    		case 3:{
;;;614    		 ShowMouse(85,29);
000c0a  211d              MOVS     r1,#0x1d
000c0c  2055              MOVS     r0,#0x55
000c0e  f7fffffe          BL       ShowMouse
;;;615    		 break;
000c12  e018              B        |L1.3142|
;;;616    		}
;;;617    		case 4:{
;;;618    		 ShowMouse(90,120);
000c14  2178              MOVS     r1,#0x78
000c16  205a              MOVS     r0,#0x5a
000c18  f7fffffe          BL       ShowMouse
;;;619    		 break;
000c1c  e013              B        |L1.3142|
;;;620    		}
;;;621    		case 5:{
;;;622    		 ShowMouse(90,190);
000c1e  21be              MOVS     r1,#0xbe
000c20  205a              MOVS     r0,#0x5a
000c22  f7fffffe          BL       ShowMouse
;;;623    		 break;
000c26  e00e              B        |L1.3142|
;;;624    		}
;;;625    		case 6:{
;;;626    		 ShowMouse(140,29);
000c28  211d              MOVS     r1,#0x1d
000c2a  208c              MOVS     r0,#0x8c
000c2c  f7fffffe          BL       ShowMouse
;;;627    		 break;
000c30  e009              B        |L1.3142|
;;;628    		}
;;;629    		case 7:{
;;;630    		 ShowMouse(140,120);
000c32  2178              MOVS     r1,#0x78
000c34  208c              MOVS     r0,#0x8c
000c36  f7fffffe          BL       ShowMouse
;;;631    		 break;
000c3a  e004              B        |L1.3142|
;;;632    		}
;;;633    		case 8:{
;;;634    		 ShowMouse(140,190);
000c3c  21be              MOVS     r1,#0xbe
000c3e  208c              MOVS     r0,#0x8c
000c40  f7fffffe          BL       ShowMouse
;;;635    		 break;
000c44  bf00              NOP      
                  |L1.3142|
000c46  bf00              NOP                            ;603
;;;636    		}		
;;;637    	}
;;;638    }
000c48  bd10              POP      {r4,pc}
;;;639    //画地鼠
                          ENDP

                  ClearMouse PROC
;;;640    void ClearMouse(int no)
000c4a  b518              PUSH     {r3,r4,lr}
;;;641    {
000c4c  4604              MOV      r4,r0
;;;642    	LCD_WriteReg(R3, 0x1030);
000c4e  f2410130          MOV      r1,#0x1030
000c52  2003              MOVS     r0,#3
000c54  f7fffffe          BL       LCD_WriteReg
;;;643    	switch(no){
000c58  2c09              CMP      r4,#9
000c5a  d257              BCS      |L1.3340|
000c5c  e8dff004          TBB      [pc,r4]
000c60  050e1720          DCB      0x05,0x0e,0x17,0x20
000c64  29323b44          DCB      0x29,0x32,0x3b,0x44
000c68  4d00              DCB      0x4d,0x00
;;;644    		case 0:{
;;;645    		 LCD_WriteBMP(28,29,55,60,(u8 *)gImage_33);
000c6a  4b72              LDR      r3,|L1.3636|
000c6c  9300              STR      r3,[sp,#0]
000c6e  233c              MOVS     r3,#0x3c
000c70  2237              MOVS     r2,#0x37
000c72  211d              MOVS     r1,#0x1d
000c74  201c              MOVS     r0,#0x1c
000c76  f7fffffe          BL       LCD_WriteBMP
;;;646    		 break;
000c7a  e047              B        |L1.3340|
;;;647    		}
;;;648    		case 1:{
;;;649    		 LCD_WriteBMP(28,115,55,60,(u8 *)gImage_33);
000c7c  4b6d              LDR      r3,|L1.3636|
000c7e  9300              STR      r3,[sp,#0]
000c80  233c              MOVS     r3,#0x3c
000c82  2237              MOVS     r2,#0x37
000c84  2173              MOVS     r1,#0x73
000c86  201c              MOVS     r0,#0x1c
000c88  f7fffffe          BL       LCD_WriteBMP
;;;650    		 break;
000c8c  e03e              B        |L1.3340|
;;;651    		}
;;;652    		case 2:{
;;;653    		 LCD_WriteBMP(28,190,55,60,(u8 *)gImage_33);
000c8e  4b69              LDR      r3,|L1.3636|
000c90  9300              STR      r3,[sp,#0]
000c92  233c              MOVS     r3,#0x3c
000c94  2237              MOVS     r2,#0x37
000c96  21be              MOVS     r1,#0xbe
000c98  201c              MOVS     r0,#0x1c
000c9a  f7fffffe          BL       LCD_WriteBMP
;;;654    		 break;
000c9e  e035              B        |L1.3340|
;;;655    		}
;;;656    		case 3:{
;;;657    		 LCD_WriteBMP(85,29,55,60,(u8 *)gImage_33);
000ca0  4b64              LDR      r3,|L1.3636|
000ca2  9300              STR      r3,[sp,#0]
000ca4  233c              MOVS     r3,#0x3c
000ca6  2237              MOVS     r2,#0x37
000ca8  211d              MOVS     r1,#0x1d
000caa  2055              MOVS     r0,#0x55
000cac  f7fffffe          BL       LCD_WriteBMP
;;;658    		 break;
000cb0  e02c              B        |L1.3340|
;;;659    		}
;;;660    		case 4:{
;;;661    		  LCD_WriteBMP(90,120,55,60,(u8 *)gImage_33);
000cb2  4b60              LDR      r3,|L1.3636|
000cb4  9300              STR      r3,[sp,#0]
000cb6  233c              MOVS     r3,#0x3c
000cb8  2237              MOVS     r2,#0x37
000cba  2178              MOVS     r1,#0x78
000cbc  205a              MOVS     r0,#0x5a
000cbe  f7fffffe          BL       LCD_WriteBMP
;;;662    		 break;
000cc2  e023              B        |L1.3340|
;;;663    		}
;;;664    		case 5:{
;;;665    		  LCD_WriteBMP(90,190,55,60,(u8 *)gImage_33);
000cc4  4b5b              LDR      r3,|L1.3636|
000cc6  9300              STR      r3,[sp,#0]
000cc8  233c              MOVS     r3,#0x3c
000cca  2237              MOVS     r2,#0x37
000ccc  21be              MOVS     r1,#0xbe
000cce  205a              MOVS     r0,#0x5a
000cd0  f7fffffe          BL       LCD_WriteBMP
;;;666    		 break;
000cd4  e01a              B        |L1.3340|
;;;667    		}
;;;668    		case 6:{
;;;669    		  LCD_WriteBMP(140,29,55,60,(u8 *)gImage_33);
000cd6  4b57              LDR      r3,|L1.3636|
000cd8  9300              STR      r3,[sp,#0]
000cda  233c              MOVS     r3,#0x3c
000cdc  2237              MOVS     r2,#0x37
000cde  211d              MOVS     r1,#0x1d
000ce0  208c              MOVS     r0,#0x8c
000ce2  f7fffffe          BL       LCD_WriteBMP
;;;670    		 break;
000ce6  e011              B        |L1.3340|
;;;671    		}
;;;672    		case 7:{
;;;673    		  LCD_WriteBMP(140,120,55,60,(u8 *)gImage_33);
000ce8  4b52              LDR      r3,|L1.3636|
000cea  9300              STR      r3,[sp,#0]
000cec  233c              MOVS     r3,#0x3c
000cee  2237              MOVS     r2,#0x37
000cf0  2178              MOVS     r1,#0x78
000cf2  208c              MOVS     r0,#0x8c
000cf4  f7fffffe          BL       LCD_WriteBMP
;;;674    		 break;
000cf8  e008              B        |L1.3340|
;;;675    		}
;;;676    		case 8:{
;;;677    		  LCD_WriteBMP(140,190,55,60,(u8 *)gImage_33);
000cfa  4b4e              LDR      r3,|L1.3636|
000cfc  9300              STR      r3,[sp,#0]
000cfe  233c              MOVS     r3,#0x3c
000d00  2237              MOVS     r2,#0x37
000d02  21be              MOVS     r1,#0xbe
000d04  208c              MOVS     r0,#0x8c
000d06  f7fffffe          BL       LCD_WriteBMP
;;;678    		 break;
000d0a  bf00              NOP      
                  |L1.3340|
000d0c  bf00              NOP                            ;646
;;;679    		}		
;;;680    	}
;;;681    }							    
000d0e  bd18              POP      {r3,r4,pc}
;;;682    int isClicked(int no,int x,int y)
                          ENDP

                  isClicked PROC
000d10  b510              PUSH     {r4,lr}
;;;683    {
000d12  4603              MOV      r3,r0
;;;684    	int flag = 0;
000d14  2000              MOVS     r0,#0
;;;685       	switch(no){
000d16  2b09              CMP      r3,#9
000d18  d263              BCS      |L1.3554|
000d1a  e8dff003          TBB      [pc,r3]
000d1e  050f              DCB      0x05,0x0f
000d20  19242e38          DCB      0x19,0x24,0x2e,0x38
000d24  434d5700          DCB      0x43,0x4d,0x57,0x00
;;;686    		case 0:{
;;;687    		 if(x >= 25 && x <= 85 && y>= 25 && y<= 100)
000d28  2919              CMP      r1,#0x19
000d2a  db06              BLT      |L1.3386|
000d2c  2955              CMP      r1,#0x55
000d2e  dc04              BGT      |L1.3386|
000d30  2a19              CMP      r2,#0x19
000d32  db02              BLT      |L1.3386|
000d34  2a64              CMP      r2,#0x64
000d36  dc00              BGT      |L1.3386|
;;;688    		 	flag = 1;
000d38  2001              MOVS     r0,#1
                  |L1.3386|
;;;689    		 break;
000d3a  e052              B        |L1.3554|
;;;690    		}
;;;691    		case 1:{
;;;692    		 if(x >= 25 && x <= 85 && y >= 105 && y<= 185)
000d3c  2919              CMP      r1,#0x19
000d3e  db06              BLT      |L1.3406|
000d40  2955              CMP      r1,#0x55
000d42  dc04              BGT      |L1.3406|
000d44  2a69              CMP      r2,#0x69
000d46  db02              BLT      |L1.3406|
000d48  2ab9              CMP      r2,#0xb9
000d4a  dc00              BGT      |L1.3406|
;;;693    		 	flag = 1;
000d4c  2001              MOVS     r0,#1
                  |L1.3406|
;;;694    		 break;
000d4e  e048              B        |L1.3554|
;;;695    		}
;;;696    		case 2:{
;;;697    		  if(x >= 25 && x <= 85 && y >= 190 && y<= 270)
000d50  2919              CMP      r1,#0x19
000d52  db07              BLT      |L1.3428|
000d54  2955              CMP      r1,#0x55
000d56  dc05              BGT      |L1.3428|
000d58  2abe              CMP      r2,#0xbe
000d5a  db03              BLT      |L1.3428|
000d5c  f5b27f87          CMP      r2,#0x10e
000d60  dc00              BGT      |L1.3428|
;;;698    		 	flag = 1;
000d62  2001              MOVS     r0,#1
                  |L1.3428|
;;;699    		 break;
000d64  e03d              B        |L1.3554|
;;;700    		}
;;;701    		case 3:{
;;;702    		  if(x >= 90 && x <= 150 && y >= 25 && y <= 100)
000d66  295a              CMP      r1,#0x5a
000d68  db06              BLT      |L1.3448|
000d6a  2996              CMP      r1,#0x96
000d6c  dc04              BGT      |L1.3448|
000d6e  2a19              CMP      r2,#0x19
000d70  db02              BLT      |L1.3448|
000d72  2a64              CMP      r2,#0x64
000d74  dc00              BGT      |L1.3448|
;;;703    		 	flag = 1;
000d76  2001              MOVS     r0,#1
                  |L1.3448|
;;;704    		 break;
000d78  e033              B        |L1.3554|
;;;705    		}
;;;706    		case 4:{
;;;707    		  if(x >= 90 && x <= 150 && y >= 105 && y <= 185)
000d7a  295a              CMP      r1,#0x5a
000d7c  db06              BLT      |L1.3468|
000d7e  2996              CMP      r1,#0x96
000d80  dc04              BGT      |L1.3468|
000d82  2a69              CMP      r2,#0x69
000d84  db02              BLT      |L1.3468|
000d86  2ab9              CMP      r2,#0xb9
000d88  dc00              BGT      |L1.3468|
;;;708    		 	flag = 1;
000d8a  2001              MOVS     r0,#1
                  |L1.3468|
;;;709    		 break;
000d8c  e029              B        |L1.3554|
;;;710    		}
;;;711    		case 5:{
;;;712    		  if(x >= 90 && x <= 150 && y >= 190 && y <= 270)
000d8e  295a              CMP      r1,#0x5a
000d90  db07              BLT      |L1.3490|
000d92  2996              CMP      r1,#0x96
000d94  dc05              BGT      |L1.3490|
000d96  2abe              CMP      r2,#0xbe
000d98  db03              BLT      |L1.3490|
000d9a  f5b27f87          CMP      r2,#0x10e
000d9e  dc00              BGT      |L1.3490|
;;;713    		 	flag = 1;
000da0  2001              MOVS     r0,#1
                  |L1.3490|
;;;714    		 break;
000da2  e01e              B        |L1.3554|
;;;715    		}
;;;716    		case 6:{
;;;717    		  if(x >= 155 && x <= 210 && y >= 25 && y <= 100)
000da4  299b              CMP      r1,#0x9b
000da6  db06              BLT      |L1.3510|
000da8  29d2              CMP      r1,#0xd2
000daa  dc04              BGT      |L1.3510|
000dac  2a19              CMP      r2,#0x19
000dae  db02              BLT      |L1.3510|
000db0  2a64              CMP      r2,#0x64
000db2  dc00              BGT      |L1.3510|
;;;718    		 	flag = 1;
000db4  2001              MOVS     r0,#1
                  |L1.3510|
;;;719    		 break;
000db6  e014              B        |L1.3554|
;;;720    		}
;;;721    		case 7:{
;;;722    		  if(x >= 150 && x <= 210 && y >= 105 && y <= 185)
000db8  2996              CMP      r1,#0x96
000dba  db06              BLT      |L1.3530|
000dbc  29d2              CMP      r1,#0xd2
000dbe  dc04              BGT      |L1.3530|
000dc0  2a69              CMP      r2,#0x69
000dc2  db02              BLT      |L1.3530|
000dc4  2ab9              CMP      r2,#0xb9
000dc6  dc00              BGT      |L1.3530|
;;;723    		 	flag = 1;
000dc8  2001              MOVS     r0,#1
                  |L1.3530|
;;;724    		 break;
000dca  e00a              B        |L1.3554|
;;;725    		}
;;;726    		case 8:{
;;;727    		  if(x >= 150 && x <= 210 && y >= 190 && y <= 270)
000dcc  2996              CMP      r1,#0x96
000dce  db07              BLT      |L1.3552|
000dd0  29d2              CMP      r1,#0xd2
000dd2  dc05              BGT      |L1.3552|
000dd4  2abe              CMP      r2,#0xbe
000dd6  db03              BLT      |L1.3552|
000dd8  f5b27f87          CMP      r2,#0x10e
000ddc  dc00              BGT      |L1.3552|
;;;728    		 	flag = 1;
000dde  2001              MOVS     r0,#1
                  |L1.3552|
;;;729    		 break;
000de0  bf00              NOP      
                  |L1.3554|
000de2  bf00              NOP                            ;689
;;;730    		}	
;;;731    	}
;;;732    	return flag;
;;;733    }
000de4  bd10              POP      {r4,pc}
;;;734    void getScore(int score)
                          ENDP

                  getScore PROC
000de6  b57c              PUSH     {r2-r6,lr}
;;;735    {
000de8  4604              MOV      r4,r0
;;;736    	int first;
;;;737    	int second;
;;;738    	if(score < 10){
000dea  2c0a              CMP      r4,#0xa
000dec  da00              BGE      |L1.3568|
;;;739    	  first = 0;
000dee  2500              MOVS     r5,#0
                  |L1.3568|
;;;740    	}
;;;741    	first = score / 10;
000df0  200a              MOVS     r0,#0xa
000df2  fb94f5f0          SDIV     r5,r4,r0
;;;742    	second = score % 10;
000df6  fb94f1f0          SDIV     r1,r4,r0
000dfa  fb004611          MLS      r6,r0,r1,r4
;;;743    	ShowNumber(first,1,210,90,Black,White); //first
000dfe  f64f73ff          MOV      r3,#0xffff
000e02  2200              MOVS     r2,#0
000e04  e9cd2300          STRD     r2,r3,[sp,#0]
000e08  235a              MOVS     r3,#0x5a
000e0a  22d2              MOVS     r2,#0xd2
000e0c  2101              MOVS     r1,#1
000e0e  b2e8              UXTB     r0,r5
000e10  f7fffffe          BL       ShowNumber
;;;744    	ShowNumber(second,1,210,105,Black,White); //first
000e14  f64f73ff          MOV      r3,#0xffff
000e18  2200              MOVS     r2,#0
000e1a  e9cd2300          STRD     r2,r3,[sp,#0]
000e1e  2369              MOVS     r3,#0x69
000e20  22d2              MOVS     r2,#0xd2
000e22  2101              MOVS     r1,#1
000e24  b2f0              UXTB     r0,r6
000e26  f7fffffe          BL       ShowNumber
;;;745    }
000e2a  bd7c              POP      {r2-r6,pc}
                  |L1.3628|
                          DCD      Number_Table
                  |L1.3632|
                          DCD      gImage_22
                  |L1.3636|
                          DCD      gImage_33
                          ENDP

                  GameStart PROC
;;;746    void GameStart()
000e38  b50c              PUSH     {r2,r3,lr}
;;;747    {
;;;748    	LCD_Clear(White);
000e3a  f64f70ff          MOV      r0,#0xffff
000e3e  f7fffffe          BL       LCD_Clear
;;;749    	DrawRectangles(85,120,115,166,2);
000e42  2302              MOVS     r3,#2
000e44  9300              STR      r3,[sp,#0]
000e46  23a6              MOVS     r3,#0xa6
000e48  2273              MOVS     r2,#0x73
000e4a  2178              MOVS     r1,#0x78
000e4c  2055              MOVS     r0,#0x55
000e4e  f7fffffe          BL       DrawRectangles
;;;750    	DrawRectangles(135,120,165,166,2);
000e52  2302              MOVS     r3,#2
000e54  9300              STR      r3,[sp,#0]
000e56  23a6              MOVS     r3,#0xa6
000e58  22a5              MOVS     r2,#0xa5
000e5a  2178              MOVS     r1,#0x78
000e5c  2087              MOVS     r0,#0x87
000e5e  f7fffffe          BL       DrawRectangles
;;;751    	ShowLineChinese(7,2,93,128,Black,White);
000e62  f64f73ff          MOV      r3,#0xffff
000e66  2200              MOVS     r2,#0
000e68  e9cd2300          STRD     r2,r3,[sp,#0]
000e6c  2380              MOVS     r3,#0x80
000e6e  225d              MOVS     r2,#0x5d
000e70  2102              MOVS     r1,#2
000e72  2007              MOVS     r0,#7
000e74  f7fffffe          BL       ShowLineChinese
;;;752    	ShowLineChinese(9,2,142,128,Black,White);	
000e78  f64f73ff          MOV      r3,#0xffff
000e7c  2200              MOVS     r2,#0
000e7e  e9cd2300          STRD     r2,r3,[sp,#0]
000e82  2380              MOVS     r3,#0x80
000e84  228e              MOVS     r2,#0x8e
000e86  2102              MOVS     r1,#2
000e88  2009              MOVS     r0,#9
000e8a  f7fffffe          BL       ShowLineChinese
;;;753    }
000e8e  bd0c              POP      {r2,r3,pc}
;;;754    //游戏开始
                          ENDP

                  GameEnd PROC
;;;755    void GameEnd(int score)
000e90  b57c              PUSH     {r2-r6,lr}
;;;756    {
000e92  4604              MOV      r4,r0
;;;757     	int first;
;;;758    	int second;
;;;759       ShowLineChinese(39,4,63,130,Black,White);
000e94  f64f73ff          MOV      r3,#0xffff
000e98  2200              MOVS     r2,#0
000e9a  e9cd2300          STRD     r2,r3,[sp,#0]
000e9e  2382              MOVS     r3,#0x82
000ea0  223f              MOVS     r2,#0x3f
000ea2  2104              MOVS     r1,#4
000ea4  2027              MOVS     r0,#0x27
000ea6  f7fffffe          BL       ShowLineChinese
;;;760       ShowLineChinese(36,3,95,135,Black,White);
000eaa  f64f73ff          MOV      r3,#0xffff
000eae  2200              MOVS     r2,#0
000eb0  e9cd2300          STRD     r2,r3,[sp,#0]
000eb4  2387              MOVS     r3,#0x87
000eb6  225f              MOVS     r2,#0x5f
000eb8  2103              MOVS     r1,#3
000eba  2024              MOVS     r0,#0x24
000ebc  f7fffffe          BL       ShowLineChinese
;;;761      
;;;762    	if(score < 10){
000ec0  2c0a              CMP      r4,#0xa
000ec2  da00              BGE      |L1.3782|
;;;763    	  first = 0;
000ec4  2500              MOVS     r5,#0
                  |L1.3782|
;;;764    	}
;;;765    	first = score / 10;
000ec6  200a              MOVS     r0,#0xa
000ec8  fb94f5f0          SDIV     r5,r4,r0
;;;766    	second = score % 10;
000ecc  fb94f1f0          SDIV     r1,r4,r0
000ed0  fb004611          MLS      r6,r0,r1,r4
;;;767       	ShowNumber(first,1,95,170,Black,White); //first
000ed4  f64f73ff          MOV      r3,#0xffff
000ed8  2200              MOVS     r2,#0
000eda  e9cd2300          STRD     r2,r3,[sp,#0]
000ede  23aa              MOVS     r3,#0xaa
000ee0  225f              MOVS     r2,#0x5f
000ee2  2101              MOVS     r1,#1
000ee4  b2e8              UXTB     r0,r5
000ee6  f7fffffe          BL       ShowNumber
;;;768    	ShowNumber(second,1,95,185,Black,White); //Second
000eea  f64f73ff          MOV      r3,#0xffff
000eee  2200              MOVS     r2,#0
000ef0  e9cd2300          STRD     r2,r3,[sp,#0]
000ef4  23b9              MOVS     r3,#0xb9
000ef6  225f              MOVS     r2,#0x5f
000ef8  2101              MOVS     r1,#1
000efa  b2f0              UXTB     r0,r6
000efc  f7fffffe          BL       ShowNumber
;;;769    }
000f00  bd7c              POP      {r2-r6,pc}
;;;770    //游戏结束
                          ENDP

                  GameHelp PROC
;;;771    void GameHelp()
000f02  b50c              PUSH     {r2,r3,lr}
;;;772    {
;;;773    	ShowLineChinese(11,4,63,130,Black,White);
000f04  f64f73ff          MOV      r3,#0xffff
000f08  2200              MOVS     r2,#0
000f0a  e9cd2300          STRD     r2,r3,[sp,#0]
000f0e  2382              MOVS     r3,#0x82
000f10  223f              MOVS     r2,#0x3f
000f12  2104              MOVS     r1,#4
000f14  200b              MOVS     r0,#0xb
000f16  f7fffffe          BL       ShowLineChinese
;;;774    	ShowLineChinese(15,11,95,65,Black,White);
000f1a  f64f73ff          MOV      r3,#0xffff
000f1e  2200              MOVS     r2,#0
000f20  e9cd2300          STRD     r2,r3,[sp,#0]
000f24  2341              MOVS     r3,#0x41
000f26  225f              MOVS     r2,#0x5f
000f28  210b              MOVS     r1,#0xb
000f2a  200f              MOVS     r0,#0xf
000f2c  f7fffffe          BL       ShowLineChinese
;;;775    	ShowLineChinese(24,12,120,61,Black,White);
000f30  f64f73ff          MOV      r3,#0xffff
000f34  2200              MOVS     r2,#0
000f36  e9cd2300          STRD     r2,r3,[sp,#0]
000f3a  233d              MOVS     r3,#0x3d
000f3c  2278              MOVS     r2,#0x78
000f3e  210c              MOVS     r1,#0xc
000f40  2018              MOVS     r0,#0x18
000f42  f7fffffe          BL       ShowLineChinese
;;;776    }
000f46  bd0c              POP      {r2,r3,pc}
;;;777    //游戏帮助
                          ENDP

                  LCD_ReadRAM PROC
;;;886    ************************************************************************************/
;;;887    u16 LCD_ReadRAM(void)
000f48  2022              MOVS     r0,#0x22
;;;888    {
;;;889      /* Write 16-bit Index (then Read Reg) */
;;;890      LCD->LCD_REG = R34; /* Select GRAM Reg */
000f4a  f04f41d8          MOV      r1,#0x6c000000
000f4e  8008              STRH     r0,[r1,#0]
;;;891      /* Read 16-bit Reg */
;;;892      return LCD->LCD_RAM;
000f50  4608              MOV      r0,r1
000f52  8840              LDRH     r0,[r0,#2]
;;;893    }
000f54  4770              BX       lr
;;;894    
                          ENDP

                  LCD_PowerOn PROC
;;;902    ************************************************************************************/
;;;903    void LCD_PowerOn(void)
000f56  b510              PUSH     {r4,lr}
;;;904    {
;;;905    /* Power On sequence ---------------------------------------------------------*/
;;;906      LCD_WriteReg(R16, 0x0000); /* SAP, BT[3:0], AP, DSTB, SLP, STB */
000f58  2100              MOVS     r1,#0
000f5a  2010              MOVS     r0,#0x10
000f5c  f7fffffe          BL       LCD_WriteReg
;;;907      LCD_WriteReg(R17, 0x0000); /* DC1[2:0], DC0[2:0], VC[2:0] */
000f60  2100              MOVS     r1,#0
000f62  2011              MOVS     r0,#0x11
000f64  f7fffffe          BL       LCD_WriteReg
;;;908      LCD_WriteReg(R18, 0x0000); /* VREG1OUT voltage */
000f68  2100              MOVS     r1,#0
000f6a  2012              MOVS     r0,#0x12
000f6c  f7fffffe          BL       LCD_WriteReg
;;;909      LCD_WriteReg(R19, 0x0000); /* VDV[4:0] for VCOM amplitude*/
000f70  2100              MOVS     r1,#0
000f72  2013              MOVS     r0,#0x13
000f74  f7fffffe          BL       LCD_WriteReg
;;;910      Delay(20);             /* Dis-charge capacitor power voltage (200ms) */
000f78  2014              MOVS     r0,#0x14
000f7a  f7fffffe          BL       Delay
;;;911      LCD_WriteReg(R16, 0x17B0); /* SAP, BT[3:0], AP, DSTB, SLP, STB */
000f7e  f24171b0          MOV      r1,#0x17b0
000f82  2010              MOVS     r0,#0x10
000f84  f7fffffe          BL       LCD_WriteReg
;;;912      LCD_WriteReg(R17, 0x0137); /* DC1[2:0], DC0[2:0], VC[2:0] */
000f88  f2401137          MOV      r1,#0x137
000f8c  2011              MOVS     r0,#0x11
000f8e  f7fffffe          BL       LCD_WriteReg
;;;913      Delay(5);              /* Delay 50 ms */
000f92  2005              MOVS     r0,#5
000f94  f7fffffe          BL       Delay
;;;914      LCD_WriteReg(R18, 0x0139); /* VREG1OUT voltage */
000f98  f2401139          MOV      r1,#0x139
000f9c  2012              MOVS     r0,#0x12
000f9e  f7fffffe          BL       LCD_WriteReg
;;;915      Delay(5);              /* Delay 50 ms */
000fa2  2005              MOVS     r0,#5
000fa4  f7fffffe          BL       Delay
;;;916      LCD_WriteReg(R19, 0x1d00); /* VDV[4:0] for VCOM amplitude */
000fa8  f44f51e8          MOV      r1,#0x1d00
000fac  2013              MOVS     r0,#0x13
000fae  f7fffffe          BL       LCD_WriteReg
;;;917      LCD_WriteReg(R41, 0x0013); /* VCM[4:0] for VCOMH */
000fb2  2113              MOVS     r1,#0x13
000fb4  2029              MOVS     r0,#0x29
000fb6  f7fffffe          BL       LCD_WriteReg
;;;918      Delay(5);              /* Delay 50 ms */
000fba  2005              MOVS     r0,#5
000fbc  f7fffffe          BL       Delay
;;;919      LCD_WriteReg(R7, 0x0173);  /* 262K color and display ON */
000fc0  f2401173          MOV      r1,#0x173
000fc4  2007              MOVS     r0,#7
000fc6  f7fffffe          BL       LCD_WriteReg
;;;920    }
000fca  bd10              POP      {r4,pc}
;;;921    
                          ENDP

                  LCD_DisplayOn PROC
;;;929    ************************************************************************************/
;;;930    void LCD_DisplayOn(void)
000fcc  b500              PUSH     {lr}
;;;931    {
;;;932      LCD_WriteReg(R7, 0x0173); /* 262K color and display ON */
000fce  f2401173          MOV      r1,#0x173
000fd2  2007              MOVS     r0,#7
000fd4  f7fffffe          BL       LCD_WriteReg
;;;933    }
000fd8  bd00              POP      {pc}
;;;934    
                          ENDP

                  LCD_DisplayOff PROC
;;;942    ************************************************************************************/
;;;943    void LCD_DisplayOff(void)
000fda  b500              PUSH     {lr}
;;;944    {
;;;945      LCD_WriteReg(R7, 0x0); 
000fdc  2100              MOVS     r1,#0
000fde  2007              MOVS     r0,#7
000fe0  f7fffffe          BL       LCD_WriteReg
;;;946    }
000fe4  bd00              POP      {pc}
;;;947    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  ASCII_Table
000000  00000000          DCW      0x0000,0x0000
000004  00000000          DCW      0x0000,0x0000
000008  00000000          DCW      0x0000,0x0000
00000c  00000000          DCW      0x0000,0x0000
000010  00000000          DCW      0x0000,0x0000
000014  00000000          DCW      0x0000,0x0000
000018  00000000          DCW      0x0000,0x0000
00001c  00000000          DCW      0x0000,0x0000
000020  00000000          DCW      0x0000,0x0000
000024  00000000          DCW      0x0000,0x0000
000028  00000000          DCW      0x0000,0x0000
00002c  00000000          DCW      0x0000,0x0000
000030  00000180          DCW      0x0000,0x0180
000034  01800180          DCW      0x0180,0x0180
000038  01800180          DCW      0x0180,0x0180
00003c  01800180          DCW      0x0180,0x0180
000040  01800180          DCW      0x0180,0x0180
000044  01800180          DCW      0x0180,0x0180
000048  01800180          DCW      0x0180,0x0180
00004c  00000000          DCW      0x0000,0x0000
000050  01800180          DCW      0x0180,0x0180
000054  00000000          DCW      0x0000,0x0000
000058  00000000          DCW      0x0000,0x0000
00005c  00000000          DCW      0x0000,0x0000
000060  00000000          DCW      0x0000,0x0000
000064  00cc00cc          DCW      0x00cc,0x00cc
000068  00cc00cc          DCW      0x00cc,0x00cc
00006c  00cc00cc          DCW      0x00cc,0x00cc
000070  00000000          DCW      0x0000,0x0000
000074  00000000          DCW      0x0000,0x0000
000078  00000000          DCW      0x0000,0x0000
00007c  00000000          DCW      0x0000,0x0000
000080  00000000          DCW      0x0000,0x0000
000084  00000000          DCW      0x0000,0x0000
000088  00000000          DCW      0x0000,0x0000
00008c  00000000          DCW      0x0000,0x0000
000090  00000000          DCW      0x0000,0x0000
000094  00000000          DCW      0x0000,0x0000
000098  00000000          DCW      0x0000,0x0000
00009c  0c600c60          DCW      0x0c60,0x0c60
0000a0  0c600630          DCW      0x0c60,0x0630
0000a4  06301ffe          DCW      0x0630,0x1ffe
0000a8  1ffe0630          DCW      0x1ffe,0x0630
0000ac  07380318          DCW      0x0738,0x0318
0000b0  1ffe1ffe          DCW      0x1ffe,0x1ffe
0000b4  03180318          DCW      0x0318,0x0318
0000b8  018c018c          DCW      0x018c,0x018c
0000bc  018c0000          DCW      0x018c,0x0000
0000c0  00000080          DCW      0x0000,0x0080
0000c4  03e00ff8          DCW      0x03e0,0x0ff8
0000c8  0e9c1c8c          DCW      0x0e9c,0x1c8c
0000cc  188c008c          DCW      0x188c,0x008c
0000d0  009801f8          DCW      0x0098,0x01f8
0000d4  07e00e80          DCW      0x07e0,0x0e80
0000d8  1c80188c          DCW      0x1c80,0x188c
0000dc  188c189c          DCW      0x188c,0x189c
0000e0  0cb80ff0          DCW      0x0cb8,0x0ff0
0000e4  03e00080          DCW      0x03e0,0x0080
0000e8  00800000          DCW      0x0080,0x0000
0000ec  00000000          DCW      0x0000,0x0000
0000f0  00000000          DCW      0x0000,0x0000
0000f4  0000180e          DCW      0x0000,0x180e
0000f8  0c1b0c11          DCW      0x0c1b,0x0c11
0000fc  06110611          DCW      0x0611,0x0611
000100  03110311          DCW      0x0311,0x0311
000104  019b018e          DCW      0x019b,0x018e
000108  38c06cc0          DCW      0x38c0,0x6cc0
00010c  44604460          DCW      0x4460,0x4460
000110  44304430          DCW      0x4430,0x4430
000114  44186c18          DCW      0x4418,0x6c18
000118  380c0000          DCW      0x380c,0x0000
00011c  00000000          DCW      0x0000,0x0000
000120  000001e0          DCW      0x0000,0x01e0
000124  03f00738          DCW      0x03f0,0x0738
000128  06180618          DCW      0x0618,0x0618
00012c  033001f0          DCW      0x0330,0x01f0
000130  00f000f8          DCW      0x00f0,0x00f8
000134  319c330e          DCW      0x319c,0x330e
000138  1e061c06          DCW      0x1e06,0x1c06
00013c  1c063f06          DCW      0x1c06,0x3f06
000140  73fc21f0          DCW      0x73fc,0x21f0
000144  00000000          DCW      0x0000,0x0000
000148  00000000          DCW      0x0000,0x0000
00014c  00000000          DCW      0x0000,0x0000
000150  00000000          DCW      0x0000,0x0000
000154  000c000c          DCW      0x000c,0x000c
000158  000c000c          DCW      0x000c,0x000c
00015c  000c000c          DCW      0x000c,0x000c
000160  00000000          DCW      0x0000,0x0000
000164  00000000          DCW      0x0000,0x0000
000168  00000000          DCW      0x0000,0x0000
00016c  00000000          DCW      0x0000,0x0000
000170  00000000          DCW      0x0000,0x0000
000174  00000000          DCW      0x0000,0x0000
000178  00000000          DCW      0x0000,0x0000
00017c  00000000          DCW      0x0000,0x0000
000180  00000200          DCW      0x0000,0x0200
000184  03000180          DCW      0x0300,0x0180
000188  00c000c0          DCW      0x00c0,0x00c0
00018c  00600060          DCW      0x0060,0x0060
000190  00300030          DCW      0x0030,0x0030
000194  00300030          DCW      0x0030,0x0030
000198  00300030          DCW      0x0030,0x0030
00019c  00300030          DCW      0x0030,0x0030
0001a0  00600060          DCW      0x0060,0x0060
0001a4  00c000c0          DCW      0x00c0,0x00c0
0001a8  01800300          DCW      0x0180,0x0300
0001ac  02000000          DCW      0x0200,0x0000
0001b0  00000020          DCW      0x0000,0x0020
0001b4  006000c0          DCW      0x0060,0x00c0
0001b8  01800180          DCW      0x0180,0x0180
0001bc  03000300          DCW      0x0300,0x0300
0001c0  06000600          DCW      0x0600,0x0600
0001c4  06000600          DCW      0x0600,0x0600
0001c8  06000600          DCW      0x0600,0x0600
0001cc  06000600          DCW      0x0600,0x0600
0001d0  03000300          DCW      0x0300,0x0300
0001d4  01800180          DCW      0x0180,0x0180
0001d8  00c00060          DCW      0x00c0,0x0060
0001dc  00200000          DCW      0x0020,0x0000
0001e0  00000000          DCW      0x0000,0x0000
0001e4  00000000          DCW      0x0000,0x0000
0001e8  00000000          DCW      0x0000,0x0000
0001ec  00c000c0          DCW      0x00c0,0x00c0
0001f0  06d807f8          DCW      0x06d8,0x07f8
0001f4  01e00330          DCW      0x01e0,0x0330
0001f8  07380000          DCW      0x0738,0x0000
0001fc  00000000          DCW      0x0000,0x0000
000200  00000000          DCW      0x0000,0x0000
000204  00000000          DCW      0x0000,0x0000
000208  00000000          DCW      0x0000,0x0000
00020c  00000000          DCW      0x0000,0x0000
000210  00000000          DCW      0x0000,0x0000
000214  00000000          DCW      0x0000,0x0000
000218  00000000          DCW      0x0000,0x0000
00021c  01800180          DCW      0x0180,0x0180
000220  01800180          DCW      0x0180,0x0180
000224  01803ffc          DCW      0x0180,0x3ffc
000228  3ffc0180          DCW      0x3ffc,0x0180
00022c  01800180          DCW      0x0180,0x0180
000230  01800180          DCW      0x0180,0x0180
000234  00000000          DCW      0x0000,0x0000
000238  00000000          DCW      0x0000,0x0000
00023c  00000000          DCW      0x0000,0x0000
000240  00000000          DCW      0x0000,0x0000
000244  00000000          DCW      0x0000,0x0000
000248  00000000          DCW      0x0000,0x0000
00024c  00000000          DCW      0x0000,0x0000
000250  00000000          DCW      0x0000,0x0000
000254  00000000          DCW      0x0000,0x0000
000258  00000000          DCW      0x0000,0x0000
00025c  00000000          DCW      0x0000,0x0000
000260  00000180          DCW      0x0000,0x0180
000264  01800100          DCW      0x0180,0x0100
000268  01000080          DCW      0x0100,0x0080
00026c  00000000          DCW      0x0000,0x0000
000270  00000000          DCW      0x0000,0x0000
000274  00000000          DCW      0x0000,0x0000
000278  00000000          DCW      0x0000,0x0000
00027c  00000000          DCW      0x0000,0x0000
000280  00000000          DCW      0x0000,0x0000
000284  00000000          DCW      0x0000,0x0000
000288  07e007e0          DCW      0x07e0,0x07e0
00028c  00000000          DCW      0x0000,0x0000
000290  00000000          DCW      0x0000,0x0000
000294  00000000          DCW      0x0000,0x0000
000298  00000000          DCW      0x0000,0x0000
00029c  00000000          DCW      0x0000,0x0000
0002a0  00000000          DCW      0x0000,0x0000
0002a4  00000000          DCW      0x0000,0x0000
0002a8  00000000          DCW      0x0000,0x0000
0002ac  00000000          DCW      0x0000,0x0000
0002b0  00000000          DCW      0x0000,0x0000
0002b4  00000000          DCW      0x0000,0x0000
0002b8  00000000          DCW      0x0000,0x0000
0002bc  00000000          DCW      0x0000,0x0000
0002c0  000000c0          DCW      0x0000,0x00c0
0002c4  00c00000          DCW      0x00c0,0x0000
0002c8  00000000          DCW      0x0000,0x0000
0002cc  00000000          DCW      0x0000,0x0000
0002d0  00000c00          DCW      0x0000,0x0c00
0002d4  0c000600          DCW      0x0c00,0x0600
0002d8  06000600          DCW      0x0600,0x0600
0002dc  03000300          DCW      0x0300,0x0300
0002e0  03000380          DCW      0x0300,0x0380
0002e4  01800180          DCW      0x0180,0x0180
0002e8  018000c0          DCW      0x0180,0x00c0
0002ec  00c000c0          DCW      0x00c0,0x00c0
0002f0  00600060          DCW      0x0060,0x0060
0002f4  00000000          DCW      0x0000,0x0000
0002f8  00000000          DCW      0x0000,0x0000
0002fc  00000000          DCW      0x0000,0x0000
000300  00000000          DCW      0x0000,0x0000
000304  00000000          DCW      0x0000,0x0000
000308  00000000          DCW      0x0000,0x0000
00030c  01800180          DCW      0x0180,0x0180
000310  00000000          DCW      0x0000,0x0000
000314  00000000          DCW      0x0000,0x0000
000318  00000000          DCW      0x0000,0x0000
00031c  00000000          DCW      0x0000,0x0000
000320  01800180          DCW      0x0180,0x0180
000324  00000000          DCW      0x0000,0x0000
000328  00000000          DCW      0x0000,0x0000
00032c  00000000          DCW      0x0000,0x0000
000330  00000000          DCW      0x0000,0x0000
000334  00000000          DCW      0x0000,0x0000
000338  00000000          DCW      0x0000,0x0000
00033c  01800180          DCW      0x0180,0x0180
000340  00000000          DCW      0x0000,0x0000
000344  00000000          DCW      0x0000,0x0000
000348  00000000          DCW      0x0000,0x0000
00034c  00000000          DCW      0x0000,0x0000
000350  01800180          DCW      0x0180,0x0180
000354  01000100          DCW      0x0100,0x0100
000358  00800000          DCW      0x0080,0x0000
00035c  00000000          DCW      0x0000,0x0000
000360  00000000          DCW      0x0000,0x0000
000364  00000000          DCW      0x0000,0x0000
000368  00000000          DCW      0x0000,0x0000
00036c  00000000          DCW      0x0000,0x0000
000370  10001c00          DCW      0x1000,0x1c00
000374  0f8003e0          DCW      0x0f80,0x03e0
000378  00f80018          DCW      0x00f8,0x0018
00037c  00f803e0          DCW      0x00f8,0x03e0
000380  0f801c00          DCW      0x0f80,0x1c00
000384  10000000          DCW      0x1000,0x0000
000388  00000000          DCW      0x0000,0x0000
00038c  00000000          DCW      0x0000,0x0000
000390  00000000          DCW      0x0000,0x0000
000394  00000000          DCW      0x0000,0x0000
000398  00000000          DCW      0x0000,0x0000
00039c  00000000          DCW      0x0000,0x0000
0003a0  1ff80000          DCW      0x1ff8,0x0000
0003a4  00000000          DCW      0x0000,0x0000
0003a8  1ff80000          DCW      0x1ff8,0x0000
0003ac  00000000          DCW      0x0000,0x0000
0003b0  00000000          DCW      0x0000,0x0000
0003b4  00000000          DCW      0x0000,0x0000
0003b8  00000000          DCW      0x0000,0x0000
0003bc  00000000          DCW      0x0000,0x0000
0003c0  00000000          DCW      0x0000,0x0000
0003c4  00000000          DCW      0x0000,0x0000
0003c8  00000000          DCW      0x0000,0x0000
0003cc  00000000          DCW      0x0000,0x0000
0003d0  00080038          DCW      0x0008,0x0038
0003d4  01f007c0          DCW      0x01f0,0x07c0
0003d8  1f001800          DCW      0x1f00,0x1800
0003dc  1f0007c0          DCW      0x1f00,0x07c0
0003e0  01f00038          DCW      0x01f0,0x0038
0003e4  00080000          DCW      0x0008,0x0000
0003e8  00000000          DCW      0x0000,0x0000
0003ec  00000000          DCW      0x0000,0x0000
0003f0  000003e0          DCW      0x0000,0x03e0
0003f4  0ff80c18          DCW      0x0ff8,0x0c18
0003f8  180c180c          DCW      0x180c,0x180c
0003fc  18000c00          DCW      0x1800,0x0c00
000400  06000300          DCW      0x0600,0x0300
000404  018000c0          DCW      0x0180,0x00c0
000408  00c000c0          DCW      0x00c0,0x00c0
00040c  00000000          DCW      0x0000,0x0000
000410  00c000c0          DCW      0x00c0,0x00c0
000414  00000000          DCW      0x0000,0x0000
000418  00000000          DCW      0x0000,0x0000
00041c  00000000          DCW      0x0000,0x0000
000420  00000000          DCW      0x0000,0x0000
000424  07e01818          DCW      0x07e0,0x1818
000428  200429c2          DCW      0x2004,0x29c2
00042c  4a224411          DCW      0x4a22,0x4411
000430  44094409          DCW      0x4409,0x4409
000434  44092209          DCW      0x4409,0x2209
000438  13110ce2          DCW      0x1311,0x0ce2
00043c  40022004          DCW      0x4002,0x2004
000440  181807e0          DCW      0x1818,0x07e0
000444  00000000          DCW      0x0000,0x0000
000448  00000000          DCW      0x0000,0x0000
00044c  00000000          DCW      0x0000,0x0000
000450  00000380          DCW      0x0000,0x0380
000454  038006c0          DCW      0x0380,0x06c0
000458  06c006c0          DCW      0x06c0,0x06c0
00045c  0c600c60          DCW      0x0c60,0x0c60
000460  18301830          DCW      0x1830,0x1830
000464  18303ff8          DCW      0x1830,0x3ff8
000468  3ff8701c          DCW      0x3ff8,0x701c
00046c  600c600c          DCW      0x600c,0x600c
000470  c006c006          DCW      0xc006,0xc006
000474  00000000          DCW      0x0000,0x0000
000478  00000000          DCW      0x0000,0x0000
00047c  00000000          DCW      0x0000,0x0000
000480  000003fc          DCW      0x0000,0x03fc
000484  0ffc0c0c          DCW      0x0ffc,0x0c0c
000488  180c180c          DCW      0x180c,0x180c
00048c  180c0c0c          DCW      0x180c,0x0c0c
000490  07fc0ffc          DCW      0x07fc,0x0ffc
000494  180c300c          DCW      0x180c,0x300c
000498  300c300c          DCW      0x300c,0x300c
00049c  300c180c          DCW      0x300c,0x180c
0004a0  1ffc07fc          DCW      0x1ffc,0x07fc
0004a4  00000000          DCW      0x0000,0x0000
0004a8  00000000          DCW      0x0000,0x0000
0004ac  00000000          DCW      0x0000,0x0000
0004b0  000007c0          DCW      0x0000,0x07c0
0004b4  1ff03838          DCW      0x1ff0,0x3838
0004b8  301c700c          DCW      0x301c,0x700c
0004bc  60060006          DCW      0x6006,0x0006
0004c0  00060006          DCW      0x0006,0x0006
0004c4  00060006          DCW      0x0006,0x0006
0004c8  00066006          DCW      0x0006,0x6006
0004cc  700c301c          DCW      0x700c,0x301c
0004d0  1ff007e0          DCW      0x1ff0,0x07e0
0004d4  00000000          DCW      0x0000,0x0000
0004d8  00000000          DCW      0x0000,0x0000
0004dc  00000000          DCW      0x0000,0x0000
0004e0  000003fe          DCW      0x0000,0x03fe
0004e4  0ffe0e06          DCW      0x0ffe,0x0e06
0004e8  18061806          DCW      0x1806,0x1806
0004ec  30063006          DCW      0x3006,0x3006
0004f0  30063006          DCW      0x3006,0x3006
0004f4  30063006          DCW      0x3006,0x3006
0004f8  30061806          DCW      0x3006,0x1806
0004fc  18060e06          DCW      0x1806,0x0e06
000500  0ffe03fe          DCW      0x0ffe,0x03fe
000504  00000000          DCW      0x0000,0x0000
000508  00000000          DCW      0x0000,0x0000
00050c  00000000          DCW      0x0000,0x0000
000510  00003ffc          DCW      0x0000,0x3ffc
000514  3ffc000c          DCW      0x3ffc,0x000c
000518  000c000c          DCW      0x000c,0x000c
00051c  000c000c          DCW      0x000c,0x000c
000520  1ffc1ffc          DCW      0x1ffc,0x1ffc
000524  000c000c          DCW      0x000c,0x000c
000528  000c000c          DCW      0x000c,0x000c
00052c  000c000c          DCW      0x000c,0x000c
000530  3ffc3ffc          DCW      0x3ffc,0x3ffc
000534  00000000          DCW      0x0000,0x0000
000538  00000000          DCW      0x0000,0x0000
00053c  00000000          DCW      0x0000,0x0000
000540  00003ff8          DCW      0x0000,0x3ff8
000544  3ff80018          DCW      0x3ff8,0x0018
000548  00180018          DCW      0x0018,0x0018
00054c  00180018          DCW      0x0018,0x0018
000550  1ff81ff8          DCW      0x1ff8,0x1ff8
000554  00180018          DCW      0x0018,0x0018
000558  00180018          DCW      0x0018,0x0018
00055c  00180018          DCW      0x0018,0x0018
000560  00180018          DCW      0x0018,0x0018
000564  00000000          DCW      0x0000,0x0000
000568  00000000          DCW      0x0000,0x0000
00056c  00000000          DCW      0x0000,0x0000
000570  00000fe0          DCW      0x0000,0x0fe0
000574  3ff8783c          DCW      0x3ff8,0x783c
000578  600ee006          DCW      0x600e,0xe006
00057c  c0070003          DCW      0xc007,0x0003
000580  0003fe03          DCW      0x0003,0xfe03
000584  fe03c003          DCW      0xfe03,0xc003
000588  c007c006          DCW      0xc007,0xc006
00058c  c00ef03c          DCW      0xc00e,0xf03c
000590  3ff80fe0          DCW      0x3ff8,0x0fe0
000594  00000000          DCW      0x0000,0x0000
000598  00000000          DCW      0x0000,0x0000
00059c  00000000          DCW      0x0000,0x0000
0005a0  0000300c          DCW      0x0000,0x300c
0005a4  300c300c          DCW      0x300c,0x300c
0005a8  300c300c          DCW      0x300c,0x300c
0005ac  300c300c          DCW      0x300c,0x300c
0005b0  3ffc3ffc          DCW      0x3ffc,0x3ffc
0005b4  300c300c          DCW      0x300c,0x300c
0005b8  300c300c          DCW      0x300c,0x300c
0005bc  300c300c          DCW      0x300c,0x300c
0005c0  300c300c          DCW      0x300c,0x300c
0005c4  00000000          DCW      0x0000,0x0000
0005c8  00000000          DCW      0x0000,0x0000
0005cc  00000000          DCW      0x0000,0x0000
0005d0  00000180          DCW      0x0000,0x0180
0005d4  01800180          DCW      0x0180,0x0180
0005d8  01800180          DCW      0x0180,0x0180
0005dc  01800180          DCW      0x0180,0x0180
0005e0  01800180          DCW      0x0180,0x0180
0005e4  01800180          DCW      0x0180,0x0180
0005e8  01800180          DCW      0x0180,0x0180
0005ec  01800180          DCW      0x0180,0x0180
0005f0  01800180          DCW      0x0180,0x0180
0005f4  00000000          DCW      0x0000,0x0000
0005f8  00000000          DCW      0x0000,0x0000
0005fc  00000000          DCW      0x0000,0x0000
000600  00000600          DCW      0x0000,0x0600
000604  06000600          DCW      0x0600,0x0600
000608  06000600          DCW      0x0600,0x0600
00060c  06000600          DCW      0x0600,0x0600
000610  06000600          DCW      0x0600,0x0600
000614  06000600          DCW      0x0600,0x0600
000618  06000618          DCW      0x0600,0x0618
00061c  06180738          DCW      0x0618,0x0738
000620  03f001e0          DCW      0x03f0,0x01e0
000624  00000000          DCW      0x0000,0x0000
000628  00000000          DCW      0x0000,0x0000
00062c  00000000          DCW      0x0000,0x0000
000630  00003006          DCW      0x0000,0x3006
000634  18060c06          DCW      0x1806,0x0c06
000638  06060306          DCW      0x0606,0x0306
00063c  018600c6          DCW      0x0186,0x00c6
000640  00660076          DCW      0x0066,0x0076
000644  00de018e          DCW      0x00de,0x018e
000648  03060606          DCW      0x0306,0x0606
00064c  0c061806          DCW      0x0c06,0x1806
000650  30066006          DCW      0x3006,0x6006
000654  00000000          DCW      0x0000,0x0000
000658  00000000          DCW      0x0000,0x0000
00065c  00000000          DCW      0x0000,0x0000
000660  00000018          DCW      0x0000,0x0018
000664  00180018          DCW      0x0018,0x0018
000668  00180018          DCW      0x0018,0x0018
00066c  00180018          DCW      0x0018,0x0018
000670  00180018          DCW      0x0018,0x0018
000674  00180018          DCW      0x0018,0x0018
000678  00180018          DCW      0x0018,0x0018
00067c  00180018          DCW      0x0018,0x0018
000680  1ff81ff8          DCW      0x1ff8,0x1ff8
000684  00000000          DCW      0x0000,0x0000
000688  00000000          DCW      0x0000,0x0000
00068c  00000000          DCW      0x0000,0x0000
000690  0000e00e          DCW      0x0000,0xe00e
000694  f01ef01e          DCW      0xf01e,0xf01e
000698  f01ed836          DCW      0xf01e,0xd836
00069c  d836d836          DCW      0xd836,0xd836
0006a0  d836cc66          DCW      0xd836,0xcc66
0006a4  cc66cc66          DCW      0xcc66,0xcc66
0006a8  c6c6c6c6          DCW      0xc6c6,0xc6c6
0006ac  c6c6c6c6          DCW      0xc6c6,0xc6c6
0006b0  c386c386          DCW      0xc386,0xc386
0006b4  00000000          DCW      0x0000,0x0000
0006b8  00000000          DCW      0x0000,0x0000
0006bc  00000000          DCW      0x0000,0x0000
0006c0  0000300c          DCW      0x0000,0x300c
0006c4  301c303c          DCW      0x301c,0x303c
0006c8  303c306c          DCW      0x303c,0x306c
0006cc  306c30cc          DCW      0x306c,0x30cc
0006d0  30cc318c          DCW      0x30cc,0x318c
0006d4  330c330c          DCW      0x330c,0x330c
0006d8  360c360c          DCW      0x360c,0x360c
0006dc  3c0c3c0c          DCW      0x3c0c,0x3c0c
0006e0  380c300c          DCW      0x380c,0x300c
0006e4  00000000          DCW      0x0000,0x0000
0006e8  00000000          DCW      0x0000,0x0000
0006ec  00000000          DCW      0x0000,0x0000
0006f0  000007e0          DCW      0x0000,0x07e0
0006f4  1ff8381c          DCW      0x1ff8,0x381c
0006f8  700e6006          DCW      0x700e,0x6006
0006fc  c003c003          DCW      0xc003,0xc003
000700  c003c003          DCW      0xc003,0xc003
000704  c003c003          DCW      0xc003,0xc003
000708  c0036006          DCW      0xc003,0x6006
00070c  700e381c          DCW      0x700e,0x381c
000710  1ff807e0          DCW      0x1ff8,0x07e0
000714  00000000          DCW      0x0000,0x0000
000718  00000000          DCW      0x0000,0x0000
00071c  00000000          DCW      0x0000,0x0000
000720  00000ffc          DCW      0x0000,0x0ffc
000724  1ffc380c          DCW      0x1ffc,0x380c
000728  300c300c          DCW      0x300c,0x300c
00072c  300c300c          DCW      0x300c,0x300c
000730  180c1ffc          DCW      0x180c,0x1ffc
000734  07fc000c          DCW      0x07fc,0x000c
000738  000c000c          DCW      0x000c,0x000c
00073c  000c000c          DCW      0x000c,0x000c
000740  000c000c          DCW      0x000c,0x000c
000744  00000000          DCW      0x0000,0x0000
000748  00000000          DCW      0x0000,0x0000
00074c  00000000          DCW      0x0000,0x0000
000750  000007e0          DCW      0x0000,0x07e0
000754  1ff8381c          DCW      0x1ff8,0x381c
000758  700e6006          DCW      0x700e,0x6006
00075c  e003c003          DCW      0xe003,0xc003
000760  c003c003          DCW      0xc003,0xc003
000764  c003c003          DCW      0xc003,0xc003
000768  e0076306          DCW      0xe007,0x6306
00076c  3f0e3c1c          DCW      0x3f0e,0x3c1c
000770  3ff8f7e0          DCW      0x3ff8,0xf7e0
000774  c0000000          DCW      0xc000,0x0000
000778  00000000          DCW      0x0000,0x0000
00077c  00000000          DCW      0x0000,0x0000
000780  00000ffe          DCW      0x0000,0x0ffe
000784  1ffe3806          DCW      0x1ffe,0x3806
000788  30063006          DCW      0x3006,0x3006
00078c  30063806          DCW      0x3006,0x3806
000790  1ffe07fe          DCW      0x1ffe,0x07fe
000794  03060606          DCW      0x0306,0x0606
000798  0c061806          DCW      0x0c06,0x1806
00079c  18063006          DCW      0x1806,0x3006
0007a0  30066006          DCW      0x3006,0x6006
0007a4  00000000          DCW      0x0000,0x0000
0007a8  00000000          DCW      0x0000,0x0000
0007ac  00000000          DCW      0x0000,0x0000
0007b0  000003e0          DCW      0x0000,0x03e0
0007b4  0ff80c1c          DCW      0x0ff8,0x0c1c
0007b8  180c180c          DCW      0x180c,0x180c
0007bc  000c001c          DCW      0x000c,0x001c
0007c0  03f80fe0          DCW      0x03f8,0x0fe0
0007c4  1e003800          DCW      0x1e00,0x3800
0007c8  30063006          DCW      0x3006,0x3006
0007cc  300e1c1c          DCW      0x300e,0x1c1c
0007d0  0ff807e0          DCW      0x0ff8,0x07e0
0007d4  00000000          DCW      0x0000,0x0000
0007d8  00000000          DCW      0x0000,0x0000
0007dc  00000000          DCW      0x0000,0x0000
0007e0  00007ffe          DCW      0x0000,0x7ffe
0007e4  7ffe0180          DCW      0x7ffe,0x0180
0007e8  01800180          DCW      0x0180,0x0180
0007ec  01800180          DCW      0x0180,0x0180
0007f0  01800180          DCW      0x0180,0x0180
0007f4  01800180          DCW      0x0180,0x0180
0007f8  01800180          DCW      0x0180,0x0180
0007fc  01800180          DCW      0x0180,0x0180
000800  01800180          DCW      0x0180,0x0180
000804  00000000          DCW      0x0000,0x0000
000808  00000000          DCW      0x0000,0x0000
00080c  00000000          DCW      0x0000,0x0000
000810  0000300c          DCW      0x0000,0x300c
000814  300c300c          DCW      0x300c,0x300c
000818  300c300c          DCW      0x300c,0x300c
00081c  300c300c          DCW      0x300c,0x300c
000820  300c300c          DCW      0x300c,0x300c
000824  300c300c          DCW      0x300c,0x300c
000828  300c300c          DCW      0x300c,0x300c
00082c  300c1818          DCW      0x300c,0x1818
000830  1ff807e0          DCW      0x1ff8,0x07e0
000834  00000000          DCW      0x0000,0x0000
000838  00000000          DCW      0x0000,0x0000
00083c  00000000          DCW      0x0000,0x0000
000840  00006003          DCW      0x0000,0x6003
000844  30063006          DCW      0x3006,0x3006
000848  3006180c          DCW      0x3006,0x180c
00084c  180c180c          DCW      0x180c,0x180c
000850  0c180c18          DCW      0x0c18,0x0c18
000854  0e380630          DCW      0x0e38,0x0630
000858  06300770          DCW      0x0630,0x0770
00085c  03600360          DCW      0x0360,0x0360
000860  01c001c0          DCW      0x01c0,0x01c0
000864  00000000          DCW      0x0000,0x0000
000868  00000000          DCW      0x0000,0x0000
00086c  00000000          DCW      0x0000,0x0000
000870  00006003          DCW      0x0000,0x6003
000874  61c361c3          DCW      0x61c3,0x61c3
000878  61c33366          DCW      0x61c3,0x3366
00087c  33663366          DCW      0x3366,0x3366
000880  33663366          DCW      0x3366,0x3366
000884  33661b6c          DCW      0x3366,0x1b6c
000888  1b6c1b6c          DCW      0x1b6c,0x1b6c
00088c  1a2c1e3c          DCW      0x1a2c,0x1e3c
000890  0e380e38          DCW      0x0e38,0x0e38
000894  00000000          DCW      0x0000,0x0000
000898  00000000          DCW      0x0000,0x0000
00089c  00000000          DCW      0x0000,0x0000
0008a0  0000e00f          DCW      0x0000,0xe00f
0008a4  700c3018          DCW      0x700c,0x3018
0008a8  18300c70          DCW      0x1830,0x0c70
0008ac  0e6007c0          DCW      0x0e60,0x07c0
0008b0  03800380          DCW      0x0380,0x0380
0008b4  03c006e0          DCW      0x03c0,0x06e0
0008b8  0c701c30          DCW      0x0c70,0x1c30
0008bc  1818300c          DCW      0x1818,0x300c
0008c0  600ee007          DCW      0x600e,0xe007
0008c4  00000000          DCW      0x0000,0x0000
0008c8  00000000          DCW      0x0000,0x0000
0008cc  00000000          DCW      0x0000,0x0000
0008d0  0000c003          DCW      0x0000,0xc003
0008d4  6006300c          DCW      0x6006,0x300c
0008d8  381c1838          DCW      0x381c,0x1838
0008dc  0c300660          DCW      0x0c30,0x0660
0008e0  07e003c0          DCW      0x07e0,0x03c0
0008e4  01800180          DCW      0x0180,0x0180
0008e8  01800180          DCW      0x0180,0x0180
0008ec  01800180          DCW      0x0180,0x0180
0008f0  01800180          DCW      0x0180,0x0180
0008f4  00000000          DCW      0x0000,0x0000
0008f8  00000000          DCW      0x0000,0x0000
0008fc  00000000          DCW      0x0000,0x0000
000900  00007ffc          DCW      0x0000,0x7ffc
000904  7ffc6000          DCW      0x7ffc,0x6000
000908  30001800          DCW      0x3000,0x1800
00090c  0c000600          DCW      0x0c00,0x0600
000910  03000180          DCW      0x0300,0x0180
000914  00c00060          DCW      0x00c0,0x0060
000918  00300018          DCW      0x0030,0x0018
00091c  000c0006          DCW      0x000c,0x0006
000920  7ffe7ffe          DCW      0x7ffe,0x7ffe
000924  00000000          DCW      0x0000,0x0000
000928  00000000          DCW      0x0000,0x0000
00092c  00000000          DCW      0x0000,0x0000
000930  000003e0          DCW      0x0000,0x03e0
000934  03e00060          DCW      0x03e0,0x0060
000938  00600060          DCW      0x0060,0x0060
00093c  00600060          DCW      0x0060,0x0060
000940  00600060          DCW      0x0060,0x0060
000944  00600060          DCW      0x0060,0x0060
000948  00600060          DCW      0x0060,0x0060
00094c  00600060          DCW      0x0060,0x0060
000950  00600060          DCW      0x0060,0x0060
000954  00600060          DCW      0x0060,0x0060
000958  006003e0          DCW      0x0060,0x03e0
00095c  03e00000          DCW      0x03e0,0x0000
000960  00000030          DCW      0x0000,0x0030
000964  00300060          DCW      0x0030,0x0060
000968  00600060          DCW      0x0060,0x0060
00096c  00c000c0          DCW      0x00c0,0x00c0
000970  00c001c0          DCW      0x00c0,0x01c0
000974  01800180          DCW      0x0180,0x0180
000978  01800300          DCW      0x0180,0x0300
00097c  03000300          DCW      0x0300,0x0300
000980  06000600          DCW      0x0600,0x0600
000984  00000000          DCW      0x0000,0x0000
000988  00000000          DCW      0x0000,0x0000
00098c  00000000          DCW      0x0000,0x0000
000990  000003e0          DCW      0x0000,0x03e0
000994  03e00300          DCW      0x03e0,0x0300
000998  03000300          DCW      0x0300,0x0300
00099c  03000300          DCW      0x0300,0x0300
0009a0  03000300          DCW      0x0300,0x0300
0009a4  03000300          DCW      0x0300,0x0300
0009a8  03000300          DCW      0x0300,0x0300
0009ac  03000300          DCW      0x0300,0x0300
0009b0  03000300          DCW      0x0300,0x0300
0009b4  03000300          DCW      0x0300,0x0300
0009b8  030003e0          DCW      0x0300,0x03e0
0009bc  03e00000          DCW      0x03e0,0x0000
0009c0  00000000          DCW      0x0000,0x0000
0009c4  01c001c0          DCW      0x01c0,0x01c0
0009c8  03600360          DCW      0x0360,0x0360
0009cc  03600630          DCW      0x0360,0x0630
0009d0  06300c18          DCW      0x0630,0x0c18
0009d4  0c180000          DCW      0x0c18,0x0000
0009d8  00000000          DCW      0x0000,0x0000
0009dc  00000000          DCW      0x0000,0x0000
0009e0  00000000          DCW      0x0000,0x0000
0009e4  00000000          DCW      0x0000,0x0000
0009e8  00000000          DCW      0x0000,0x0000
0009ec  00000000          DCW      0x0000,0x0000
0009f0  00000000          DCW      0x0000,0x0000
0009f4  00000000          DCW      0x0000,0x0000
0009f8  00000000          DCW      0x0000,0x0000
0009fc  00000000          DCW      0x0000,0x0000
000a00  00000000          DCW      0x0000,0x0000
000a04  00000000          DCW      0x0000,0x0000
000a08  00000000          DCW      0x0000,0x0000
000a0c  00000000          DCW      0x0000,0x0000
000a10  0000ffff          DCW      0x0000,0xffff
000a14  ffff0000          DCW      0xffff,0x0000
000a18  00000000          DCW      0x0000,0x0000
000a1c  00000000          DCW      0x0000,0x0000
000a20  0000000c          DCW      0x0000,0x000c
000a24  000c000c          DCW      0x000c,0x000c
000a28  000c000c          DCW      0x000c,0x000c
000a2c  000c0000          DCW      0x000c,0x0000
000a30  00000000          DCW      0x0000,0x0000
000a34  00000000          DCW      0x0000,0x0000
000a38  00000000          DCW      0x0000,0x0000
000a3c  00000000          DCW      0x0000,0x0000
000a40  00000000          DCW      0x0000,0x0000
000a44  00000000          DCW      0x0000,0x0000
000a48  00000000          DCW      0x0000,0x0000
000a4c  00000000          DCW      0x0000,0x0000
000a50  00000000          DCW      0x0000,0x0000
000a54  00000000          DCW      0x0000,0x0000
000a58  00000000          DCW      0x0000,0x0000
000a5c  03f007f8          DCW      0x03f0,0x07f8
000a60  0c1c0c0c          DCW      0x0c1c,0x0c0c
000a64  0f000ff0          DCW      0x0f00,0x0ff0
000a68  0cf80c0c          DCW      0x0cf8,0x0c0c
000a6c  0c0c0f1c          DCW      0x0c0c,0x0f1c
000a70  0ff818f0          DCW      0x0ff8,0x18f0
000a74  00000000          DCW      0x0000,0x0000
000a78  00000000          DCW      0x0000,0x0000
000a7c  00000000          DCW      0x0000,0x0000
000a80  00000018          DCW      0x0000,0x0018
000a84  00180018          DCW      0x0018,0x0018
000a88  00180018          DCW      0x0018,0x0018
000a8c  03d80ff8          DCW      0x03d8,0x0ff8
000a90  0c381818          DCW      0x0c38,0x1818
000a94  18181818          DCW      0x1818,0x1818
000a98  18181818          DCW      0x1818,0x1818
000a9c  18180c38          DCW      0x1818,0x0c38
000aa0  0ff803d8          DCW      0x0ff8,0x03d8
000aa4  00000000          DCW      0x0000,0x0000
000aa8  00000000          DCW      0x0000,0x0000
000aac  00000000          DCW      0x0000,0x0000
000ab0  00000000          DCW      0x0000,0x0000
000ab4  00000000          DCW      0x0000,0x0000
000ab8  00000000          DCW      0x0000,0x0000
000abc  03c007f0          DCW      0x03c0,0x07f0
000ac0  0e300c18          DCW      0x0e30,0x0c18
000ac4  00180018          DCW      0x0018,0x0018
000ac8  00180018          DCW      0x0018,0x0018
000acc  0c180e30          DCW      0x0c18,0x0e30
000ad0  07f003c0          DCW      0x07f0,0x03c0
000ad4  00000000          DCW      0x0000,0x0000
000ad8  00000000          DCW      0x0000,0x0000
000adc  00000000          DCW      0x0000,0x0000
000ae0  00001800          DCW      0x0000,0x1800
000ae4  18001800          DCW      0x1800,0x1800
000ae8  18001800          DCW      0x1800,0x1800
000aec  1bc01ff0          DCW      0x1bc0,0x1ff0
000af0  1c301818          DCW      0x1c30,0x1818
000af4  18181818          DCW      0x1818,0x1818
000af8  18181818          DCW      0x1818,0x1818
000afc  18181c30          DCW      0x1818,0x1c30
000b00  1ff01bc0          DCW      0x1ff0,0x1bc0
000b04  00000000          DCW      0x0000,0x0000
000b08  00000000          DCW      0x0000,0x0000
000b0c  00000000          DCW      0x0000,0x0000
000b10  00000000          DCW      0x0000,0x0000
000b14  00000000          DCW      0x0000,0x0000
000b18  00000000          DCW      0x0000,0x0000
000b1c  03c00ff0          DCW      0x03c0,0x0ff0
000b20  0c301818          DCW      0x0c30,0x1818
000b24  1ff81ff8          DCW      0x1ff8,0x1ff8
000b28  00180018          DCW      0x0018,0x0018
000b2c  18381c30          DCW      0x1838,0x1c30
000b30  0ff007c0          DCW      0x0ff0,0x07c0
000b34  00000000          DCW      0x0000,0x0000
000b38  00000000          DCW      0x0000,0x0000
000b3c  00000000          DCW      0x0000,0x0000
000b40  00000f80          DCW      0x0000,0x0f80
000b44  0fc000c0          DCW      0x0fc0,0x00c0
000b48  00c000c0          DCW      0x00c0,0x00c0
000b4c  07f007f0          DCW      0x07f0,0x07f0
000b50  00c000c0          DCW      0x00c0,0x00c0
000b54  00c000c0          DCW      0x00c0,0x00c0
000b58  00c000c0          DCW      0x00c0,0x00c0
000b5c  00c000c0          DCW      0x00c0,0x00c0
000b60  00c000c0          DCW      0x00c0,0x00c0
000b64  00000000          DCW      0x0000,0x0000
000b68  00000000          DCW      0x0000,0x0000
000b6c  00000000          DCW      0x0000,0x0000
000b70  00000000          DCW      0x0000,0x0000
000b74  00000000          DCW      0x0000,0x0000
000b78  00000000          DCW      0x0000,0x0000
000b7c  0de00ff8          DCW      0x0de0,0x0ff8
000b80  0e180c0c          DCW      0x0e18,0x0c0c
000b84  0c0c0c0c          DCW      0x0c0c,0x0c0c
000b88  0c0c0c0c          DCW      0x0c0c,0x0c0c
000b8c  0c0c0e18          DCW      0x0c0c,0x0e18
000b90  0ff80de0          DCW      0x0ff8,0x0de0
000b94  0c000c0c          DCW      0x0c00,0x0c0c
000b98  061c07f8          DCW      0x061c,0x07f8
000b9c  01f00000          DCW      0x01f0,0x0000
000ba0  00000018          DCW      0x0000,0x0018
000ba4  00180018          DCW      0x0018,0x0018
000ba8  00180018          DCW      0x0018,0x0018
000bac  07d80ff8          DCW      0x07d8,0x0ff8
000bb0  1c381818          DCW      0x1c38,0x1818
000bb4  18181818          DCW      0x1818,0x1818
000bb8  18181818          DCW      0x1818,0x1818
000bbc  18181818          DCW      0x1818,0x1818
000bc0  18181818          DCW      0x1818,0x1818
000bc4  00000000          DCW      0x0000,0x0000
000bc8  00000000          DCW      0x0000,0x0000
000bcc  00000000          DCW      0x0000,0x0000
000bd0  000000c0          DCW      0x0000,0x00c0
000bd4  00c00000          DCW      0x00c0,0x0000
000bd8  00000000          DCW      0x0000,0x0000
000bdc  00c000c0          DCW      0x00c0,0x00c0
000be0  00c000c0          DCW      0x00c0,0x00c0
000be4  00c000c0          DCW      0x00c0,0x00c0
000be8  00c000c0          DCW      0x00c0,0x00c0
000bec  00c000c0          DCW      0x00c0,0x00c0
000bf0  00c000c0          DCW      0x00c0,0x00c0
000bf4  00000000          DCW      0x0000,0x0000
000bf8  00000000          DCW      0x0000,0x0000
000bfc  00000000          DCW      0x0000,0x0000
000c00  000000c0          DCW      0x0000,0x00c0
000c04  00c00000          DCW      0x00c0,0x0000
000c08  00000000          DCW      0x0000,0x0000
000c0c  00c000c0          DCW      0x00c0,0x00c0
000c10  00c000c0          DCW      0x00c0,0x00c0
000c14  00c000c0          DCW      0x00c0,0x00c0
000c18  00c000c0          DCW      0x00c0,0x00c0
000c1c  00c000c0          DCW      0x00c0,0x00c0
000c20  00c000c0          DCW      0x00c0,0x00c0
000c24  00c000c0          DCW      0x00c0,0x00c0
000c28  00c000f8          DCW      0x00c0,0x00f8
000c2c  00780000          DCW      0x0078,0x0000
000c30  0000000c          DCW      0x0000,0x000c
000c34  000c000c          DCW      0x000c,0x000c
000c38  000c000c          DCW      0x000c,0x000c
000c3c  0c0c060c          DCW      0x0c0c,0x060c
000c40  030c018c          DCW      0x030c,0x018c
000c44  00cc006c          DCW      0x00cc,0x006c
000c48  00fc019c          DCW      0x00fc,0x019c
000c4c  038c030c          DCW      0x038c,0x030c
000c50  060c0c0c          DCW      0x060c,0x0c0c
000c54  00000000          DCW      0x0000,0x0000
000c58  00000000          DCW      0x0000,0x0000
000c5c  00000000          DCW      0x0000,0x0000
000c60  000000c0          DCW      0x0000,0x00c0
000c64  00c000c0          DCW      0x00c0,0x00c0
000c68  00c000c0          DCW      0x00c0,0x00c0
000c6c  00c000c0          DCW      0x00c0,0x00c0
000c70  00c000c0          DCW      0x00c0,0x00c0
000c74  00c000c0          DCW      0x00c0,0x00c0
000c78  00c000c0          DCW      0x00c0,0x00c0
000c7c  00c000c0          DCW      0x00c0,0x00c0
000c80  00c000c0          DCW      0x00c0,0x00c0
000c84  00000000          DCW      0x0000,0x0000
000c88  00000000          DCW      0x0000,0x0000
000c8c  00000000          DCW      0x0000,0x0000
000c90  00000000          DCW      0x0000,0x0000
000c94  00000000          DCW      0x0000,0x0000
000c98  00000000          DCW      0x0000,0x0000
000c9c  3c7c7eff          DCW      0x3c7c,0x7eff
000ca0  e3c7c183          DCW      0xe3c7,0xc183
000ca4  c183c183          DCW      0xc183,0xc183
000ca8  c183c183          DCW      0xc183,0xc183
000cac  c183c183          DCW      0xc183,0xc183
000cb0  c183c183          DCW      0xc183,0xc183
000cb4  00000000          DCW      0x0000,0x0000
000cb8  00000000          DCW      0x0000,0x0000
000cbc  00000000          DCW      0x0000,0x0000
000cc0  00000000          DCW      0x0000,0x0000
000cc4  00000000          DCW      0x0000,0x0000
000cc8  00000000          DCW      0x0000,0x0000
000ccc  07980ff8          DCW      0x0798,0x0ff8
000cd0  1c381818          DCW      0x1c38,0x1818
000cd4  18181818          DCW      0x1818,0x1818
000cd8  18181818          DCW      0x1818,0x1818
000cdc  18181818          DCW      0x1818,0x1818
000ce0  18181818          DCW      0x1818,0x1818
000ce4  00000000          DCW      0x0000,0x0000
000ce8  00000000          DCW      0x0000,0x0000
000cec  00000000          DCW      0x0000,0x0000
000cf0  00000000          DCW      0x0000,0x0000
000cf4  00000000          DCW      0x0000,0x0000
000cf8  00000000          DCW      0x0000,0x0000
000cfc  03c00ff0          DCW      0x03c0,0x0ff0
000d00  0c301818          DCW      0x0c30,0x1818
000d04  18181818          DCW      0x1818,0x1818
000d08  18181818          DCW      0x1818,0x1818
000d0c  18180c30          DCW      0x1818,0x0c30
000d10  0ff003c0          DCW      0x0ff0,0x03c0
000d14  00000000          DCW      0x0000,0x0000
000d18  00000000          DCW      0x0000,0x0000
000d1c  00000000          DCW      0x0000,0x0000
000d20  00000000          DCW      0x0000,0x0000
000d24  00000000          DCW      0x0000,0x0000
000d28  00000000          DCW      0x0000,0x0000
000d2c  03d80ff8          DCW      0x03d8,0x0ff8
000d30  0c381818          DCW      0x0c38,0x1818
000d34  18181818          DCW      0x1818,0x1818
000d38  18181818          DCW      0x1818,0x1818
000d3c  18180c38          DCW      0x1818,0x0c38
000d40  0ff803d8          DCW      0x0ff8,0x03d8
000d44  00180018          DCW      0x0018,0x0018
000d48  00180018          DCW      0x0018,0x0018
000d4c  00180000          DCW      0x0018,0x0000
000d50  00000000          DCW      0x0000,0x0000
000d54  00000000          DCW      0x0000,0x0000
000d58  00000000          DCW      0x0000,0x0000
000d5c  1bc01ff0          DCW      0x1bc0,0x1ff0
000d60  1c301818          DCW      0x1c30,0x1818
000d64  18181818          DCW      0x1818,0x1818
000d68  18181818          DCW      0x1818,0x1818
000d6c  18181c30          DCW      0x1818,0x1c30
000d70  1ff01bc0          DCW      0x1ff0,0x1bc0
000d74  18001800          DCW      0x1800,0x1800
000d78  18001800          DCW      0x1800,0x1800
000d7c  18000000          DCW      0x1800,0x0000
000d80  00000000          DCW      0x0000,0x0000
000d84  00000000          DCW      0x0000,0x0000
000d88  00000000          DCW      0x0000,0x0000
000d8c  07b003f0          DCW      0x07b0,0x03f0
000d90  00700030          DCW      0x0070,0x0030
000d94  00300030          DCW      0x0030,0x0030
000d98  00300030          DCW      0x0030,0x0030
000d9c  00300030          DCW      0x0030,0x0030
000da0  00300030          DCW      0x0030,0x0030
000da4  00000000          DCW      0x0000,0x0000
000da8  00000000          DCW      0x0000,0x0000
000dac  00000000          DCW      0x0000,0x0000
000db0  00000000          DCW      0x0000,0x0000
000db4  00000000          DCW      0x0000,0x0000
000db8  00000000          DCW      0x0000,0x0000
000dbc  03e003f0          DCW      0x03e0,0x03f0
000dc0  0e380c18          DCW      0x0e38,0x0c18
000dc4  003803f0          DCW      0x0038,0x03f0
000dc8  07c00c00          DCW      0x07c0,0x0c00
000dcc  0c180e38          DCW      0x0c18,0x0e38
000dd0  07f003e0          DCW      0x07f0,0x03e0
000dd4  00000000          DCW      0x0000,0x0000
000dd8  00000000          DCW      0x0000,0x0000
000ddc  00000000          DCW      0x0000,0x0000
000de0  00000000          DCW      0x0000,0x0000
000de4  008000c0          DCW      0x0080,0x00c0
000de8  00c000c0          DCW      0x00c0,0x00c0
000dec  07f007f0          DCW      0x07f0,0x07f0
000df0  00c000c0          DCW      0x00c0,0x00c0
000df4  00c000c0          DCW      0x00c0,0x00c0
000df8  00c000c0          DCW      0x00c0,0x00c0
000dfc  00c000c0          DCW      0x00c0,0x00c0
000e00  07c00780          DCW      0x07c0,0x0780
000e04  00000000          DCW      0x0000,0x0000
000e08  00000000          DCW      0x0000,0x0000
000e0c  00000000          DCW      0x0000,0x0000
000e10  00000000          DCW      0x0000,0x0000
000e14  00000000          DCW      0x0000,0x0000
000e18  00000000          DCW      0x0000,0x0000
000e1c  18181818          DCW      0x1818,0x1818
000e20  18181818          DCW      0x1818,0x1818
000e24  18181818          DCW      0x1818,0x1818
000e28  18181818          DCW      0x1818,0x1818
000e2c  18181c38          DCW      0x1818,0x1c38
000e30  1ff019e0          DCW      0x1ff0,0x19e0
000e34  00000000          DCW      0x0000,0x0000
000e38  00000000          DCW      0x0000,0x0000
000e3c  00000000          DCW      0x0000,0x0000
000e40  00000000          DCW      0x0000,0x0000
000e44  00000000          DCW      0x0000,0x0000
000e48  00000000          DCW      0x0000,0x0000
000e4c  180c0c18          DCW      0x180c,0x0c18
000e50  0c180c18          DCW      0x0c18,0x0c18
000e54  06300630          DCW      0x0630,0x0630
000e58  06300360          DCW      0x0630,0x0360
000e5c  03600360          DCW      0x0360,0x0360
000e60  01c001c0          DCW      0x01c0,0x01c0
000e64  00000000          DCW      0x0000,0x0000
000e68  00000000          DCW      0x0000,0x0000
000e6c  00000000          DCW      0x0000,0x0000
000e70  00000000          DCW      0x0000,0x0000
000e74  00000000          DCW      0x0000,0x0000
000e78  00000000          DCW      0x0000,0x0000
000e7c  41c141c1          DCW      0x41c1,0x41c1
000e80  61c36363          DCW      0x61c3,0x6363
000e84  63636363          DCW      0x6363,0x6363
000e88  36363636          DCW      0x3636,0x3636
000e8c  36361c1c          DCW      0x3636,0x1c1c
000e90  1c1c1c1c          DCW      0x1c1c,0x1c1c
000e94  00000000          DCW      0x0000,0x0000
000e98  00000000          DCW      0x0000,0x0000
000e9c  00000000          DCW      0x0000,0x0000
000ea0  00000000          DCW      0x0000,0x0000
000ea4  00000000          DCW      0x0000,0x0000
000ea8  00000000          DCW      0x0000,0x0000
000eac  381c1c38          DCW      0x381c,0x1c38
000eb0  0c300660          DCW      0x0c30,0x0660
000eb4  03600360          DCW      0x0360,0x0360
000eb8  03600360          DCW      0x0360,0x0360
000ebc  06600c30          DCW      0x0660,0x0c30
000ec0  1c38381c          DCW      0x1c38,0x381c
000ec4  00000000          DCW      0x0000,0x0000
000ec8  00000000          DCW      0x0000,0x0000
000ecc  00000000          DCW      0x0000,0x0000
000ed0  00000000          DCW      0x0000,0x0000
000ed4  00000000          DCW      0x0000,0x0000
000ed8  00000000          DCW      0x0000,0x0000
000edc  30181830          DCW      0x3018,0x1830
000ee0  18301870          DCW      0x1830,0x1870
000ee4  0c600c60          DCW      0x0c60,0x0c60
000ee8  0ce006c0          DCW      0x0ce0,0x06c0
000eec  06c00380          DCW      0x06c0,0x0380
000ef0  03800380          DCW      0x0380,0x0380
000ef4  01800180          DCW      0x0180,0x0180
000ef8  01c000f0          DCW      0x01c0,0x00f0
000efc  00700000          DCW      0x0070,0x0000
000f00  00000000          DCW      0x0000,0x0000
000f04  00000000          DCW      0x0000,0x0000
000f08  00000000          DCW      0x0000,0x0000
000f0c  1ffc1ffc          DCW      0x1ffc,0x1ffc
000f10  0c000600          DCW      0x0c00,0x0600
000f14  03000180          DCW      0x0300,0x0180
000f18  00c00060          DCW      0x00c0,0x0060
000f1c  00300018          DCW      0x0030,0x0018
000f20  1ffc1ffc          DCW      0x1ffc,0x1ffc
000f24  00000000          DCW      0x0000,0x0000
000f28  00000000          DCW      0x0000,0x0000
000f2c  00000000          DCW      0x0000,0x0000
000f30  00000300          DCW      0x0000,0x0300
000f34  018000c0          DCW      0x0180,0x00c0
000f38  00c000c0          DCW      0x00c0,0x00c0
000f3c  00c000c0          DCW      0x00c0,0x00c0
000f40  00c00060          DCW      0x00c0,0x0060
000f44  00600030          DCW      0x0060,0x0030
000f48  00600040          DCW      0x0060,0x0040
000f4c  00c000c0          DCW      0x00c0,0x00c0
000f50  00c000c0          DCW      0x00c0,0x00c0
000f54  00c000c0          DCW      0x00c0,0x00c0
000f58  01800300          DCW      0x0180,0x0300
000f5c  00000000          DCW      0x0000,0x0000
000f60  00000180          DCW      0x0000,0x0180
000f64  01800180          DCW      0x0180,0x0180
000f68  01800180          DCW      0x0180,0x0180
000f6c  01800180          DCW      0x0180,0x0180
000f70  01800180          DCW      0x0180,0x0180
000f74  01800180          DCW      0x0180,0x0180
000f78  01800180          DCW      0x0180,0x0180
000f7c  01800180          DCW      0x0180,0x0180
000f80  01800180          DCW      0x0180,0x0180
000f84  01800180          DCW      0x0180,0x0180
000f88  01800180          DCW      0x0180,0x0180
000f8c  01800000          DCW      0x0180,0x0000
000f90  00000060          DCW      0x0000,0x0060
000f94  00c001c0          DCW      0x00c0,0x01c0
000f98  01800180          DCW      0x0180,0x0180
000f9c  01800180          DCW      0x0180,0x0180
000fa0  01800300          DCW      0x0180,0x0300
000fa4  03000600          DCW      0x0300,0x0600
000fa8  03000100          DCW      0x0300,0x0100
000fac  01800180          DCW      0x0180,0x0180
000fb0  01800180          DCW      0x0180,0x0180
000fb4  01800180          DCW      0x0180,0x0180
000fb8  00c00060          DCW      0x00c0,0x0060
000fbc  00000000          DCW      0x0000,0x0000
000fc0  00000000          DCW      0x0000,0x0000
000fc4  00000000          DCW      0x0000,0x0000
000fc8  00000000          DCW      0x0000,0x0000
000fcc  00000000          DCW      0x0000,0x0000
000fd0  10f01ff8          DCW      0x10f0,0x1ff8
000fd4  0f080000          DCW      0x0f08,0x0000
000fd8  00000000          DCW      0x0000,0x0000
000fdc  00000000          DCW      0x0000,0x0000
000fe0  00000000          DCW      0x0000,0x0000
000fe4  00000000          DCW      0x0000,0x0000
000fe8  00000000          DCW      0x0000,0x0000
000fec  00000000          DCW      0x0000,0x0000

                          AREA ||.data||, DATA, ALIGN=1

                  Chinese_Table
000000  00400040          DCB      0x00,0x40,0x00,0x40
000004  f8408840          DCB      0xf8,0x40,0x88,0x40
000008  88408840          DCB      0x88,0x40,0x88,0x40
00000c  8ffe8840          DCB      0x8f,0xfe,0x88,0x40
000010  8840f840          DCB      0x88,0x40,0xf8,0x40
000014  88408040          DCB      0x88,0x40,0x80,0x40
000018  00400040          DCB      0x00,0x40,0x00,0x40
00001c  00400040          DCB      0x00,0x40,0x00,0x40
000020  01000080          DCB      0x01,0x00,0x00,0x80
000024  3ffe2004          DCB      0x3f,0xfe,0x20,0x04
000028  40081ff0          DCB      0x40,0x08,0x1f,0xf0
00002c  00800080          DCB      0x00,0x80,0x00,0x80
000030  7ffc0080          DCB      0x7f,0xfc,0x00,0x80
000034  00800080          DCB      0x00,0x80,0x00,0x80
000038  00800080          DCB      0x00,0x80,0x00,0x80
00003c  02800100          DCB      0x02,0x80,0x01,0x00
000040  08401020          DCB      0x08,0x40,0x10,0x20
000044  3c0025fc          DCB      0x3c,0x00,0x25,0xfc
000048  34002cf0          DCB      0x34,0x00,0x2c,0xf0
00004c  2490fc90          DCB      0x24,0x90,0xfc,0x90
000050  24903490          DCB      0x24,0x90,0x34,0x90
000054  2c902490          DCB      0x2c,0x90,0x24,0x90
000058  24924512          DCB      0x24,0x92,0x45,0x12
00005c  550e8a00          DCB      0x55,0x0e,0x8a,0x00
000060  10041fc4          DCB      0x10,0x04,0x1f,0xc4
000064  12042204          DCB      0x12,0x04,0x22,0x04
000068  34146894          DCB      0x34,0x14,0x68,0x94
00006c  afd42294          DCB      0xaf,0xd4,0x22,0x94
000070  22142fd4          DCB      0x22,0x14,0x2f,0xd4
000074  22142214          DCB      0x22,0x14,0x22,0x14
000078  220423c4          DCB      0x22,0x04,0x23,0xc4
00007c  2e142008          DCB      0x2e,0x14,0x20,0x08
000080  40202020          DCB      0x40,0x20,0x20,0x20
000084  30202020          DCB      0x30,0x20,0x20,0x20
000088  0020f3fe          DCB      0x00,0x20,0xf3,0xfe
00008c  10201020          DCB      0x10,0x20,0x10,0x20
000090  10201020          DCB      0x10,0x20,0x10,0x20
000094  10201220          DCB      0x10,0x20,0x12,0x20
000098  14201820          DCB      0x14,0x20,0x18,0x20
00009c  10200020          DCB      0x10,0x20,0x00,0x20
0000a0  00100010          DCB      0x00,0x10,0x00,0x10
0000a4  7c104410          DCB      0x7c,0x10,0x44,0x10
0000a8  47fe4410          DCB      0x47,0xfe,0x44,0x10
0000ac  7c104510          DCB      0x7c,0x10,0x45,0x10
0000b0  44904490          DCB      0x44,0x90,0x44,0x90
0000b4  7c100010          DCB      0x7c,0x10,0x00,0x10
0000b8  00100010          DCB      0x00,0x10,0x00,0x10
0000bc  00500020          DCB      0x00,0x50,0x00,0x20
0000c0  00000000          DCB      0x00,0x00,0x00,0x00
0000c4  00000000          DCB      0x00,0x00,0x00,0x00
0000c8  00000000          DCB      0x00,0x00,0x00,0x00
0000cc  00000000          DCB      0x00,0x00,0x00,0x00
0000d0  00003000          DCB      0x00,0x00,0x30,0x00
0000d4  30000000          DCB      0x30,0x00,0x00,0x00
0000d8  30003000          DCB      0x30,0x00,0x30,0x00
0000dc  00000000          DCB      0x00,0x00,0x00,0x00
0000e0  00007ffe          DCB      0x00,0x00,0x7f,0xfe
0000e4  04200420          DCB      0x04,0x20,0x04,0x20
0000e8  04200420          DCB      0x04,0x20,0x04,0x20
0000ec  fffe0420          DCB      0xff,0xfe,0x04,0x20
0000f0  04200420          DCB      0x04,0x20,0x04,0x20
0000f4  08200820          DCB      0x08,0x20,0x08,0x20
0000f8  10202020          DCB      0x10,0x20,0x20,0x20
0000fc  40200000          DCB      0x40,0x20,0x00,0x00
000100  10201830          DCB      0x10,0x20,0x18,0x30
000104  10201048          DCB      0x10,0x20,0x10,0x48
000108  fc8425fe          DCB      0xfc,0x84,0x25,0xfe
00010c  24844400          DCB      0x24,0x84,0x44,0x00
000110  44fc2884          DCB      0x44,0xfc,0x28,0x84
000114  18841484          DCB      0x18,0x84,0x14,0x84
000118  228442fc          DCB      0x22,0x84,0x42,0xfc
00011c  80840000          DCB      0x80,0x84,0x00,0x00
000120  04003fbe          DCB      0x04,0x00,0x3f,0xbe
000124  04243fa8          DCB      0x04,0x24,0x3f,0xa8
000128  04287fa4          DCB      0x04,0x28,0x7f,0xa4
00012c  043208ac          DCB      0x04,0x32,0x08,0xac
000130  10a02ff8          DCB      0x10,0xa0,0x2f,0xf8
000134  48880888          DCB      0x48,0x88,0x08,0x88
000138  08a80890          DCB      0x08,0xa8,0x08,0x90
00013c  00800080          DCB      0x00,0x80,0x00,0x80
000140  00203e20          DCB      0x00,0x20,0x3e,0x20
000144  22202220          DCB      0x22,0x20,0x22,0x20
000148  22fc3e24          DCB      0x22,0xfc,0x3e,0x24
00014c  22242224          DCB      0x22,0x24,0x22,0x24
000150  3e242224          DCB      0x3e,0x24,0x22,0x24
000154  22442744          DCB      0x22,0x44,0x27,0x44
000158  f8840114          DCB      0xf8,0x84,0x01,0x14
00015c  02080000          DCB      0x02,0x08,0x00,0x00
000160  44202220          DCB      0x44,0x20,0x22,0x20
000164  22200fbe          DCB      0x22,0x20,0x0f,0xbe
000168  844054bc          DCB      0x84,0x40,0x54,0xbc
00016c  57082510          DCB      0x57,0x08,0x25,0x10
000170  2510257e          DCB      0x25,0x10,0x25,0x7e
000174  c5104910          DCB      0xc5,0x10,0x49,0x10
000178  49104910          DCB      0x49,0x10,0x49,0x10
00017c  55504220          DCB      0x55,0x50,0x42,0x20
000180  00400050          DCB      0x00,0x40,0x00,0x50
000184  7e480248          DCB      0x7e,0x48,0x02,0x48
000188  444025fe          DCB      0x44,0x40,0x25,0xfe
00018c  18400844          DCB      0x18,0x40,0x08,0x44
000190  0c281430          DCB      0x0c,0x28,0x14,0x30
000194  12202250          DCB      0x12,0x20,0x22,0x50
000198  4192060a          DCB      0x41,0x92,0x06,0x0a
00019c  00060002          DCB      0x00,0x06,0x00,0x02
0001a0  100011f8          DCB      0x10,0x00,0x11,0xf8
0001a4  1108fdf8          DCB      0x11,0x08,0xfd,0xf8
0001a8  110811f8          DCB      0x11,0x08,0x11,0xf8
0001ac  180037fc          DCB      0x18,0x00,0x37,0xfc
0001b0  50409240          DCB      0x50,0x40,0x92,0x40
0001b4  127c1240          DCB      0x12,0x7c,0x12,0x40
0001b8  164015c0          DCB      0x16,0x40,0x15,0xc0
0001bc  587e2000          DCB      0x58,0x7e,0x20,0x00
0001c0  00001ff8          DCB      0x00,0x00,0x1f,0xf8
0001c4  00000000          DCB      0x00,0x00,0x00,0x00
0001c8  00007ffe          DCB      0x00,0x00,0x7f,0xfe
0001cc  01000100          DCB      0x01,0x00,0x01,0x00
0001d0  11201110          DCB      0x11,0x20,0x11,0x10
0001d4  2108410c          DCB      0x21,0x08,0x41,0x0c
0001d8  81040100          DCB      0x81,0x04,0x01,0x00
0001dc  05000200          DCB      0x05,0x00,0x02,0x00
0001e0  01000100          DCB      0x01,0x00,0x01,0x00
0001e4  01f80100          DCB      0x01,0xf8,0x01,0x00
0001e8  01101ff8          DCB      0x01,0x10,0x1f,0xf8
0001ec  10101010          DCB      0x10,0x10,0x10,0x10
0001f0  10101ff0          DCB      0x10,0x10,0x1f,0xf0
0001f4  10100110          DCB      0x10,0x10,0x01,0x10
0001f8  28882444          DCB      0x28,0x88,0x24,0x44
0001fc  44440000          DCB      0x44,0x44,0x00,0x00
000200  01000100          DCB      0x01,0x00,0x01,0x00
000204  01003ff8          DCB      0x01,0x00,0x3f,0xf8
000208  01000100          DCB      0x01,0x00,0x01,0x00
00020c  01047ffe          DCB      0x01,0x04,0x7f,0xfe
000210  01001108          DCB      0x01,0x00,0x11,0x08
000214  11081108          DCB      0x11,0x08,0x11,0x08
000218  11081ff8          DCB      0x11,0x08,0x1f,0xf8
00021c  10080000          DCB      0x10,0x08,0x00,0x00
000220  01000100          DCB      0x01,0x00,0x01,0x00
000224  21042104          DCB      0x21,0x04,0x21,0x04
000228  21042104          DCB      0x21,0x04,0x21,0x04
00022c  3ffc2104          DCB      0x3f,0xfc,0x21,0x04
000230  01002104          DCB      0x01,0x00,0x21,0x04
000234  21042104          DCB      0x21,0x04,0x21,0x04
000238  21043ffc          DCB      0x21,0x04,0x3f,0xfc
00023c  20040000          DCB      0x20,0x04,0x00,0x00
000240  0000fff8          DCB      0x00,0x00,0xff,0xf8
000244  12081248          DCB      0x12,0x08,0x12,0x48
000248  12481248          DCB      0x12,0x48,0x12,0x48
00024c  7e481248          DCB      0x7e,0x48,0x12,0x48
000250  124812a8          DCB      0x12,0x48,0x12,0xa8
000254  1ca0e122          DCB      0x1c,0xa0,0xe1,0x22
000258  01220222          DCB      0x01,0x22,0x02,0x22
00025c  041e0800          DCB      0x04,0x1e,0x08,0x00
000260  10801080          DCB      0x10,0x80,0x10,0x80
000264  20807cfc          DCB      0x20,0x80,0x7c,0xfc
000268  45044504          DCB      0x45,0x04,0x45,0x04
00026c  46047c84          DCB      0x46,0x04,0x7c,0x84
000270  44444464          DCB      0x44,0x44,0x44,0x64
000274  44244404          DCB      0x44,0x24,0x44,0x04
000278  7c044428          DCB      0x7c,0x04,0x44,0x28
00027c  40100000          DCB      0x40,0x10,0x00,0x00
000280  00201120          DCB      0x00,0x20,0x11,0x20
000284  11201124          DCB      0x11,0x20,0x11,0x24
000288  fd3e11e4          DCB      0xfd,0x3e,0x11,0xe4
00028c  17241124          DCB      0x17,0x24,0x11,0x24
000290  11241134          DCB      0x11,0x24,0x11,0x34
000294  11281d20          DCB      0x11,0x28,0x1d,0x20
000298  3102c102          DCB      0x31,0x02,0xc1,0x02
00029c  00fe0000          DCB      0x00,0xfe,0x00,0x00
0002a0  040039f0          DCB      0x04,0x00,0x39,0xf0
0002a4  20103df0          DCB      0x20,0x10,0x3d,0xf0
0002a8  20103ff0          DCB      0x20,0x10,0x3f,0xf0
0002ac  00003190          DCB      0x00,0x00,0x31,0x90
0002b0  29503110          DCB      0x29,0x50,0x31,0x10
0002b4  29902152          DCB      0x29,0x90,0x21,0x52
0002b8  290a318a          DCB      0x29,0x0a,0x31,0x8a
0002bc  21060000          DCB      0x21,0x06,0x00,0x00
0002c0  088008fc          DCB      0x08,0x80,0x08,0xfc
0002c4  09088b08          DCB      0x09,0x08,0x8b,0x08
0002c8  6c904820          DCB      0x6c,0x90,0x48,0x20
0002cc  08c80b08          DCB      0x08,0xc8,0x0b,0x08
0002d0  1ffee808          DCB      0x1f,0xfe,0xe8,0x08
0002d4  49080888          DCB      0x49,0x08,0x08,0x88
0002d8  08c80888          DCB      0x08,0xc8,0x08,0x88
0002dc  08280810          DCB      0x08,0x28,0x08,0x10
0002e0  08200820          DCB      0x08,0x20,0x08,0x20
0002e4  7ffc0820          DCB      0x7f,0xfc,0x08,0x20
0002e8  08200fe0          DCB      0x08,0x20,0x0f,0xe0
0002ec  08200fe0          DCB      0x08,0x20,0x0f,0xe0
0002f0  08200820          DCB      0x08,0x20,0x08,0x20
0002f4  fffe0840          DCB      0xff,0xfe,0x08,0x40
0002f8  0c201810          DCB      0x0c,0x20,0x18,0x10
0002fc  30184010          DCB      0x30,0x18,0x40,0x10
000300  20401040          DCB      0x20,0x40,0x10,0x40
000304  12448148          DCB      0x12,0x44,0x81,0x48
000308  49504bfc          DCB      0x49,0x50,0x4b,0xfc
00030c  12041204          DCB      0x12,0x04,0x12,0x04
000310  23fc2204          DCB      0x23,0xfc,0x22,0x04
000314  e20423fc          DCB      0xe2,0x04,0x23,0xfc
000318  22042204          DCB      0x22,0x04,0x22,0x04
00031c  22142208          DCB      0x22,0x14,0x22,0x08
000320  00087ffc          DCB      0x00,0x08,0x7f,0xfc
000324  01000100          DCB      0x01,0x00,0x01,0x00
000328  01081108          DCB      0x01,0x08,0x11,0x08
00032c  119012a0          DCB      0x11,0x90,0x12,0xa0
000330  22400440          DCB      0x22,0x40,0x04,0x40
000334  04200830          DCB      0x04,0x20,0x08,0x30
000338  1018200e          DCB      0x10,0x18,0x20,0x0e
00033c  40040000          DCB      0x40,0x04,0x00,0x00
000340  00000000          DCB      0x00,0x00,0x00,0x00
000344  00000000          DCB      0x00,0x00,0x00,0x00
000348  00000000          DCB      0x00,0x00,0x00,0x00
00034c  00047ffe          DCB      0x00,0x04,0x7f,0xfe
000350  00000000          DCB      0x00,0x00,0x00,0x00
000354  00000000          DCB      0x00,0x00,0x00,0x00
000358  00000000          DCB      0x00,0x00,0x00,0x00
00035c  00000000          DCB      0x00,0x00,0x00,0x00
000360  00001ff8          DCB      0x00,0x00,0x1f,0xf8
000364  10081008          DCB      0x10,0x08,0x10,0x08
000368  10081008          DCB      0x10,0x08,0x10,0x08
00036c  10081ff8          DCB      0x10,0x08,0x1f,0xf8
000370  10080420          DCB      0x10,0x08,0x04,0x20
000374  06100c08          DCB      0x06,0x10,0x0c,0x08
000378  180c3006          DCB      0x18,0x0c,0x30,0x06
00037c  40040000          DCB      0x40,0x04,0x00,0x00
000380  00201120          DCB      0x00,0x20,0x11,0x20
000384  11201124          DCB      0x11,0x20,0x11,0x24
000388  fd3e11e4          DCB      0xfd,0x3e,0x11,0xe4
00038c  17241124          DCB      0x17,0x24,0x11,0x24
000390  11241134          DCB      0x11,0x24,0x11,0x34
000394  11281d20          DCB      0x11,0x28,0x1d,0x20
000398  3102c102          DCB      0x31,0x02,0xc1,0x02
00039c  00fe0000          DCB      0x00,0xfe,0x00,0x00
0003a0  040039f0          DCB      0x04,0x00,0x39,0xf0
0003a4  20103df0          DCB      0x20,0x10,0x3d,0xf0
0003a8  20103ff0          DCB      0x20,0x10,0x3f,0xf0
0003ac  00003190          DCB      0x00,0x00,0x31,0x90
0003b0  29503110          DCB      0x29,0x50,0x31,0x10
0003b4  29902152          DCB      0x29,0x90,0x21,0x52
0003b8  290a318a          DCB      0x29,0x0a,0x31,0x8a
0003bc  21060000          DCB      0x21,0x06,0x00,0x00
0003c0  00003e7c          DCB      0x00,0x00,0x3e,0x7c
0003c4  22442244          DCB      0x22,0x44,0x22,0x44
0003c8  3e442244          DCB      0x3e,0x44,0x22,0x44
0003cc  22443e44          DCB      0x22,0x44,0x3e,0x44
0003d0  22442444          DCB      0x22,0x44,0x24,0x44
0003d4  22542748          DCB      0x22,0x54,0x27,0x48
0003d8  7a402040          DCB      0x7a,0x40,0x20,0x40
0003dc  00400040          DCB      0x00,0x40,0x00,0x40
0003e0  00007ffe          DCB      0x00,0x00,0x7f,0xfe
0003e4  00080008          DCB      0x00,0x08,0x00,0x08
0003e8  1f881088          DCB      0x1f,0x88,0x10,0x88
0003ec  10881088          DCB      0x10,0x88,0x10,0x88
0003f0  10881f88          DCB      0x10,0x88,0x1f,0x88
0003f4  10880008          DCB      0x10,0x88,0x00,0x08
0003f8  00480028          DCB      0x00,0x48,0x00,0x28
0003fc  00100000          DCB      0x00,0x10,0x00,0x00
000400  0440fffe          DCB      0x04,0x40,0xff,0xfe
000404  04400440          DCB      0x04,0x40,0x04,0x40
000408  44002850          DCB      0x44,0x00,0x28,0x50
00040c  10482ffe          DCB      0x10,0x48,0x2f,0xfe
000410  48409840          DCB      0x48,0x40,0x98,0x40
000414  28a04890          DCB      0x28,0xa0,0x48,0x90
000418  8918090e          DCB      0x89,0x18,0x09,0x0e
00041c  2a041400          DCB      0x2a,0x04,0x14,0x00
000420  13f81a08          DCB      0x13,0xf8,0x1a,0x08
000424  23f84a08          DCB      0x23,0xf8,0x4a,0x08
000428  8bf81000          DCB      0x8b,0xf8,0x10,0x00
00042c  13fe3010          DCB      0x13,0xfe,0x30,0x10
000430  501097fe          DCB      0x50,0x10,0x97,0xfe
000434  10101110          DCB      0x10,0x10,0x11,0x10
000438  11101110          DCB      0x11,0x10,0x11,0x10
00043c  10501020          DCB      0x10,0x50,0x10,0x20
000440  00000000          DCB      0x00,0x00,0x00,0x00
000444  00000000          DCB      0x00,0x00,0x00,0x00
000448  00000000          DCB      0x00,0x00,0x00,0x00
00044c  00047ffe          DCB      0x00,0x04,0x7f,0xfe
000450  00000000          DCB      0x00,0x00,0x00,0x00
000454  00000000          DCB      0x00,0x00,0x00,0x00
000458  00000000          DCB      0x00,0x00,0x00,0x00
00045c  00000000          DCB      0x00,0x00,0x00,0x00
000460  08800c80          DCB      0x08,0x80,0x0c,0x80
000464  08401020          DCB      0x08,0x40,0x10,0x20
000468  10302018          DCB      0x10,0x30,0x20,0x18
00046c  400e9fe4          DCB      0x40,0x0e,0x9f,0xe4
000470  04200420          DCB      0x04,0x20,0x04,0x20
000474  04200420          DCB      0x04,0x20,0x04,0x20
000478  082010a0          DCB      0x08,0x20,0x10,0xa0
00047c  20404000          DCB      0x20,0x40,0x40,0x00
000480  13f81a08          DCB      0x13,0xf8,0x1a,0x08
000484  23f84a08          DCB      0x23,0xf8,0x4a,0x08
000488  8bf81000          DCB      0x8b,0xf8,0x10,0x00
00048c  13fe3010          DCB      0x13,0xfe,0x30,0x10
000490  501097fe          DCB      0x50,0x10,0x97,0xfe
000494  10101110          DCB      0x10,0x10,0x11,0x10
000498  11101110          DCB      0x11,0x10,0x11,0x10
00049c  10501020          DCB      0x10,0x50,0x10,0x20
0004a0  08800c80          DCB      0x08,0x80,0x0c,0x80
0004a4  08401020          DCB      0x08,0x40,0x10,0x20
0004a8  10302018          DCB      0x10,0x30,0x20,0x18
0004ac  400e9fe4          DCB      0x40,0x0e,0x9f,0xe4
0004b0  04200420          DCB      0x04,0x20,0x04,0x20
0004b4  04200420          DCB      0x04,0x20,0x04,0x20
0004b8  082010a0          DCB      0x08,0x20,0x10,0xa0
0004bc  20404000          DCB      0x20,0x40,0x40,0x00
0004c0  00000000          DCB      0x00,0x00,0x00,0x00
0004c4  00000000          DCB      0x00,0x00,0x00,0x00
0004c8  00000000          DCB      0x00,0x00,0x00,0x00
0004cc  00000000          DCB      0x00,0x00,0x00,0x00
0004d0  00003000          DCB      0x00,0x00,0x30,0x00
0004d4  30000000          DCB      0x30,0x00,0x00,0x00
0004d8  30003000          DCB      0x30,0x00,0x30,0x00
0004dc  00000000          DCB      0x00,0x00,0x00,0x00
0004e0  44202220          DCB      0x44,0x20,0x22,0x20
0004e4  22200fbe          DCB      0x22,0x20,0x0f,0xbe
0004e8  844054bc          DCB      0x84,0x40,0x54,0xbc
0004ec  57082510          DCB      0x57,0x08,0x25,0x10
0004f0  2510257e          DCB      0x25,0x10,0x25,0x7e
0004f4  c5104910          DCB      0xc5,0x10,0x49,0x10
0004f8  49104910          DCB      0x49,0x10,0x49,0x10
0004fc  55504220          DCB      0x55,0x50,0x42,0x20
000500  00400050          DCB      0x00,0x40,0x00,0x50
000504  7e480248          DCB      0x7e,0x48,0x02,0x48
000508  444025fe          DCB      0x44,0x40,0x25,0xfe
00050c  18400844          DCB      0x18,0x40,0x08,0x44
000510  0c281430          DCB      0x0c,0x28,0x14,0x30
000514  12202250          DCB      0x12,0x20,0x22,0x50
000518  4192060a          DCB      0x41,0x92,0x06,0x0a
00051c  00060002          DCB      0x00,0x06,0x00,0x02
000520  10201020          DCB      0x10,0x20,0x10,0x20
000524  202023fe          DCB      0x20,0x20,0x23,0xfe
000528  4820f020          DCB      0x48,0x20,0xf0,0x20
00052c  11fc2000          DCB      0x11,0xfc,0x20,0x00
000530  4000f9fc          DCB      0x40,0x00,0xf9,0xfc
000534  01040104          DCB      0x01,0x04,0x01,0x04
000538  1904e1fc          DCB      0x19,0x04,0xe1,0xfc
00053c  01040000          DCB      0x01,0x04,0x00,0x00
000540  01000100          DCB      0x01,0x00,0x01,0x00
000544  fffe0100          DCB      0xff,0xfe,0x01,0x00
000548  3ff82108          DCB      0x3f,0xf8,0x21,0x08
00054c  21083ff8          DCB      0x21,0x08,0x3f,0xf8
000550  23080580          DCB      0x23,0x08,0x05,0x80
000554  05400930          DCB      0x05,0x40,0x09,0x30
000558  310ec104          DCB      0x31,0x0e,0xc1,0x04
00055c  01000100          DCB      0x01,0x00,0x01,0x00
                  Number_Table
000560  000007c0          DCB      0x00,0x00,0x07,0xc0
000564  08201010          DCB      0x08,0x20,0x10,0x10
000568  10101010          DCB      0x10,0x10,0x10,0x10
00056c  10101010          DCB      0x10,0x10,0x10,0x10
000570  10101010          DCB      0x10,0x10,0x10,0x10
000574  10101010          DCB      0x10,0x10,0x10,0x10
000578  10100820          DCB      0x10,0x10,0x08,0x20
00057c  07c00000          DCB      0x07,0xc0,0x00,0x00
000580  00000100          DCB      0x00,0x00,0x01,0x00
000584  03000500          DCB      0x03,0x00,0x05,0x00
000588  01000100          DCB      0x01,0x00,0x01,0x00
00058c  01000100          DCB      0x01,0x00,0x01,0x00
000590  01000100          DCB      0x01,0x00,0x01,0x00
000594  01000100          DCB      0x01,0x00,0x01,0x00
000598  01000100          DCB      0x01,0x00,0x01,0x00
00059c  07c00000          DCB      0x07,0xc0,0x00,0x00
0005a0  000007c0          DCB      0x00,0x00,0x07,0xc0
0005a4  08201010          DCB      0x08,0x20,0x10,0x10
0005a8  10100010          DCB      0x10,0x10,0x00,0x10
0005ac  001000e0          DCB      0x00,0x10,0x00,0xe0
0005b0  03000400          DCB      0x03,0x00,0x04,0x00
0005b4  08001000          DCB      0x08,0x00,0x10,0x00
0005b8  10101010          DCB      0x10,0x10,0x10,0x10
0005bc  1ff00000          DCB      0x1f,0xf0,0x00,0x00
0005c0  00000fe0          DCB      0x00,0x00,0x0f,0xe0
0005c4  10101010          DCB      0x10,0x10,0x10,0x10
0005c8  00100020          DCB      0x00,0x10,0x00,0x20
0005cc  00400180          DCB      0x00,0x40,0x01,0x80
0005d0  00400020          DCB      0x00,0x40,0x00,0x20
0005d4  00100010          DCB      0x00,0x10,0x00,0x10
0005d8  10101020          DCB      0x10,0x10,0x10,0x20
0005dc  0fc00000          DCB      0x0f,0xc0,0x00,0x00
0005e0  00000180          DCB      0x00,0x00,0x01,0x80
0005e4  02800280          DCB      0x02,0x80,0x02,0x80
0005e8  02800480          DCB      0x02,0x80,0x04,0x80
0005ec  04800880          DCB      0x04,0x80,0x08,0x80
0005f0  08801080          DCB      0x08,0x80,0x10,0x80
0005f4  20803ff0          DCB      0x20,0x80,0x3f,0xf0
0005f8  00800080          DCB      0x00,0x80,0x00,0x80
0005fc  03e00000          DCB      0x03,0xe0,0x00,0x00
000600  00001ff0          DCB      0x00,0x00,0x1f,0xf0
000604  10001000          DCB      0x10,0x00,0x10,0x00
000608  10001000          DCB      0x10,0x00,0x10,0x00
00060c  17c01820          DCB      0x17,0xc0,0x18,0x20
000610  10100010          DCB      0x10,0x10,0x00,0x10
000614  00100010          DCB      0x00,0x10,0x00,0x10
000618  10101020          DCB      0x10,0x10,0x10,0x20
00061c  0fc00000          DCB      0x0f,0xc0,0x00,0x00
000620  000007c0          DCB      0x00,0x00,0x07,0xc0
000624  08201010          DCB      0x08,0x20,0x10,0x10
000628  10101000          DCB      0x10,0x10,0x10,0x00
00062c  100017c0          DCB      0x10,0x00,0x17,0xc0
000630  18201010          DCB      0x18,0x20,0x10,0x10
000634  10101010          DCB      0x10,0x10,0x10,0x10
000638  10100820          DCB      0x10,0x10,0x08,0x20
00063c  07c00000          DCB      0x07,0xc0,0x00,0x00
000640  00001ff0          DCB      0x00,0x00,0x1f,0xf0
000644  10101010          DCB      0x10,0x10,0x10,0x10
000648  00200020          DCB      0x00,0x20,0x00,0x20
00064c  00400080          DCB      0x00,0x40,0x00,0x80
000650  00800100          DCB      0x00,0x80,0x01,0x00
000654  01000100          DCB      0x01,0x00,0x01,0x00
000658  02000200          DCB      0x02,0x00,0x02,0x00
00065c  02000000          DCB      0x02,0x00,0x00,0x00
000660  000007c0          DCB      0x00,0x00,0x07,0xc0
000664  08201010          DCB      0x08,0x20,0x10,0x10
000668  10101010          DCB      0x10,0x10,0x10,0x10
00066c  082007c0          DCB      0x08,0x20,0x07,0xc0
000670  08201010          DCB      0x08,0x20,0x10,0x10
000674  10101010          DCB      0x10,0x10,0x10,0x10
000678  10100820          DCB      0x10,0x10,0x08,0x20
00067c  07c00000          DCB      0x07,0xc0,0x00,0x00
000680  000007c0          DCB      0x00,0x00,0x07,0xc0
000684  08201010          DCB      0x08,0x20,0x10,0x10
000688  10101010          DCB      0x10,0x10,0x10,0x10
00068c  10100830          DCB      0x10,0x10,0x08,0x30
000690  07d00010          DCB      0x07,0xd0,0x00,0x10
000694  00101010          DCB      0x00,0x10,0x10,0x10
000698  10100820          DCB      0x10,0x10,0x08,0x20
00069c  07c00000          DCB      0x07,0xc0,0x00,0x00
                  TextColor
0006a0  0000              DCW      0x0000
                  BackColor
0006a2  ffff              DCW      0xffff
                  DeviceCode
0006a4  0000              DCB      0x00,0x00
